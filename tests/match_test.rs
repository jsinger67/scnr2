/// This file contains a hopefully increasing number of match tests to verify the correctness of the
/// scanner.
///
/// Some tests are based on the https://github.com/kkos/oniguruma/blob/master/test/test_utf8.c file
/// from the Oniguruma project.
/// Copyright (c) 2002-2019 K.Kosako kkosako0@gmail.com All rights reserved.
use scnr2::scanner;

fn format_matches(expected: &[scnr2::Match], input: &str) -> String {
    format!(
        "[{}]",
        expected
            .iter()
            .map(|m| format!(
                "(\"{}\", {}, {})",
                &input[m.span.start..m.span.end],
                m.span.start,
                m.span.end
            ))
            .collect::<Vec<_>>()
            .join(", ")
    )
}

/// To help type inference in the macro
fn format_expected_matches(expected: &[(&str, usize, usize)]) -> String {
    format!("{expected:?}")
}

macro_rules! scan_test {
    ($test_name:ident, $module:ident, $scanner:ident, $pattern:expr, $input:expr, $expected:expr, $test_num:expr) => {
        scanner! {
            $scanner {
                mode M {
                    token $pattern => 0;
                }
            }
        }
        #[test]
        fn $test_name() {
            use $module::$scanner as S;
            let scanner = S::new();
            let matches = scanner.find_matches($input, 0).collect::<Vec<_>>();
            const EXPECTED_MATCHES: &[(&str, usize, usize)] = $expected;
            assert_eq!(
                matches.len(),
                EXPECTED_MATCHES.len(),
                "{}: Unexpected match count exp: {:?}, act: {:?}",
                $test_num,
                format_expected_matches(&EXPECTED_MATCHES),
                format_matches(&matches, $input)
            );
            for (i, ma) in EXPECTED_MATCHES.iter().enumerate() {
                assert_eq!(
                    matches[i].span.start, ma.1,
                    concat!($test_num, ": Match start does not match")
                );
                assert_eq!(
                    matches[i].span.end, ma.2,
                    concat!($test_num, ": Match end does not match")
                );
                assert_eq!(
                    &($input)[ma.1..ma.2],
                    ma.0,
                    concat!($test_num, ": Matched substring does not match expected")
                );
            }
        }
    };
}

// -------------------------------------------------------------------------
// x2("", "", 0, 0);
scan_test!(case_0, s0, S0, r#""#, "", &[], 0);

// -------------------------------------------------------------------------
// x2("^", "", 0, 0);
// UnsupportedFeatureError("StartLine Look(Start)")

// -------------------------------------------------------------------------
// x2("^a", "\na", 1, 2);
// UnsupportedFeatureError("StartLine Look(Start)")

// -------------------------------------------------------------------------
// x2("$", "", 0, 0);
// UnsupportedFeatureError("EndLine Look(End)")

// -------------------------------------------------------------------------
// x2("$\\O", "bb\n", 2, 3);
// EscapeUnrecognized

// -------------------------------------------------------------------------
// x2("\\G", "", 0, 0);
// EscapeUnrecognized

// -------------------------------------------------------------------------
// x2("\\A", "", 0, 0);
// UnsupportedFeatureError("StartLine Look(Start)")

// -------------------------------------------------------------------------
// x2("\\Z", "", 0, 0);
// EscapeUnrecognized

// -------------------------------------------------------------------------
// x2("\\z", "", 0, 0);
// UnsupportedFeatureError("EndLine Look(End)")

// -------------------------------------------------------------------------
// x2("^$", "", 0, 0);
// UnsupportedFeatureError("StartLine Look(Start)")

// -------------------------------------------------------------------------
// x2("\\ca", "\001", 0, 1);
// EscapeUnrecognized

// -------------------------------------------------------------------------
// x2("\\C-b", "\002", 0, 1);
// EscapeUnrecognized

// -------------------------------------------------------------------------
// x2("\\c\\\\", "\034", 0, 1);
// EscapeUnrecognized

// -------------------------------------------------------------------------
// x2("q[\\c\\\\]", "q\034", 0, 2);
// EscapeUnrecognized

// -------------------------------------------------------------------------
// x2("", "a", 0, 0);
scan_test!(case_14, s14, S14, r#""#, "a", &[], 14);

// -------------------------------------------------------------------------
// x2("a", "a", 0, 1);
scan_test!(case_15, s15, S15, r#"a"#, "a", &[("a", 0, 1)], 15);

// -------------------------------------------------------------------------
// x2("\\x61", "a", 0, 1);
scan_test!(case_16, s16, S16, r#"\x61"#, "a", &[("a", 0, 1)], 16);

// -------------------------------------------------------------------------
// x2("aa", "aa", 0, 2);
scan_test!(case_17, s17, S17, r#"aa"#, "aa", &[("aa", 0, 2)], 17);

// -------------------------------------------------------------------------
// x2("aaa", "aaa", 0, 3);
scan_test!(case_18, s18, S18, r#"aaa"#, "aaa", &[("aaa", 0, 3)], 18);

// -------------------------------------------------------------------------
// x2("aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa", "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa", 0, 35);
scan_test!(
    case_19,
    s19,
    S19,
    r#"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"#,
    "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
    &[("aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa", 0, 35)],
    19
);

// -------------------------------------------------------------------------
// x2("ab", "ab", 0, 2);
scan_test!(case_20, s20, S20, r#"ab"#, "ab", &[("ab", 0, 2)], 20);

// -------------------------------------------------------------------------
// x2("b", "ab", 1, 2);
scan_test!(case_21, s21, S21, r#"b"#, "ab", &[("b", 1, 2)], 21);

// -------------------------------------------------------------------------
// x2("bc", "abc", 1, 3);
scan_test!(case_22, s22, S22, r#"bc"#, "abc", &[("bc", 1, 3)], 22);

// -------------------------------------------------------------------------
// x2("(?i:#RET#)", "#INS##RET#", 5, 10);
scan_test!(
    case_23,
    s23,
    S23,
    r#"(?i:#RET#)"#,
    "#INS##RET#",
    &[("#RET#", 5, 10)],
    23
);

// -------------------------------------------------------------------------
// x2("\\17", "\017", 0, 1);
// UnsupportedBackreference

// -------------------------------------------------------------------------
// x2("\\x1f", "\x1f", 0, 1);
scan_test!(case_25, s25, S25, r#"\x1f"#, "\x1f", &[("\x1f", 0, 1)], 25);

// -------------------------------------------------------------------------
// x2("a(?#....\\\\JJJJ)b", "ab", 0, 2);
// FlagUnrecognized FlagUnrecognized

// -------------------------------------------------------------------------
// x2("(?x)  G (o O(?-x)oO) g L", "GoOoOgLe", 0, 7);
scan_test!(
    case_27,
    s27,
    S27,
    r#"(?x)  G (o O(?-x)oO) g L"#,
    "GoOoOgLe",
    &[("GoOoOgL", 0, 7)],
    27
);

// -------------------------------------------------------------------------
// x2(".", "a", 0, 1);
scan_test!(case_28, s28, S28, r#"."#, "a", &[("a", 0, 1)], 28);

// -------------------------------------------------------------------------
// n(".", "");
scan_test!(case_29, s29, S29, r#"."#, "", &[], 29);

// -------------------------------------------------------------------------
// x2("..", "ab", 0, 2);
scan_test!(case_30, s30, S30, r#".."#, "ab", &[("ab", 0, 2)], 30);
// -------------------------------------------------------------------------
// x2("\\w", "e", 0, 1);
scan_test!(case_31, s31, S31, r#"\w"#, "e", &[("e", 0, 1)], 31);

// -------------------------------------------------------------------------
// n("\\W", "e");
scan_test!(case_32, s32, S32, r#"\W"#, "e", &[], 32);

// -------------------------------------------------------------------------
// x2("\\s", " ", 0, 1);
scan_test!(case_33, s33, S33, r#"\s"#, " ", &[(" ", 0, 1)], 33);

// -------------------------------------------------------------------------
// x2("\\S", "b", 0, 1);
scan_test!(case_34, s34, S34, r#"\S"#, "b", &[("b", 0, 1)], 34);

// -------------------------------------------------------------------------
// x2("\\d", "4", 0, 1);
scan_test!(case_35, s35, S35, r#"\d"#, "4", &[("4", 0, 1)], 35);

// -------------------------------------------------------------------------
// n("\\D", "4");
scan_test!(case_36, s36, S36, r#"\D"#, "4", &[], 36);

// -------------------------------------------------------------------------
// x2("\\b", "z ", 0, 0);
// UnsupportedFeatureError("WordUnicode Look(WordUnicode)")

// -------------------------------------------------------------------------
// x2("\\b", " z", 1, 1);
// UnsupportedFeatureError("WordUnicode Look(WordUnicode)")

// -------------------------------------------------------------------------
// x2("\\b", "  z ", 2, 2);
// UnsupportedFeatureError("WordUnicode Look(WordUnicode)")

// -------------------------------------------------------------------------
// x2("\\B", "zz ", 1, 1);
// UnsupportedFeatureError("WordUnicodeNegate Look(WordUnicodeNegate)")

// -------------------------------------------------------------------------
// x2("\\B", "z ", 2, 2);
// UnsupportedFeatureError("WordUnicodeNegate Look(WordUnicodeNegate)")

// -------------------------------------------------------------------------
// x2("\\B", " z", 0, 0);
// UnsupportedFeatureError("WordUnicodeNegate Look(WordUnicodeNegate)")

// -------------------------------------------------------------------------
// x2("[ab]", "b", 0, 1);
scan_test!(case_43, s43, S43, r#"[ab]"#, "b", &[("b", 0, 1)], 43);

// -------------------------------------------------------------------------
// n("[ab]", "c");
scan_test!(case_44, s44, S44, r#"[ab]"#, "c", &[], 44);

// -------------------------------------------------------------------------
// x2("[a-z]", "t", 0, 1);
scan_test!(case_45, s45, S45, r#"[a-z]"#, "t", &[("t", 0, 1)], 45);

// -------------------------------------------------------------------------
// n("[^a]", "a");
scan_test!(case_46, s46, S46, r#"[^a]"#, "a", &[], 46);

// -------------------------------------------------------------------------
// x2("[^a]", "\n", 0, 1);
scan_test!(case_47, s47, S47, r#"[^a]"#, "\n", &[("\n", 0, 1)], 47);

// -------------------------------------------------------------------------
// x2("[]]", "]", 0, 1);
scanner! { S48 { mode M { token r#"[]]"# => 0; } } }
#[test]
fn case_48() {
    use s48::S48 as S;
    let scanner = S::new();
    let matches = scanner.find_matches("]", 0).collect::<Vec<_>>();
    const EXPECTED_MATCHES: &[(&str, usize, usize)] = &[("]", 0, 1)];
    assert_eq!(
        matches.len(),
        EXPECTED_MATCHES.len(),
        "48: Unexpected match count"
    );
    for (i, ma) in EXPECTED_MATCHES.iter().enumerate() {
        assert_eq!(
            matches[i].span.start, ma.1,
            "48: Match start does not match"
        );
        assert_eq!(matches[i].span.end, ma.2, "48: Match end does not match");
        assert_eq!(
            &"]"[ma.1..ma.2],
            ma.0,
            "48: Matched substring does not match expected"
        );
    }
}

// -------------------------------------------------------------------------
// n("[^]]", "]");
scan_test!(case_49, s49, S49, r#"[^]]"#, "]", &[], 49);

// -------------------------------------------------------------------------
// x2("[\\^]+", "0^^1", 1, 3);
scan_test!(case_50, s50, S50, r#"[\\^]+"#, "0^^1", &[("^^", 1, 3)], 50);
// -------------------------------------------------------------------------
// x2("[b-]", "b", 0, 1);
scan_test!(case_51, s51, S51, r#"[b-]"#, "b", &[("b", 0, 1)], 51);

// -------------------------------------------------------------------------
// x2("[b-]", "-", 0, 1);
scan_test!(case_52, s52, S52, r#"[b-]"#, "-", &[("-", 0, 1)], 52);

// -------------------------------------------------------------------------
// x2("[\\w]", "z", 0, 1);
scan_test!(case_53, s53, S53, r#"[\w]"#, "z", &[("z", 0, 1)], 53);

// -------------------------------------------------------------------------
// n("[\\w]", " ");
scan_test!(case_54, s54, S54, r#"[\w]"#, " ", &[], 54);

// -------------------------------------------------------------------------
// x2("[\\W]", "b$", 1, 2);
scan_test!(case_55, s55, S55, r#"[\W]"#, "b$", &[("$", 1, 2)], 55);

// -------------------------------------------------------------------------
// x2("[\\d]", "5", 0, 1);
scan_test!(case_56, s56, S56, r#"[\d]"#, "5", &[("5", 0, 1)], 56);

// -------------------------------------------------------------------------
// n("[\\d]", "e");
scan_test!(case_57, s57, S57, r#"[\d]"#, "e", &[], 57);

// -------------------------------------------------------------------------
// x2("[\\D]", "t", 0, 1);
scan_test!(case_58, s58, S58, r#"[\D]"#, "t", &[("t", 0, 1)], 58);

// -------------------------------------------------------------------------
// n("[\\D]", "3");
scan_test!(case_59, s59, S59, r#"[\D]"#, "3", &[], 59);

// -------------------------------------------------------------------------
// x2("[\\s]", " ", 0, 1);
scan_test!(case_60, s60, S60, r#"[\s]"#, " ", &[(" ", 0, 1)], 60);

// -------------------------------------------------------------------------
// n("[\\s]", "a");
scan_test!(case_61, s61, S61, r#"[\s]"#, "a", &[], 61);

// -------------------------------------------------------------------------
// x2("[\\S]", "b", 0, 1);
scan_test!(case_62, s62, S62, r#"[\S]"#, "b", &[("b", 0, 1)], 62);

// -------------------------------------------------------------------------
// n("[\\S]", " ");
scan_test!(case_63, s63, S63, r#"[\S]"#, " ", &[], 63);

// -------------------------------------------------------------------------
// x2("[\\w\\d]", "2", 0, 1);
scan_test!(case_64, s64, S64, r#"[\w\d]"#, "2", &[("2", 0, 1)], 64);

// -------------------------------------------------------------------------
// n("[\\w\\d]", " ");
scan_test!(case_65, s65, S65, r#"[\w\d]"#, " ", &[], 65);

// -------------------------------------------------------------------------
// x2("[[:upper:]]", "B", 0, 1);
scan_test!(case_66, s66, S66, r#"[[:upper:]]"#, "B", &[("B", 0, 1)], 66);

// -------------------------------------------------------------------------
// x2("[*[:xdigit:]+]", "+", 0, 1);
scan_test!(
    case_67,
    s67,
    S67,
    r#"[*[:xdigit:]+]"#,
    "+",
    &[("+", 0, 1)],
    67
);

// -------------------------------------------------------------------------
// x2("[*[:xdigit:]+]", "GHIKK-9+*", 6, 7);
scan_test!(
    case_68,
    s68,
    S68,
    r#"[*[:xdigit:]+]"#,
    "GHIKK-9+*",
    &[("9", 6, 7), ("+", 7, 8), ("*", 8, 9)],
    68
);

// -------------------------------------------------------------------------
// x2("[*[:xdigit:]+]", "-@^+", 3, 4);
scan_test!(
    case_69,
    s69,
    S69,
    r#"[*[:xdigit:]+]"#,
    "-@^+",
    &[("+", 3, 4)],
    69
);

// -------------------------------------------------------------------------
// n("[[:upper]]", "A");
scan_test!(case_70, s70, S70, r#"[[:upper]]"#, "A", &[], 70);

// -------------------------------------------------------------------------
// x2("[[:upper]]", ":", 0, 1);
scan_test!(case_71, s71, S71, r#"[[:upper]]"#, ":", &[(":", 0, 1)], 71);

// -------------------------------------------------------------------------
// n("[[:upper:]]", "a");
scan_test!(case_72, s72, S72, r#"[[:upper:]]"#, "a", &[], 72);

// -------------------------------------------------------------------------
// x2("[[:^upper:]]", "a", 0, 1);
scan_test!(
    case_73,
    s73,
    S73,
    r#"[[:^upper:]]"#,
    "a",
    &[("a", 0, 1)],
    73
);

// -------------------------------------------------------------------------
// n("[[:lower:]]", "A");
scan_test!(case_74, s74, S74, r#"[[:lower:]]"#, "A", &[], 74);

// -------------------------------------------------------------------------
// x2("[[:^lower:]]", "A", 0, 1);
scan_test!(
    case_75,
    s75,
    S75,
    r#"[[:^lower:]]"#,
    "A",
    &[("A", 0, 1)],
    75
);

// -------------------------------------------------------------------------
// e("[[:::]",   ":[", ONIGERR_PREMATURE_END_OF_CHAR_CLASS);
// ClassUnclosed

// -------------------------------------------------------------------------
// e("[[:\\]:]", ":]", ONIGERR_PREMATURE_END_OF_CHAR_CLASS);
// ClassUnclosed

// -------------------------------------------------------------------------
// e("[[:\\[:]", ":[", ONIGERR_PREMATURE_END_OF_CHAR_CLASS);
// ClassUnclosed

// -------------------------------------------------------------------------
// e("[[:\\]]",  ":]", ONIGERR_PREMATURE_END_OF_CHAR_CLASS);
// ClassUnclosed

// -------------------------------------------------------------------------
// e("[[:u:]]",      "", ONIGERR_INVALID_POSIX_BRACKET_TYPE);
scanner! { S80 { mode M { token r#"[[:u:]]"# => 0; } } }

// -------------------------------------------------------------------------
// e("[[:upp:]]",    "", ONIGERR_INVALID_POSIX_BRACKET_TYPE);
scanner! { S81 { mode M { token r#"[[:upp:]]"# => 0; } } }

// -------------------------------------------------------------------------
// e("[[:uppers:]]", "", ONIGERR_INVALID_POSIX_BRACKET_TYPE);
scanner! { S82 { mode M { token r#"[[:uppers:]]"# => 0; } } }

// -------------------------------------------------------------------------
// x2("[[:upper\\] :]]",  "]", 0, 1);
scan_test!(
    case_83,
    s83,
    S83,
    r#"[[:upper\] :]]"#,
    "]",
    &[("]", 0, 1)],
    83
);

// -------------------------------------------------------------------------
// x2("[[::]]",     ":", 0, 1);
scan_test!(case_84, s84, S84, r#"[[::]]"#, ":", &[(":", 0, 1)], 84);

// -------------------------------------------------------------------------
// x2("[[:::]]",    ":", 0, 1);
scan_test!(case_85, s85, S85, r#"[[:::]]"#, ":", &[(":", 0, 1)], 85);

// -------------------------------------------------------------------------
// x2("[[:\\]:]]*", ":]", 0, 2);
scan_test!(case_86, s86, S86, r#"[[:\]:]]*"#, ":]", &[(":]", 0, 2)], 86);

// -------------------------------------------------------------------------
// x2("[[:\\[:]]*", ":[", 0, 2);
scan_test!(case_87, s87, S87, r#"[[:\[:]]*"#, ":[", &[(":[", 0, 2)], 87);

// -------------------------------------------------------------------------
// x2("[[:\\]]]*",  ":]", 0, 2);
scan_test!(case_88, s88, S88, r#"[[:\]]]*"#, ":]", &[(":]", 0, 2)], 88);

// -------------------------------------------------------------------------
// x2("[\\044-\\047]", "\046", 0, 1);
scan_test!(
    case_89,
    s89,
    S89,
    r#"[\x24-\x27]"#,
    "\x26",
    &[("\x26", 0, 1)],
    89
);

// -------------------------------------------------------------------------
// x2("[\\x5a-\\x5c]", "\x5b", 0, 1);
scan_test!(
    case_90,
    s90,
    S90,
    r#"[\x5a-\x5c]"#,
    "\x5b",
    &[("\x5b", 0, 1)],
    90
);

// -------------------------------------------------------------------------
// x2("[\\x6A-\\x6D]", "\x6c", 0, 1);
scan_test!(
    case_91,
    s91,
    S91,
    r#"[\x6A-\x6D]"#,
    "\x6c",
    &[("\x6c", 0, 1)],
    91
);

// -------------------------------------------------------------------------
// n("[\\x6A-\\x6D]", "\x6E");
scan_test!(case_92, s92, S92, r#"[\x6A-\x6D]"#, "\x6E", &[], 92);

// -------------------------------------------------------------------------
// n("^[0-9A-F]+ 0+ UNDEF ", "75F 00000000 SECT14A notype ()    External    | _rb_apply");
// UnsupportedFeatureError("StartLine Look(Start)")

// -------------------------------------------------------------------------
// x2("[\\[]", "[", 0, 1);
scan_test!(case_94, s94, S94, r#"[\[]"#, "[", &[("[", 0, 1)], 94);

// -------------------------------------------------------------------------
// x2("[\\]]", "]", 0, 1);
scan_test!(case_95, s95, S95, r#"[\]]"#, "]", &[("]", 0, 1)], 95);

// -------------------------------------------------------------------------
// x2("[&]", "&", 0, 1);
scan_test!(case_96, s96, S96, r#"[&]"#, "&", &[("&", 0, 1)], 96);

// -------------------------------------------------------------------------
// x2("[[ab]]", "b", 0, 1);
scan_test!(case_97, s97, S97, r#"[[ab]]"#, "b", &[("b", 0, 1)], 97);

// -------------------------------------------------------------------------
// x2("[[ab]c]", "c", 0, 1);
scan_test!(case_98, s98, S98, r#"[[ab]c]"#, "c", &[("c", 0, 1)], 98);

// -------------------------------------------------------------------------
// n("[[^a]]", "a");
scan_test!(case_99, s99, S99, r#"[[^a]]"#, "a", &[], 99);

// -------------------------------------------------------------------------
// n("[^[a]]", "a");
scan_test!(case_100, s100, S100, r#"[^[a]]"#, "a", &[], 100);

// -------------------------------------------------------------------------
// x2("[[ab]&&bc]", "b", 0, 1);
scan_test!(
    case_101,
    s101,
    S101,
    r#"[[ab]&&bc]"#,
    "b",
    &[("b", 0, 1)],
    101
);

// -------------------------------------------------------------------------
// n("[[ab]&&bc]", "a");
scan_test!(case_102, s102, S102, r#"[[ab]&&bc]"#, "a", &[], 102);
// -------------------------------------------------------------------------
// n("[[ab]&&bc]", "c");
scan_test!(case_103, s103, S103, r#"[[ab]&&bc]"#, "c", &[], 103);

// -------------------------------------------------------------------------
// x2("[a-z&&b-y&&c-x]", "w", 0, 1);
scan_test!(
    case_104,
    s104,
    S104,
    r#"[a-z&&b-y&&c-x]"#,
    "w",
    &[("w", 0, 1)],
    104
);
// -------------------------------------------------------------------------
// n("[^a-z&&b-y&&c-x]", "w");
scan_test!(case_105, s105, S105, r#"[^a-z&&b-y&&c-x]"#, "w", &[], 105);
// -------------------------------------------------------------------------
// x2("[[^a&&a]&&a-z]", "b", 0, 1);
scan_test!(
    case_106,
    s106,
    S106,
    r#"[[^a&&a]&&a-z]"#,
    "b",
    &[("b", 0, 1)],
    106
);
// -------------------------------------------------------------------------
// n("[[^a&&a]&&a-z]", "a");
scan_test!(case_107, s107, S107, r#"[[^a&&a]&&a-z]"#, "a", &[], 107);

// -------------------------------------------------------------------------
// x2("[[^a-z&&bcdef]&&[^c-g]]", "h", 0, 1);
scan_test!(
    case_108,
    s108,
    S108,
    r#"[[^a-z&&bcdef]&&[^c-g]]"#,
    "h",
    &[("h", 0, 1)],
    108
);

// -------------------------------------------------------------------------
// n("[[^a-z&&bcdef]&&[^c-g]]", "c");
scan_test!(
    case_109,
    s109,
    S109,
    r#"[[^a-z&&bcdef]&&[^c-g]]"#,
    "c",
    &[],
    109
);
// -------------------------------------------------------------------------
// x2("[^[^abc]&&[^cde]]", "c", 0, 1);
scan_test!(
    case_110,
    s110,
    S110,
    r#"[^[^abc]&&[^cde]]"#,
    "c",
    &[("c", 0, 1)],
    110
);

// -------------------------------------------------------------------------
// x2("[^[^abc]&&[^cde]]", "e", 0, 1);
scan_test!(
    case_111,
    s111,
    S111,
    r#"[^[^abc]&&[^cde]]"#,
    "e",
    &[("e", 0, 1)],
    111
);

// -------------------------------------------------------------------------
// n("[^[^abc]&&[^cde]]", "f");
scan_test!(case_112, s112, S112, r#"[^[^abc]&&[^cde]]"#, "f", &[], 112);

// -------------------------------------------------------------------------
// x2("[a-&&-a]", "-", 0, 1);
// ClassRangeInvalid

// -------------------------------------------------------------------------
// n("[a\\-&&\\-a]", "&");
scan_test!(case_114, s114, S114, r#"[a\-&&\-a]"#, "&", &[], 114);

// -------------------------------------------------------------------------
// n("\\wabc", " abc");
scan_test!(case_115, s115, S115, r#"\wabc"#, " abc", &[], 115);

// -------------------------------------------------------------------------
// x2("a\\Wbc", "a bc", 0, 4);
scan_test!(
    case_116,
    s116,
    S116,
    r#"a\Wbc"#,
    "a bc",
    &[("a bc", 0, 4)],
    116
);

// -------------------------------------------------------------------------
// x2("a.b.c", "aabbc", 0, 5);
scan_test!(
    case_117,
    s117,
    S117,
    r#"a.b.c"#,
    "aabbc",
    &[("aabbc", 0, 5)],
    117
);

// -------------------------------------------------------------------------
// x2(".\\wb\\W..c", "abb bcc", 0, 7);
scan_test!(
    case_118,
    s118,
    S118,
    r#".\wb\W..c"#,
    "abb bcc",
    &[("abb bcc", 0, 7)],
    118
);

// -------------------------------------------------------------------------
// x2("\\s\\wzzz", " zzzz", 0, 5);
scan_test!(
    case_119,
    s119,
    S119,
    r#"\s\wzzz"#,
    " zzzz",
    &[(" zzzz", 0, 5)],
    119
);

// -------------------------------------------------------------------------
// x2("aa.b", "aabb", 0, 4);
scan_test!(
    case_120,
    s120,
    S120,
    r#"aa.b"#,
    "aabb",
    &[("aabb", 0, 4)],
    120
);

// -------------------------------------------------------------------------
// n(".a", "ab");
scan_test!(case_121, s121, S121, r#".a"#, "ab", &[], 121);

// -------------------------------------------------------------------------
// x2("^a", "a", 0, 1);
// UnsupportedFeatureError("StartLine Look(Start)")

// -------------------------------------------------------------------------
// x2("^a$", "a", 0, 1);
// UnsupportedFeatureError("StartLine Look(Start)")

// -------------------------------------------------------------------------
// x2("^\\w$", "a", 0, 1);
// UnsupportedFeatureError("StartLine Look(Start)")

// -------------------------------------------------------------------------
// n("^\\w$", " ");
// UnsupportedFeatureError("StartLine Look(Start)")

// -------------------------------------------------------------------------
// x2("^\\wab$", "zab", 0, 3);
// UnsupportedFeatureError("StartLine Look(Start)")

// -------------------------------------------------------------------------
// x2("^\\wabcdef$", "zabcdef", 0, 7);
// UnsupportedFeatureError("StartLine Look(Start)")

// -------------------------------------------------------------------------
// x2("^\\w...def$", "zabcdef", 0, 7);
// UnsupportedFeatureError("StartLine Look(Start)")

// -------------------------------------------------------------------------
// x2("\\w\\w\\s\\Waaa\\d", "aa  aaa4", 0, 8);
scan_test!(
    case_130,
    s130,
    S130,
    r#"\w\w\s\Waaa\d"#,
    "aa  aaa4",
    &[("aa  aaa4", 0, 8)],
    130
);

// -------------------------------------------------------------------------
// x2("\\A\\Z", "", 0, 0);
// EscapeUnrecognized

// -------------------------------------------------------------------------
// x2("\\Axyz", "xyz", 0, 3);
// EscapeUnrecognized

// -------------------------------------------------------------------------
// x2("xyz\\Z", "xyz", 0, 3);
// EscapeUnrecognized

// -------------------------------------------------------------------------
// x2("xyz\\z", "xyz", 0, 3);
// UnsupportedFeatureError("EndLine Look(End)")

// -------------------------------------------------------------------------
// x2("a\\Z", "a", 0, 1);
// EscapeUnrecognized

// -------------------------------------------------------------------------
// x2("\\Gaz", "az", 0, 2);
// EscapeUnrecognized

// -------------------------------------------------------------------------
// n("\\Gz", "bza");
// EscapeUnrecognized

// -------------------------------------------------------------------------
// n("az\\G", "az");
// EscapeUnrecognized

// -------------------------------------------------------------------------
// n("az\\A", "az");
// UnsupportedFeatureError("StartLine Look(Start)")

// -------------------------------------------------------------------------
// n("a\\Az", "az");
// UnsupportedFeatureError("StartLine Look(Start)")

// -------------------------------------------------------------------------
// x2("\\^\\$", "^$", 0, 2);
scan_test!(case_141, s141, S141, r#"\^\$"#, "^$", &[("^$", 0, 2)], 141);

// -------------------------------------------------------------------------
// x2("^x?y", "xy", 0, 2);
// UnsupportedFeatureError("StartLine Look(Start)")

// -------------------------------------------------------------------------
// x2("^(x?y)", "xy", 0, 2);
// UnsupportedFeatureError("StartLine Look(Start)")

// -------------------------------------------------------------------------
// x2("\\w", "_", 0, 1);
scan_test!(case_144, s144, S144, r#"\w"#, "_", &[("_", 0, 1)], 144);

// -------------------------------------------------------------------------
// n("\\W", "_");
scan_test!(case_145, s145, S145, r#"\W"#, "_", &[], 145);

// -------------------------------------------------------------------------
// x2("(?=z)z", "z", 0, 1);
// UnsupportedLookAround

// -------------------------------------------------------------------------
// n("(?=z).", "a");
// UnsupportedLookAround

// -------------------------------------------------------------------------
// x2("(?!z)a", "a", 0, 1);
// UnsupportedLookAround

// -------------------------------------------------------------------------
// n("(?!z)a", "z");
// UnsupportedLookAround

// -------------------------------------------------------------------------
// x2("(?i:a)", "a", 0, 1);
scan_test!(case_150, s150, S150, r#"(?i:a)"#, "a", &[("a", 0, 1)], 150);

// -------------------------------------------------------------------------
// x2("(?i:a)", "A", 0, 1);
scan_test!(case_151, s151, S151, r#"(?i:a)"#, "A", &[("A", 0, 1)], 151);

// -------------------------------------------------------------------------
// x2("(?i:A)", "a", 0, 1);
scan_test!(case_152, s152, S152, r#"(?i:A)"#, "a", &[("a", 0, 1)], 152);

// -------------------------------------------------------------------------
// x2("(?i:i)", "I", 0, 1);
scan_test!(case_153, s153, S153, r#"(?i:i)"#, "I", &[("I", 0, 1)], 153);

// -------------------------------------------------------------------------
// x2("(?i:I)", "i", 0, 1);
scan_test!(case_154, s154, S154, r#"(?i:I)"#, "i", &[("i", 0, 1)], 154);

// -------------------------------------------------------------------------
// x2("(?i:[A-Z])", "i", 0, 1);
scan_test!(
    case_155,
    s155,
    S155,
    r#"(?i:[A-Z])"#,
    "i",
    &[("i", 0, 1)],
    155
);

// -------------------------------------------------------------------------
// x2("(?i:[a-z])", "I", 0, 1);
scan_test!(
    case_156,
    s156,
    S156,
    r#"(?i:[a-z])"#,
    "I",
    &[("I", 0, 1)],
    156
);

// -------------------------------------------------------------------------
// n("(?i:A)", "b");
scan_test!(case_157, s157, S157, r#"(?i:A)"#, "b", &[], 157);

// -------------------------------------------------------------------------
// x2("(?i:ss)", "ss", 0, 2);
scan_test!(
    case_158,
    s158,
    S158,
    r#"(?i:ss)"#,
    "ss",
    &[("ss", 0, 2)],
    158
);

// -------------------------------------------------------------------------
// x2("(?i:ss)", "Ss", 0, 2);
scan_test!(
    case_159,
    s159,
    S159,
    r#"(?i:ss)"#,
    "Ss",
    &[("Ss", 0, 2)],
    159
);

// -------------------------------------------------------------------------
// x2("(?i:ss)", "SS", 0, 2);
scan_test!(
    case_160,
    s160,
    S160,
    r#"(?i:ss)"#,
    "SS",
    &[("SS", 0, 2)],
    160
);

// -------------------------------------------------------------------------
// x2("(?i:ss)", "\xc5\xbfS", 0, 3);
scanner! { S161 { mode M { token r#"(?i:ss)"# => 0; } } }

// -------------------------------------------------------------------------
// x2("(?i:ss)", "s\xc5\xbf", 0, 3);
scanner! { S162 { mode M { token r#"(?i:ss)"# => 0; } } }

// -------------------------------------------------------------------------
// x2("(?i:ss)", "\xc3\x9f", 0, 2);
scanner! { S163 { mode M { token r#"(?i:ss)"# => 0; } } }

// -------------------------------------------------------------------------
// x2("(?i:ss)", "\xe1\xba\x9e", 0, 3);
scanner! { S164 { mode M { token r#"(?i:ss)"# => 0; } } }

// -------------------------------------------------------------------------
// x2("(?i:xssy)", "xssy", 0, 4);
scan_test!(
    case_165,
    s165,
    S165,
    r#"(?i:xssy)"#,
    "xssy",
    &[("xssy", 0, 4)],
    165
);

// -------------------------------------------------------------------------
// x2("(?i:xssy)", "xSsy", 0, 4);
scan_test!(
    case_166,
    s166,
    S166,
    r#"(?i:xssy)"#,
    "xSsy",
    &[("xSsy", 0, 4)],
    166
);

// -------------------------------------------------------------------------
// x2("(?i:xssy)", "xSSy", 0, 4);
scan_test!(
    case_167,
    s167,
    S167,
    r#"(?i:xssy)"#,
    "xSSy",
    &[("xSSy", 0, 4)],
    167
);

// -------------------------------------------------------------------------
// x2("(?i:xssy)", "x\xc5\xbfSy", 0, 5);
scanner! { S168 { mode M { token r#"(?i:xssy)"# => 0; } } }

// -------------------------------------------------------------------------
// x2("(?i:xssy)", "xs\xc5\xbfy", 0, 5);
scanner! { S169 { mode M { token r#"(?i:xssy)"# => 0; } } }

// -------------------------------------------------------------------------
// x2("(?i:xssy)", "x\xc3\x9fy", 0, 4);
scanner! { S170 { mode M { token r#"(?i:xssy)"# => 0; } } }

// -------------------------------------------------------------------------
// x2("(?i:xssy)", "x\xe1\xba\x9ey", 0, 5);
scanner! { S171 { mode M { token r#"(?i:xssy)"# => 0; } } }

// -------------------------------------------------------------------------
// x2("(?i:x\xc3\x9fy)", "xssy", 0, 4);
scan_test!(case_172, s172, S172, r#"(?i:x\xc3\x9fy)"#, "xssy", &[], 172);

// -------------------------------------------------------------------------
// x2("(?i:x\xc3\x9fy)", "xSSy", 0, 4);
scan_test!(
    case_173,
    s173,
    S173,
    r#"(?i:x\xc3\x9fy)"#,
    "xSSy",
    &[], // Oniguruma : ("xSSy", 0, 4)
    173
);

// -------------------------------------------------------------------------
// x2("(?i:\xc3\x9f)", "ss", 0, 2);
scan_test!(
    case_174,
    s174,
    S174,
    r#"(?i:\xc3\x9f)"#,
    "ss",
    &[], // Oniguruma : ("ss", 0, 2)
    174
);

// -------------------------------------------------------------------------
// x2("(?i:\xc3\x9f)", "SS", 0, 2);
scan_test!(
    case_175,
    s175,
    S175,
    r#"(?i:\xc3\x9f)"#,
    "SS",
    &[], // Oniguruma : ("SS", 0, 2)
    175
);

// -------------------------------------------------------------------------
// x2("(?i:[\xc3\x9f])", "ss", 0, 2);
scan_test!(
    case_176,
    s176,
    S176,
    r#"(?i:[\xc3\x9f])"#,
    "ss",
    &[], // Oniguruma : ("ss", 0, 2)
    176
);

// -------------------------------------------------------------------------
// x2("(?i:[\xc3\x9f])", "SS", 0, 2);
scan_test!(
    case_177,
    s177,
    S177,
    r#"(?i:[\xc3\x9f])"#,
    "SS",
    &[], // Oniguruma : ("SS", 0, 2)
    177
);

// -------------------------------------------------------------------------
// x2("(?i)(?<!ss)z", "qqz", 2, 3);
// UnsupportedLookAround

// -------------------------------------------------------------------------
// x2("(?i:[A-Z])", "a", 0, 1);
scan_test!(
    case_179,
    s179,
    S179,
    r#"(?i:[A-Z])"#,
    "a",
    &[("a", 0, 1)],
    179
);

// -------------------------------------------------------------------------
// x2("(?i:[f-m])", "H", 0, 1);
scan_test!(
    case_180,
    s180,
    S180,
    r#"(?i:[f-m])"#,
    "H",
    &[("H", 0, 1)],
    180
);

// -------------------------------------------------------------------------
// x2("(?i:[f-m])", "h", 0, 1);
scan_test!(
    case_181,
    s181,
    S181,
    r#"(?i:[f-m])"#,
    "h",
    &[("h", 0, 1)],
    181
);

// -------------------------------------------------------------------------
// n("(?i:[f-m])", "e");
scan_test!(case_182, s182, S182, r#"(?i:[f-m])"#, "e", &[], 182);

// -------------------------------------------------------------------------
// x2("(?i:[A-c])", "D", 0, 1);
scan_test!(
    case_183,
    s183,
    S183,
    r#"(?i:[A-c])"#,
    "D",
    &[("D", 0, 1)],
    183
);

// -------------------------------------------------------------------------
// n("(?i:[^a-z])", "A");
scan_test!(case_184, s184, S184, r#"(?i:[^a-z])"#, "A", &[], 184);

// -------------------------------------------------------------------------
// n("(?i:[^a-z])", "a");
scan_test!(case_185, s185, S185, r#"(?i:[^a-z])"#, "a", &[], 185);

// -------------------------------------------------------------------------
// x2("(?i:[!-k])", "Z", 0, 1);
scan_test!(
    case_186,
    s186,
    S186,
    r#"(?i:[!-k])"#,
    "Z",
    &[("Z", 0, 1)],
    186
);

// -------------------------------------------------------------------------
// x2("(?i:[!-k])", "7", 0, 1);
scan_test!(
    case_187,
    s187,
    S187,
    r#"(?i:[!-k])"#,
    "7",
    &[("7", 0, 1)],
    187
);

// -------------------------------------------------------------------------
// x2("(?i:[T-}])", "b", 0, 1);
scan_test!(
    case_188,
    s188,
    S188,
    r#"(?i:[T-}])"#,
    "b",
    &[("b", 0, 1)],
    188
);

// -------------------------------------------------------------------------
// x2("(?i:[T-}])", "{", 0, 1);
scan_test!(
    case_189,
    s189,
    S189,
    r#"(?i:[T-}])"#,
    "{",
    &[("{", 0, 1)],
    189
);

// -------------------------------------------------------------------------
// x2("(?i:\\?a)", "?A", 0, 2);
scan_test!(
    case_190,
    s190,
    S190,
    r#"(?i:\?a)"#,
    "?A",
    &[("?A", 0, 2)],
    190
);

// -------------------------------------------------------------------------
// x2("(?i:\\*A)", "*a", 0, 2);
scan_test!(
    case_191,
    s191,
    S191,
    r#"(?i:\*A)"#,
    "*a",
    &[("*a", 0, 2)],
    191
);

// -------------------------------------------------------------------------
// n(".", "\n");
scan_test!(case_192, s192, S192, r#"."#, "\n", &[], 192);

// -------------------------------------------------------------------------
// x2("(?m:.)", "\n", 0, 1);
scan_test!(
    case_193,
    s193,
    S193,
    r#"(?m:.)"#,
    "\n",
    &[], // Oniguruma : ("\n", 0, 1)
    193
);

// -------------------------------------------------------------------------
// x2("(?m:a.)", "a\n", 0, 2);
scan_test!(
    case_194,
    s194,
    S194,
    r#"(?m:a.)"#,
    "a\n",
    &[], // Oniguruma : ("a\n", 0, 2)
    194
);

// -------------------------------------------------------------------------
// x2("(?m:.b)", "a\nb", 1, 3);
scan_test!(
    case_195,
    s195,
    S195,
    r#"(?m:.b)"#,
    "a\nb",
    &[], // Oniguruma : ("a\nb", 1, 3)
    195
);

// -------------------------------------------------------------------------
// x2(".*abc", "dddabdd\nddabc", 8, 13);
scan_test!(
    case_196,
    s196,
    S196,
    r#".*abc"#,
    "dddabdd\nddabc",
    &[("ddabc", 8, 13)],
    196
);

// -------------------------------------------------------------------------
// x2(".+abc", "dddabdd\nddabcaa\naaaabc", 8, 13);
scan_test!(
    case_197,
    s197,
    S197,
    r#".+abc"#,
    "dddabdd\nddabcaa\naaaabc",
    &[("ddabc", 8, 13), ("aaaabc", 16, 22)],
    197
);

// -------------------------------------------------------------------------
// x2("(?m:.*abc)", "dddabddabc", 0, 10);
scan_test!(
    case_198,
    s198,
    S198,
    r#"(?m:.*abc)"#,
    "dddabddabc",
    &[("dddabddabc", 0, 10)],
    198
);

// -------------------------------------------------------------------------
// n("(?i)(?-i)a", "A");
scan_test!(case_199, s199, S199, r#"(?i)(?-i)a"#, "A", &[], 199);

// -------------------------------------------------------------------------
// n("(?i)(?-i:a)", "A");
scan_test!(case_200, s200, S200, r#"(?i)(?-i:a)"#, "A", &[], 200);

// -------------------------------------------------------------------------
// x2("a?", "", 0, 0);
scan_test!(case_201, s201, S201, r#"a?"#, "", &[], 201);

// -------------------------------------------------------------------------
// x2("a?", "b", 0, 0);
scan_test!(case_202, s202, S202, r#"a?"#, "b", &[], 202);

// -------------------------------------------------------------------------
// x2("a?", "a", 0, 1);
scan_test!(case_203, s203, S203, r#"a?"#, "a", &[("a", 0, 1)], 203);

// -------------------------------------------------------------------------
// x2("a*", "", 0, 0);
scan_test!(case_204, s204, S204, r#"a*"#, "", &[], 204);

// -------------------------------------------------------------------------
// x2("a*", "a", 0, 1);
scan_test!(case_205, s205, S205, r#"a*"#, "a", &[("a", 0, 1)], 205);

// -------------------------------------------------------------------------
// x2("a*", "aaa", 0, 3);
scan_test!(case_206, s206, S206, r#"a*"#, "aaa", &[("aaa", 0, 3)], 206);

// -------------------------------------------------------------------------
// x2("a*", "baaaa", 0, 0);
scan_test!(
    case_207,
    s207,
    S207,
    r#"a*"#,
    "baaaa",
    &[("aaaa", 1, 5)],
    207
);

// -------------------------------------------------------------------------
// n("a+", "");
scan_test!(case_208, s208, S208, r#"a+"#, "", &[], 208);

// -------------------------------------------------------------------------
// x2("a+", "a", 0, 1);
scan_test!(case_209, s209, S209, r#"a+"#, "a", &[("a", 0, 1)], 209);

// -------------------------------------------------------------------------
// x2("a+", "aaaa", 0, 4);
scan_test!(
    case_210,
    s210,
    S210,
    r#"a+"#,
    "aaaa",
    &[("aaaa", 0, 4)],
    210
);

// -------------------------------------------------------------------------
// x2("a+", "aabbb", 0, 2);
scan_test!(case_211, s211, S211, r#"a+"#, "aabbb", &[("aa", 0, 2)], 211);

// -------------------------------------------------------------------------
// x2("a+", "baaaa", 1, 5);
scan_test!(
    case_212,
    s212,
    S212,
    r#"a+"#,
    "baaaa",
    &[("aaaa", 1, 5)],
    212
);

// -------------------------------------------------------------------------
// x2(".?", "", 0, 0);
scan_test!(case_213, s213, S213, r#".?"#, "", &[], 213);

// -------------------------------------------------------------------------
// x2(".?", "f", 0, 1);
scan_test!(case_214, s214, S214, r#".?"#, "f", &[("f", 0, 1)], 214);

// -------------------------------------------------------------------------
// x2(".?", "\n", 0, 0);
scan_test!(case_215, s215, S215, r#".?"#, "\n", &[], 215);

// -------------------------------------------------------------------------
// x2(".*", "", 0, 0);
scan_test!(case_216, s216, S216, r#".*"#, "", &[], 216);

// -------------------------------------------------------------------------
// x2(".*", "abcde", 0, 5);
scan_test!(
    case_217,
    s217,
    S217,
    r#".*"#,
    "abcde",
    &[("abcde", 0, 5)],
    217
);

// -------------------------------------------------------------------------
// x2(".+", "z", 0, 1);
scan_test!(case_218, s218, S218, r#".+"#, "z", &[("z", 0, 1)], 218);

// -------------------------------------------------------------------------
// x2(".+", "zdswer\n", 0, 6);
scan_test!(
    case_219,
    s219,
    S219,
    r#".+"#,
    "zdswer\n",
    &[("zdswer", 0, 6)],
    219
);

// -------------------------------------------------------------------------
// x2("(.*)a\\1f", "babfbac", 0, 4);
// UnsupportedBackreference

// -------------------------------------------------------------------------
// x2("(.*)a\\1f", "bacbabf", 3, 7);
// UnsupportedBackreference

// -------------------------------------------------------------------------
// x2("((.*)a\\2f)", "bacbabf", 3, 7);
// UnsupportedBackreference

// -------------------------------------------------------------------------
// x2("(.*)a\\1f", "baczzzzzz\nbazz\nzzzzbabf", 19, 23);
// UnsupportedBackreference

// -------------------------------------------------------------------------
// x2("(?:x?)?", "", 0, 0);
scan_test!(case_224, s224, S224, r#"(?:x?)?"#, "", &[], 224);

// -------------------------------------------------------------------------
// x2("(?:x?)?", "x", 0, 1);
scan_test!(case_225, s225, S225, r#"(?:x?)?"#, "x", &[("x", 0, 1)], 225);

// -------------------------------------------------------------------------
// x2("(?:x?)?", "xx", 0, 1);
scan_test!(
    case_226,
    s226,
    S226,
    r#"(?:x?)?"#,
    "xx",
    &[("x", 0, 1), ("x", 1, 2)],
    226
);

// -------------------------------------------------------------------------
// x2("(?:x?)*", "", 0, 0);
scan_test!(case_227, s227, S227, r#"(?:x?)*"#, "", &[], 227);

// -------------------------------------------------------------------------
// x2("(?:x?)*", "x", 0, 1);
scan_test!(case_228, s228, S228, r#"(?:x?)*"#, "x", &[("x", 0, 1)], 228);

// -------------------------------------------------------------------------
// x2("(?:x?)*", "xx", 0, 2);
scan_test!(
    case_229,
    s229,
    S229,
    r#"(?:x?)*"#,
    "xx",
    &[("xx", 0, 2)],
    229
);

// -------------------------------------------------------------------------
// x2("(?:x?)+", "", 0, 0);
scan_test!(case_230, s230, S230, r#"(?:x?)+"#, "", &[], 230);

// -------------------------------------------------------------------------
// x2("(?:x?)+", "x", 0, 1);
scan_test!(case_231, s231, S231, r#"(?:x?)+"#, "x", &[("x", 0, 1)], 231);

// -------------------------------------------------------------------------
// x2("(?:x?)+", "xx", 0, 2);
scan_test!(
    case_232,
    s232,
    S232,
    r#"(?:x?)+"#,
    "xx",
    &[("xx", 0, 2)],
    232
);

// -------------------------------------------------------------------------
// x2("(?:x?)\?\?", "", 0, 0);
scan_test!(case_233, s233, S233, r#"(?:x?)\?\?"#, "", &[], 233);

// -------------------------------------------------------------------------
// x2("(?:x?)\?\?", "x", 0, 0);
scan_test!(case_234, s234, S234, r#"(?:x?)\?\?"#, "x", &[], 234);

// -------------------------------------------------------------------------
// x2("(?:x?)\?\?", "xx", 0, 0);
scan_test!(case_235, s235, S235, r#"(?:x?)\?\?"#, "xx", &[], 235);

// -------------------------------------------------------------------------
// x2("(?:x?)*?", "", 0, 0);
// UnsupportedFeatureError("x?*?: Non-greedy repetitions)

// -------------------------------------------------------------------------
// x2("(?:x?)*?", "x", 0, 0);
// UnsupportedFeatureError("x?*?: Non-greedy repetitions)

// -------------------------------------------------------------------------
// x2("(?:x?)*?", "xx", 0, 0);
// UnsupportedFeatureError("x?*?: Non-greedy repetitions)

// -------------------------------------------------------------------------
// x2("(?:x?)+?", "", 0, 0);
// UnsupportedFeatureError("x?*?: Non-greedy repetitions)

// -------------------------------------------------------------------------
// x2("(?:x?)+?", "x", 0, 1);
// UnsupportedFeatureError("x?*?: Non-greedy repetitions)

// -------------------------------------------------------------------------
// x2("(?:x?)+?", "xx", 0, 1);
// UnsupportedFeatureError("x?*?: Non-greedy repetitions)

// -------------------------------------------------------------------------
// x2("(?:x*)?", "", 0, 0);
scan_test!(case_242, s242, S242, r#"(?:x*)?"#, "", &[], 242);

// -------------------------------------------------------------------------
// x2("(?:x*)?", "x", 0, 1);
scan_test!(case_243, s243, S243, r#"(?:x*)?"#, "x", &[("x", 0, 1)], 243);

// -------------------------------------------------------------------------
// x2("(?:x*)?", "xx", 0, 2);
scan_test!(
    case_244,
    s244,
    S244,
    r#"(?:x*)?"#,
    "xx",
    &[("xx", 0, 2)],
    244
);

// -------------------------------------------------------------------------
// x2("(?:x*)*", "", 0, 0);
scan_test!(case_245, s245, S245, r#"(?:x*)*"#, "", &[], 245);

// -------------------------------------------------------------------------
// x2("(?:x*)*", "x", 0, 1);
scan_test!(case_246, s246, S246, r#"(?:x*)*"#, "x", &[("x", 0, 1)], 246);

// -------------------------------------------------------------------------
// x2("(?:x*)*", "xx", 0, 2);
scan_test!(
    case_247,
    s247,
    S247,
    r#"(?:x*)*"#,
    "xx",
    &[("xx", 0, 2)],
    247
);

// -------------------------------------------------------------------------
// x2("(?:x*)+", "", 0, 0);
scan_test!(case_248, s248, S248, r#"(?:x*)+"#, "", &[], 248);

// -------------------------------------------------------------------------
// x2("(?:x*)+", "x", 0, 1);
scan_test!(case_249, s249, S249, r#"(?:x*)+"#, "x", &[("x", 0, 1)], 249);

// -------------------------------------------------------------------------
// x2("(?:x*)+", "xx", 0, 2);
scan_test!(
    case_250,
    s250,
    S250,
    r#"(?:x*)+"#,
    "xx",
    &[("xx", 0, 2)],
    250
);

// -------------------------------------------------------------------------
// x2("(?:x*)\?\?", "", 0, 0);
scan_test!(case_251, s251, S251, r#"(?:x*)\?\?"#, "", &[], 251);

// -------------------------------------------------------------------------
// x2("(?:x*)\?\?", "x", 0, 0);
scan_test!(case_252, s252, S252, r#"(?:x*)\?\?"#, "x", &[], 252);

// -------------------------------------------------------------------------
// x2("(?:x*)\?\?", "xx", 0, 0);
scan_test!(case_253, s253, S253, r#"(?:x*)\?\?"#, "xx", &[], 253);

// -------------------------------------------------------------------------
// x2("(?:x*)*?", "", 0, 0);
// UnsupportedFeatureError("x?*?: Non-greedy repetitions)

// -------------------------------------------------------------------------
// x2("(?:x*)*?", "x", 0, 0);
// UnsupportedFeatureError("x?*?: Non-greedy repetitions)

// -------------------------------------------------------------------------
// x2("(?:x*)*?", "xx", 0, 0);
// UnsupportedFeatureError("x?*?: Non-greedy repetitions)

// -------------------------------------------------------------------------
// x2("(?:x*)+?", "", 0, 0);
// UnsupportedFeatureError("x?*?: Non-greedy repetitions)

// -------------------------------------------------------------------------
// x2("(?:x*)+?", "x", 0, 1);
// UnsupportedFeatureError("x?*?: Non-greedy repetitions)

// -------------------------------------------------------------------------
// x2("(?:x*)+?", "xx", 0, 2);
// UnsupportedFeatureError("x?*?: Non-greedy repetitions)

// -------------------------------------------------------------------------
// x2("(?:x+)?", "", 0, 0);
scan_test!(case_260, s260, S260, r#"(?:x+)?"#, "", &[], 260);

// -------------------------------------------------------------------------
// x2("(?:x+)?", "x", 0, 1);
scan_test!(case_261, s261, S261, r#"(?:x+)?"#, "x", &[("x", 0, 1)], 261);

// -------------------------------------------------------------------------
// x2("(?:x+)?", "xx", 0, 2);
scan_test!(
    case_262,
    s262,
    S262,
    r#"(?:x+)?"#,
    "xx",
    &[("xx", 0, 2)],
    262
);

// -------------------------------------------------------------------------
// x2("(?:x+)*", "", 0, 0);
scan_test!(case_263, s263, S263, r#"(?:x+)*"#, "", &[], 263);

// -------------------------------------------------------------------------
// x2("(?:x+)*", "x", 0, 1);
scan_test!(case_264, s264, S264, r#"(?:x+)*"#, "x", &[("x", 0, 1)], 264);

// -------------------------------------------------------------------------
// x2("(?:x+)*", "xx", 0, 2);
scan_test!(
    case_265,
    s265,
    S265,
    r#"(?:x+)*"#,
    "xx",
    &[("xx", 0, 2)],
    265
);

// -------------------------------------------------------------------------
// n("(?:x+)+", "");
scan_test!(case_266, s266, S266, r#"(?:x+)+"#, "", &[], 266);

// -------------------------------------------------------------------------
// x2("(?:x+)+", "x", 0, 1);
scan_test!(case_267, s267, S267, r#"(?:x+)+"#, "x", &[("x", 0, 1)], 267);

// -------------------------------------------------------------------------
// x2("(?:x+)+", "xx", 0, 2);
scan_test!(
    case_268,
    s268,
    S268,
    r#"(?:x+)+"#,
    "xx",
    &[("xx", 0, 2)],
    268
);

// -------------------------------------------------------------------------
// x2("(?:x+)\?\?", "", 0, 0);
scan_test!(case_269, s269, S269, r#"(?:x+)\?\?"#, "", &[], 269);

// -------------------------------------------------------------------------
// x2("(?:x+)\?\?", "x", 0, 0);
scan_test!(case_270, s270, S270, r#"(?:x+)\?\?"#, "x", &[], 270);

// -------------------------------------------------------------------------
// x2("(?:x+)\?\?", "xx", 0, 0);
scan_test!(case_271, s271, S271, r#"(?:x+)\?\?"#, "xx", &[], 271);

// -------------------------------------------------------------------------
// x2("(?:x+)*?", "", 0, 0);
// UnsupportedFeatureError("x?*?: Non-greedy repetitions)

// -------------------------------------------------------------------------
// x2("(?:x+)*?", "x", 0, 0);
// UnsupportedFeatureError("x?*?: Non-greedy repetitions)

// -------------------------------------------------------------------------
// x2("(?:x+)*?", "xx", 0, 0);
// UnsupportedFeatureError("x?*?: Non-greedy repetitions)

// -------------------------------------------------------------------------
// n("(?:x+)+?", "");
// UnsupportedFeatureError("x?*?: Non-greedy repetitions)

// -------------------------------------------------------------------------
// x2("(?:x+)+?", "x", 0, 1);
// UnsupportedFeatureError("x?*?: Non-greedy repetitions)

// -------------------------------------------------------------------------
// x2("(?:x+)+?", "xx", 0, 2);
// UnsupportedFeatureError("x?*?: Non-greedy repetitions)

// -------------------------------------------------------------------------
// x2("(?:x\?\?)?", "", 0, 0);
scan_test!(case_278, s278, S278, r#"(?:x\?\?)?"#, "", &[], 278);

// -------------------------------------------------------------------------
// x2("(?:x\?\?)?", "x", 0, 0);
scan_test!(case_279, s279, S279, r#"(?:x\?\?)?"#, "x", &[], 279);

// -------------------------------------------------------------------------
// x2("(?:x\?\?)?", "xx", 0, 0);
scan_test!(case_280, s280, S280, r#"(?:x\?\?)?"#, "xx", &[], 280);

// -------------------------------------------------------------------------
// x2("(?:x\?\?)*", "", 0, 0);
scan_test!(case_281, s281, S281, r#"(?:x\?\?)*"#, "", &[], 281);

// -------------------------------------------------------------------------
// x2("(?:x\?\?)*", "x", 0, 0);
scan_test!(case_282, s282, S282, r#"(?:x\?\?)*"#, "x", &[], 282);

// -------------------------------------------------------------------------
// x2("(?:x\?\?)*", "xx", 0, 0);
scan_test!(case_283, s283, S283, r#"(?:x\?\?)*"#, "xx", &[], 283);

// -------------------------------------------------------------------------
// x2("(?:x\?\?)+", "", 0, 0);
scan_test!(case_284, s284, S284, r#"(?:x\?\?)+"#, "", &[], 284);

// -------------------------------------------------------------------------
// x2("(?:x\?\?)+", "x", 0, 0);
scan_test!(case_285, s285, S285, r#"(?:x\?\?)+"#, "x", &[], 285);

// -------------------------------------------------------------------------
// x2("(?:x\?\?)+", "xx", 0, 0);
scan_test!(case_286, s286, S286, r#"(?:x\?\?)+"#, "xx", &[], 286);

// -------------------------------------------------------------------------
// x2("(?:x\?\?)\?\?", "", 0, 0);
scan_test!(case_287, s287, S287, r#"(?:x\?\?)\?\?"#, "", &[], 287);

// -------------------------------------------------------------------------
// x2("(?:x\?\?)\?\?", "x", 0, 0);
scan_test!(case_288, s288, S288, r#"(?:x\?\?)\?\?"#, "x", &[], 288);

// -------------------------------------------------------------------------
// x2("(?:x\?\?)\?\?", "xx", 0, 0);
scan_test!(case_289, s289, S289, r#"(?:x\?\?)\?\?"#, "xx", &[], 289);

// -------------------------------------------------------------------------
// x2("(?:x\?\?)*?", "", 0, 0);
// UnsupportedFeatureError("x?*?: Non-greedy repetitions)

// -------------------------------------------------------------------------
// x2("(?:x\?\?)*?", "x", 0, 0);
// UnsupportedFeatureError("x?*?: Non-greedy repetitions)

// -------------------------------------------------------------------------
// x2("(?:x\?\?)*?", "xx", 0, 0);
// UnsupportedFeatureError("x?*?: Non-greedy repetitions)

// -------------------------------------------------------------------------
// x2("(?:x\?\?)+?", "", 0, 0);
// UnsupportedFeatureError("x?*?: Non-greedy repetitions)

// -------------------------------------------------------------------------
// x2("(?:x\?\?)+?", "x", 0, 0);
// UnsupportedFeatureError("x?*?: Non-greedy repetitions)

// -------------------------------------------------------------------------
// x2("(?:x\?\?)+?", "xx", 0, 0);
// UnsupportedFeatureError("x?*?: Non-greedy repetitions)

// -------------------------------------------------------------------------
// x2("(?:x*?)?", "", 0, 0);
// UnsupportedFeatureError("x?*?: Non-greedy repetitions)

// -------------------------------------------------------------------------
// x2("(?:x*?)?", "x", 0, 0);
// UnsupportedFeatureError("x?*?: Non-greedy repetitions)

// -------------------------------------------------------------------------
// x2("(?:x*?)?", "xx", 0, 0);
// UnsupportedFeatureError("x?*?: Non-greedy repetitions)

// -------------------------------------------------------------------------
// x2("(?:x*?)*", "", 0, 0);
// UnsupportedFeatureError("x?*?: Non-greedy repetitions)

// -------------------------------------------------------------------------
// x2("(?:x*?)*", "x", 0, 0);
// UnsupportedFeatureError("x?*?: Non-greedy repetitions)

// -------------------------------------------------------------------------
// x2("(?:x*?)*", "xx", 0, 0);
// UnsupportedFeatureError("x?*?: Non-greedy repetitions)

// -------------------------------------------------------------------------
// x2("(?:x*?)+", "", 0, 0);
// UnsupportedFeatureError("x?*?: Non-greedy repetitions)

// -------------------------------------------------------------------------
// x2("(?:x*?)+", "x", 0, 0);
// UnsupportedFeatureError("x?*?: Non-greedy repetitions)

// -------------------------------------------------------------------------
// x2("(?:x*?)+", "xx", 0, 0);
// UnsupportedFeatureError("x?*?: Non-greedy repetitions)

// -------------------------------------------------------------------------
// x2("(?:x*?)\?\?", "", 0, 0);
// UnsupportedFeatureError("x?*?: Non-greedy repetitions)

// -------------------------------------------------------------------------
// x2("(?:x*?)\?\?", "x", 0, 0);
// UnsupportedFeatureError("x?*?: Non-greedy repetitions)

// -------------------------------------------------------------------------
// x2("(?:x*?)\?\?", "xx", 0, 0);
// UnsupportedFeatureError("x?*?: Non-greedy repetitions)

// -------------------------------------------------------------------------
// x2("(?:x*?)*?", "", 0, 0);
// UnsupportedFeatureError("x?*?: Non-greedy repetitions)

// -------------------------------------------------------------------------
// x2("(?:x*?)*?", "x", 0, 0);
// UnsupportedFeatureError("x?*?: Non-greedy repetitions)

// -------------------------------------------------------------------------
// x2("(?:x*?)*?", "xx", 0, 0);
// UnsupportedFeatureError("x?*?: Non-greedy repetitions)

// -------------------------------------------------------------------------
// x2("(?:x*?)+?", "", 0, 0);
// UnsupportedFeatureError("x?*?: Non-greedy repetitions)

// -------------------------------------------------------------------------
// x2("(?:x*?)+?", "x", 0, 0);
// UnsupportedFeatureError("x?*?: Non-greedy repetitions)

// -------------------------------------------------------------------------
// x2("(?:x*?)+?", "xx", 0, 0);
// UnsupportedFeatureError("x?*?: Non-greedy repetitions)

// -------------------------------------------------------------------------
// x2("(?:x+?)?", "", 0, 0);
// UnsupportedFeatureError("x?*?: Non-greedy repetitions)

// -------------------------------------------------------------------------
// x2("(?:x+?)?", "x", 0, 1);
// UnsupportedFeatureError("x?*?: Non-greedy repetitions)

// -------------------------------------------------------------------------
// x2("(?:x+?)?", "xx", 0, 1);
// UnsupportedFeatureError("x?*?: Non-greedy repetitions)

// -------------------------------------------------------------------------
// x2("(?:x+?)*", "", 0, 0);
// UnsupportedFeatureError("x?*?: Non-greedy repetitions)

// -------------------------------------------------------------------------
// x2("(?:x+?)*", "x", 0, 1);
// UnsupportedFeatureError("x?*?: Non-greedy repetitions)

// -------------------------------------------------------------------------
// x2("(?:x+?)*", "xx", 0, 2);
// UnsupportedFeatureError("x?*?: Non-greedy repetitions)

// -------------------------------------------------------------------------
// n("(?:x+?)+", "");
// UnsupportedFeatureError("x?*?: Non-greedy repetitions)

// -------------------------------------------------------------------------
// x2("(?:x+?)+", "x", 0, 1);
// UnsupportedFeatureError("x?*?: Non-greedy repetitions)

// -------------------------------------------------------------------------
// x2("(?:x+?)+", "xx", 0, 2);
// UnsupportedFeatureError("x?*?: Non-greedy repetitions)

// -------------------------------------------------------------------------
// x2("(?:x+?)\?\?", "", 0, 0);
// UnsupportedFeatureError("x?*?: Non-greedy repetitions)

// -------------------------------------------------------------------------
// x2("(?:x+?)\?\?", "x", 0, 0);
// UnsupportedFeatureError("x?*?: Non-greedy repetitions)

// -------------------------------------------------------------------------
// x2("(?:x+?)\?\?", "xx", 0, 0);
// UnsupportedFeatureError("x?*?: Non-greedy repetitions)

// -------------------------------------------------------------------------
// x2("(?:x+?)*?", "", 0, 0);
// UnsupportedFeatureError("x?*?: Non-greedy repetitions)

// -------------------------------------------------------------------------
// x2("(?:x+?)*?", "x", 0, 0);
// UnsupportedFeatureError("x?*?: Non-greedy repetitions)

// -------------------------------------------------------------------------
// x2("(?:x+?)*?", "xx", 0, 0);
// UnsupportedFeatureError("x?*?: Non-greedy repetitions)

// -------------------------------------------------------------------------
// n("(?:x+?)+?", "");
// UnsupportedFeatureError("x?*?: Non-greedy repetitions)

// -------------------------------------------------------------------------
// x2("(?:x+?)+?", "x", 0, 1);
// UnsupportedFeatureError("x?*?: Non-greedy repetitions)

// -------------------------------------------------------------------------
// x2("(?:x+?)+?", "xx", 0, 1);
// UnsupportedFeatureError("x?*?: Non-greedy repetitions)

// -------------------------------------------------------------------------
// x2("a|b", "a", 0, 1);
scan_test!(case_332, s332, S332, r#"a|b"#, "a", &[("a", 0, 1)], 332);

// -------------------------------------------------------------------------
// x2("a|b", "b", 0, 1);
scan_test!(case_333, s333, S333, r#"a|b"#, "b", &[("b", 0, 1)], 333);

// -------------------------------------------------------------------------
// x2("|a", "a", 0, 0);
scan_test!(
    case_334,
    s334,
    S334,
    r#"|a"#,
    "a",
    &[("a", 0, 1)], // Oniguruma: no match
    334
);

// -------------------------------------------------------------------------
// x2("(|a)", "a", 0, 0);
scan_test!(
    case_335,
    s335,
    S335,
    r#"(|a)"#,
    "a",
    &[("a", 0, 1)], // Oniguruma: no match
    335
);
// -------------------------------------------------------------------------
// x2("ab|bc", "ab", 0, 2);
scan_test!(case_336, s336, S336, r#"ab|bc"#, "ab", &[("ab", 0, 2)], 336);
// -------------------------------------------------------------------------
// x2("ab|bc", "bc", 0, 2);
scan_test!(case_337, s337, S337, r#"ab|bc"#, "bc", &[("bc", 0, 2)], 337);

// -------------------------------------------------------------------------
// x2("z(?:ab|bc)", "zbc", 0, 3);
scan_test!(
    case_338,
    s338,
    S338,
    r#"z(?:ab|bc)"#,
    "zbc",
    &[("zbc", 0, 3)],
    338
);

// -------------------------------------------------------------------------
// x2("a(?:ab|bc)c", "aabc", 0, 4);
scan_test!(
    case_339,
    s339,
    S339,
    r#"a(?:ab|bc)c"#,
    "aabc",
    &[("aabc", 0, 4)],
    339
);

// -------------------------------------------------------------------------
// x2("ab|(?:ac|az)", "az", 0, 2);
scan_test!(
    case_340,
    s340,
    S340,
    r#"ab|(?:ac|az)"#,
    "az",
    &[("az", 0, 2)],
    340
);

// -------------------------------------------------------------------------
// x2("a|b|c", "dc", 1, 2);
scan_test!(case_341, s341, S341, r#"a|b|c"#, "dc", &[("c", 1, 2)], 341);

// -------------------------------------------------------------------------
// x2("a|b|cd|efg|h|ijk|lmn|o|pq|rstuvwx|yz", "pqr", 0, 2);
scan_test!(
    case_342,
    s342,
    S342,
    r#"a|b|cd|efg|h|ijk|lmn|o|pq|rstuvwx|yz"#,
    "pqr",
    &[("pq", 0, 2)],
    342
);

// -------------------------------------------------------------------------
// n("a|b|cd|efg|h|ijk|lmn|o|pq|rstuvwx|yz", "mn");
scan_test!(
    case_343,
    s343,
    S343,
    r#"a|b|cd|efg|h|ijk|lmn|o|pq|rstuvwx|yz"#,
    "mn",
    &[],
    343
);

// -------------------------------------------------------------------------
// x2("a|^z", "ba", 1, 2);
// UnsupportedFeatureError("StartLine Look(Start)")

// -------------------------------------------------------------------------
// x2("a|^z", "za", 0, 1);
// UnsupportedFeatureError("StartLine Look(Start)")

// -------------------------------------------------------------------------
// x2("a|\\Gz", "bza", 2, 3);
// EscapeUnrecognized

// -------------------------------------------------------------------------
// x2("a|\\Gz", "za", 0, 1);
// EscapeUnrecognized

// -------------------------------------------------------------------------
// x2("a|\\Az", "bza", 2, 3);
// UnsupportedFeatureError("StartLine Look(Start)")

// -------------------------------------------------------------------------
// x2("a|\\Az", "za", 0, 1);
// UnsupportedFeatureError("StartLine Look(Start)")

// -------------------------------------------------------------------------
// x2("a|b\\Z", "ba", 1, 2);
// EscapeUnrecognized

// -------------------------------------------------------------------------
// x2("a|b\\Z", "b", 0, 1);
// EscapeUnrecognized

// -------------------------------------------------------------------------
// x2("a|b\\z", "ba", 1, 2);
// UnsupportedFeatureError("EndLine Look(End)")

// -------------------------------------------------------------------------
// x2("a|b\\z", "b", 0, 1);
// UnsupportedFeatureError("EndLine Look(End)")

// -------------------------------------------------------------------------
// x2("\\w|\\s", " ", 0, 1);
scan_test!(case_354, s354, S354, r#"\w|\s"#, " ", &[(" ", 0, 1)], 354);

// -------------------------------------------------------------------------
// n("\\w|\\w", " ");
scan_test!(case_355, s355, S355, r#"\w|\w"#, " ", &[], 355);

// -------------------------------------------------------------------------
// x2("\\w|%", "%", 0, 1);
scan_test!(case_356, s356, S356, r#"\w|%"#, "%", &[("%", 0, 1)], 356);

// -------------------------------------------------------------------------
// x2("\\w|[&$]", "&", 0, 1);
scan_test!(case_357, s357, S357, r#"\w|[&$]"#, "&", &[("&", 0, 1)], 357);

// -------------------------------------------------------------------------
// x2("[b-d]|[^e-z]", "a", 0, 1);
scan_test!(
    case_358,
    s358,
    S358,
    r#"[b-d]|[^e-z]"#,
    "a",
    &[("a", 0, 1)],
    358
);

// -------------------------------------------------------------------------
// x2("(?:a|[c-f])|bz", "dz", 0, 1);
scan_test!(
    case_359,
    s359,
    S359,
    r#"(?:a|[c-f])|bz"#,
    "dz",
    &[("d", 0, 1)],
    359
);

// -------------------------------------------------------------------------
// x2("(?:a|[c-f])|bz", "bz", 0, 2);
scan_test!(
    case_360,
    s360,
    S360,
    r#"(?:a|[c-f])|bz"#,
    "bz",
    &[("bz", 0, 2)],
    360
);

// -------------------------------------------------------------------------
// x2("abc|(?=zz)..f", "zzf", 0, 3);
// UnsupportedLookAround

// -------------------------------------------------------------------------
// x2("abc|(?!zz)..f", "abf", 0, 3);
// UnsupportedLookAround

// -------------------------------------------------------------------------
// x2("(?=za)..a|(?=zz)..a", "zza", 0, 3);
// UnsupportedLookAround

// -------------------------------------------------------------------------
// n("(?>a|abd)c", "abdc");
// FlagUnrecognized

// -------------------------------------------------------------------------
// x2("(?>abd|a)c", "abdc", 0, 4);
// FlagUnrecognized

// -------------------------------------------------------------------------
// x2("a?|b", "a", 0, 1);
// -------------------------------------------------------------------------
// x2("a?|b", "a", 0, 1);
scan_test!(case_366, s366, S366, r#"a?|b"#, "a", &[("a", 0, 1)], 366);

// -------------------------------------------------------------------------
// x2("a?|b", "b", 0, 0);
scan_test!(case_367, s367, S367, r#"a?|b"#, "b", &[("b", 0, 1)], 367);

// -------------------------------------------------------------------------
// x2("a?|b", "", 0, 0);
scan_test!(case_368, s368, S368, r#"a?|b"#, "", &[], 368);

// -------------------------------------------------------------------------
// x2("a*|b", "aa", 0, 2);
scan_test!(case_369, s369, S369, r#"a*|b"#, "aa", &[("aa", 0, 2)], 369);

// -------------------------------------------------------------------------
// x2("a*|b*", "ba", 0, 0);
scan_test!(
    case_370,
    s370,
    S370,
    r#"a*|b*"#,
    "ba",
    &[("b", 0, 1), ("a", 1, 2)],
    370
);

// -------------------------------------------------------------------------
// x2("a*|b*", "ab", 0, 1);
scan_test!(
    case_371,
    s371,
    S371,
    r#"a*|b*"#,
    "ab",
    &[("a", 0, 1), ("b", 1, 2)],
    371
);

// -------------------------------------------------------------------------
// x2("a+|b*", "", 0, 0);
scan_test!(case_372, s372, S372, r#"a+|b*"#, "", &[], 372);

// -------------------------------------------------------------------------
// x2("a+|b*", "bbb", 0, 3);
scan_test!(
    case_373,
    s373,
    S373,
    r#"a+|b*"#,
    "bbb",
    &[("bbb", 0, 3)],
    373
);

// -------------------------------------------------------------------------
// x2("a+|b*", "abbb", 0, 1);
scan_test!(
    case_374,
    s374,
    S374,
    r#"a+|b*"#,
    "abbb",
    &[("a", 0, 1), ("bbb", 1, 4)],
    374
);

// -------------------------------------------------------------------------
// n("a+|b+", "");
scan_test!(case_375, s375, S375, r#"a+|b+"#, "", &[], 375);

// -------------------------------------------------------------------------
// x2("(a|b)?", "b", 0, 1);
scan_test!(case_376, s376, S376, r#"(a|b)?"#, "b", &[("b", 0, 1)], 376);

// -------------------------------------------------------------------------
// x2("(a|b)*", "ba", 0, 2);
scan_test!(
    case_377,
    s377,
    S377,
    r#"(a|b)*"#,
    "ba",
    &[("ba", 0, 2)],
    377
);

// -------------------------------------------------------------------------
// x2("(a|b)+", "bab", 0, 3);
scan_test!(
    case_378,
    s378,
    S378,
    r#"(a|b)+"#,
    "bab",
    &[("bab", 0, 3)],
    378
);

// -------------------------------------------------------------------------
// x2("(ab|ca)+", "caabbc", 0, 4);
scan_test!(
    case_379,
    s379,
    S379,
    r#"(ab|ca)+"#,
    "caabbc",
    &[("caab", 0, 4)],
    379
);

// -------------------------------------------------------------------------
// x2("(ab|ca)+", "aabca", 1, 5);
scan_test!(
    case_380,
    s380,
    S380,
    r#"(ab|ca)+"#,
    "aabca",
    &[("abca", 1, 5)],
    380
);

// -------------------------------------------------------------------------
// x2("(ab|ca)+", "abzca", 0, 2);
scan_test!(
    case_381,
    s381,
    S381,
    r#"(ab|ca)+"#,
    "abzca",
    &[("ab", 0, 2), ("ca", 3, 5)],
    381
);

// -------------------------------------------------------------------------
// x2("(a|bab)+", "ababa", 0, 5);
scan_test!(
    case_382,
    s382,
    S382,
    r#"(a|bab)+"#,
    "ababa",
    &[("ababa", 0, 5)],
    382
);

// -------------------------------------------------------------------------
// x2("(a|bab)+", "ba", 1, 2);
scan_test!(
    case_383,
    s383,
    S383,
    r#"(a|bab)+"#,
    "ba",
    &[("a", 1, 2)],
    383
);

// -------------------------------------------------------------------------
// x2("(a|bab)+", "baaaba", 1, 4);
scan_test!(
    case_384,
    s384,
    S384,
    r#"(a|bab)+"#,
    "baaaba",
    &[("aaa", 1, 4), ("a", 5, 6)],
    384
);

// -------------------------------------------------------------------------
// x2("(?:a|b)(?:a|b)", "ab", 0, 2);
scan_test!(
    case_385,
    s385,
    S385,
    r#"(?:a|b)(?:a|b)"#,
    "ab",
    &[("ab", 0, 2)],
    385
);

// -------------------------------------------------------------------------
// x2("(?:a*|b*)(?:a*|b*)", "aaabbb", 0, 3);
scan_test!(
    case_386,
    s386,
    S386,
    r#"(?:a*|b*)(?:a*|b*)"#,
    "aaabbb",
    &[("aaabbb", 0, 6)],
    386
);

// -------------------------------------------------------------------------
// x2("(?:a*|b*)(?:a+|b+)", "aaabbb", 0, 6);
scan_test!(
    case_387,
    s387,
    S387,
    r#"(?:a*|b*)(?:a+|b+)"#,
    "aaabbb",
    &[("aaabbb", 0, 6)],
    387
);

// -------------------------------------------------------------------------
// x2("(?:a+|b+){2}", "aaabbb", 0, 6);
scan_test!(
    case_388,
    s388,
    S388,
    r#"(?:a+|b+){2}"#,
    "aaabbb",
    &[("aaabbb", 0, 6)],
    388
);

// -------------------------------------------------------------------------
// x2("h{0,}", "hhhh", 0, 4);
scan_test!(
    case_389,
    s389,
    S389,
    r#"h{0,}"#,
    "hhhh",
    &[("hhhh", 0, 4)],
    389
);

// -------------------------------------------------------------------------
// x2("(?:a+|b+){1,2}", "aaabbb", 0, 6);
scan_test!(
    case_390,
    s390,
    S390,
    r#"(?:a+|b+){1,2}"#,
    "aaabbb",
    &[("aaabbb", 0, 6)],
    390
);

// -------------------------------------------------------------------------
// n("ax{2}*a", "0axxxa1");
scan_test!(case_391, s391, S391, r#"ax{2}*a"#, "0axxxa1", &[], 391);

// -------------------------------------------------------------------------
// n("a.{0,2}?a", "0aXXXa0");
// UnsupportedFeatureError("[\0-\t\u{b}-\u{10ffff}]{0,2}?: Non-greedy repetitions. Consider using different scanner modes instead.")

// -------------------------------------------------------------------------
// n("a.{0,2}?a", "0aXXXXa0");
// UnsupportedFeatureError("[\0-\t\u{b}-\u{10ffff}]{0,2}?: Non-greedy repetitions. Consider using different scanner modes instead.")

// -------------------------------------------------------------------------
// x2("^a{2,}?a$", "aaa", 0, 3);
// UnsupportedFeatureError("StartLine Look(Start)")

// -------------------------------------------------------------------------
// x2("^[a-z]{2,}?$", "aaa", 0, 3);
// UnsupportedFeatureError("StartLine Look(Start)")

// -------------------------------------------------------------------------
// x2("(?:a+|\\Ab*)cc", "cc", 0, 2);
// UnsupportedFeatureError("StartLine Look(Start)")

// -------------------------------------------------------------------------
// n("(?:a+|\\Ab*)cc", "abcc");
// UnsupportedFeatureError("StartLine Look(Start)")

// -------------------------------------------------------------------------
// x2("(?:^a+|b+)*c", "aabbbabc", 6, 8);
// UnsupportedFeatureError("StartLine Look(Start)")

// -------------------------------------------------------------------------
// x2("(?:^a+|b+)*c", "aabbbbc", 0, 7);
// UnsupportedFeatureError("StartLine Look(Start)")

// -------------------------------------------------------------------------
// x2("a|(?i)c", "C", 0, 1);
scan_test!(case_401, s401, S401, r#"a|(?i)c"#, "C", &[("C", 0, 1)], 401);

// -------------------------------------------------------------------------
// x2("(?i)c|a", "C", 0, 1);
scan_test!(case_402, s402, S402, r#"(?i)c|a"#, "C", &[("C", 0, 1)], 402);

// -------------------------------------------------------------------------
// x2("(?i)c|a", "A", 0, 1);
scan_test!(case_403, s403, S403, r#"(?i)c|a"#, "A", &[("A", 0, 1)], 403);

// -------------------------------------------------------------------------
// x2("a(?i)b|c", "aB", 0, 2);
scan_test!(
    case_404,
    s404,
    S404,
    r#"a(?i)b|c"#,
    "aB",
    &[("aB", 0, 2)],
    404
);

// -------------------------------------------------------------------------
// x2("a(?i)b|c", "aC", 0, 2);
scan_test!(
    case_405,
    s405,
    S405,
    r#"a(?i)b|c"#,
    "aC",
    &[("C", 1, 2)],
    405
);

// -------------------------------------------------------------------------
// n("a(?i)b|c", "AC");
scan_test!(
    case_406,
    s406,
    S406,
    r#"a(?i)b|c"#,
    "AC",
    &[("C", 1, 2)],
    406
);

// -------------------------------------------------------------------------
// n("a(?:(?i)b)|c", "aC");
scan_test!(
    case_407,
    s407,
    S407,
    r#"a(?:(?i)b)|c"#,
    "aC",
    &[], // Oniguruma: &[("aC", 0, 2)]
    407
);

// -------------------------------------------------------------------------
// x2("(?i:c)|a", "C", 0, 1);
scan_test!(
    case_408,
    s408,
    S408,
    r#"(?i:c)|a"#,
    "C",
    &[("C", 0, 1)],
    408
);

// -------------------------------------------------------------------------
// n("(?i:c)|a", "A");
scan_test!(case_409, s409, S409, r#"(?i:c)|a"#, "A", &[], 409);

// -------------------------------------------------------------------------
// x2("[abc]?", "abc", 0, 1);
scan_test!(
    case_410,
    s410,
    S410,
    r#"[abc]?"#,
    "abc",
    &[("a", 0, 1), ("b", 1, 2), ("c", 2, 3)], // Oniguruma: &[("a", 0, 1)]
    410
);

// -------------------------------------------------------------------------
// x2("[abc]*", "abc", 0, 3);
scan_test!(
    case_411,
    s411,
    S411,
    r#"[abc]*"#,
    "abc",
    &[("abc", 0, 3)],
    411
);

// -------------------------------------------------------------------------
// x2("[^abc]*", "abc", 0, 0);
scan_test!(case_412, s412, S412, r#"[^abc]*"#, "abc", &[], 412);

// -------------------------------------------------------------------------
// n("[^abc]+", "abc");
scan_test!(case_413, s413, S413, r#"[^abc]+"#, "abc", &[], 413);

// -------------------------------------------------------------------------
// x2("a?\?", "aaa", 0, 0);
scan_test!(case_414, s414, S414, r#"a?\?"#, "aaa", &[], 414);

// -------------------------------------------------------------------------
// x2("ba?\?b", "bab", 0, 3);
scan_test!(
    case_415,
    s415,
    S415,
    r#"ba?\?b"#,
    "bab",
    &[], // Oniguruma: &[("bab", 0, 3)]
    415
);

// -------------------------------------------------------------------------
// x2("a*?", "aaa", 0, 0);
// UnsupportedFeatureError("x?*?: Non-greedy repetitions)

// -------------------------------------------------------------------------
// x2("ba*?", "baa", 0, 1);
// UnsupportedFeatureError("x?*?: Non-greedy repetitions)

// -------------------------------------------------------------------------
// x2("ba*?b", "baab", 0, 4);
// UnsupportedFeatureError("x?*?: Non-greedy repetitions)

// -------------------------------------------------------------------------
// x2("a+?", "aaa", 0, 1);
// UnsupportedFeatureError("x?*?: Non-greedy repetitions)

// -------------------------------------------------------------------------
// x2("ba+?", "baa", 0, 2);
// UnsupportedFeatureError("x?*?: Non-greedy repetitions)

// -------------------------------------------------------------------------
// x2("ba+?b", "baab", 0, 4);
// UnsupportedFeatureError("x?*?: Non-greedy repetitions)

// -------------------------------------------------------------------------
// x2("(?:a?)?\?", "a", 0, 0);
scan_test!(case_422, s422, S422, r#"(?:a?)?\?"#, "a", &[], 422);

// -------------------------------------------------------------------------
// x2("(?:a?\?)?", "a", 0, 0);
scan_test!(case_423, s423, S423, r#"(?:a?\?)?"#, "a", &[], 423);

// -------------------------------------------------------------------------
// x2("(?:a?)+?", "aaa", 0, 1);
// UnsupportedFeatureError("x?*?: Non-greedy repetitions)

// -------------------------------------------------------------------------
// x2("(?:a+)?\?", "aaa", 0, 0);
scan_test!(case_425, s425, S425, r#"(?:a+)?\?"#, "aaa", &[], 425);

// -------------------------------------------------------------------------
// x2("(?:a+)?\?b", "aaab", 0, 4);
scan_test!(
    case_426,
    s426,
    S426,
    r#"(?:a+)?\?b"#,
    "aaab",
    &[], // Oniguruma: &[("aaab", 0, 4)]
    426
);

// -------------------------------------------------------------------------
// x2("(?:ab)?{2}", "", 0, 0);
scan_test!(case_427, s427, S427, r#"(?:ab)?{2}"#, "", &[], 427);

// -------------------------------------------------------------------------
// x2("(?:ab)?{2}", "ababa", 0, 4);
scan_test!(
    case_428,
    s428,
    S428,
    r#"(?:ab)?{2}"#,
    "ababa",
    &[("abab", 0, 4)],
    428
);

// -------------------------------------------------------------------------
// x2("(?:ab)*{0}", "ababa", 0, 0);
scan_test!(case_429, s429, S429, r#"(?:ab)*{0}"#, "ababa", &[], 429);

// -------------------------------------------------------------------------
// x2("(?:ab){3,}", "abababab", 0, 8);
scan_test!(
    case_430,
    s430,
    S430,
    r#"(?:ab){3,}"#,
    "abababab",
    &[("abababab", 0, 8)],
    430
);

// -------------------------------------------------------------------------
// n("(?:ab){3,}", "abab");
scan_test!(case_431, s431, S431, r#"(?:ab){3,}"#, "abab", &[], 431);

// -------------------------------------------------------------------------
// x2("(?:ab){2,4}", "ababab", 0, 6);
scan_test!(
    case_432,
    s432,
    S432,
    r#"(?:ab){2,4}"#,
    "ababab",
    &[("ababab", 0, 6)],
    432
);

// -------------------------------------------------------------------------
// x2("(?:ab){2,4}", "ababababab", 0, 8);
scan_test!(
    case_433,
    s433,
    S433,
    r#"(?:ab){2,4}"#,
    "ababababab",
    &[("abababab", 0, 8)],
    433
);

// -------------------------------------------------------------------------
// x2("(?:ab){2,4}?", "ababababab", 0, 4);
// UnsupportedFeatureError("(?:ab){2,4}?: Non-greedy repetitions. Consider using different scanner modes instead.")

// -------------------------------------------------------------------------
// x2("(?:ab){,}", "ab{,}", 0, 5);
// RepetitionCountDecimalEmpty

// -------------------------------------------------------------------------
// x2("(?:abc)+?{2}", "abcabcabc", 0, 6);
// UnsupportedFeatureError("x?*?: Non-greedy repetitions)

// -------------------------------------------------------------------------
// x2("(?:X*)(?i:xa)", "XXXa", 0, 4);
scan_test!(
    case_437,
    s437,
    S437,
    r#"(?:X*)(?i:xa)"#,
    "XXXa",
    &[("XXXa", 0, 4)],
    437
);

// -------------------------------------------------------------------------
// x2("(d+)([^abc]z)", "dddz", 0, 4);
scan_test!(
    case_438,
    s438,
    S438,
    r#"(d+)([^abc]z)"#,
    "dddz",
    &[("dddz", 0, 4)],
    438
);

// -------------------------------------------------------------------------
// x2("([^abc]*)([^abc]z)", "dddz", 0, 4);
scan_test!(
    case_439,
    s439,
    S439,
    r#"([^abc]*)([^abc]z)"#,
    "dddz",
    &[("dddz", 0, 4)],
    439
);

// -------------------------------------------------------------------------
// x2("(\\w+)(\\wz)", "dddz", 0, 4);
scan_test!(
    case_440,
    s440,
    S440,
    r#"(\w+)(\wz)"#,
    "dddz",
    &[("dddz", 0, 4)],
    440
);

// -------------------------------------------------------------------------
// x3("(a)", "a", 0, 1, 1);
scan_test!(case_441, s441, S441, r#"(a)"#, "a", &[("a", 0, 1)], 441);

// -------------------------------------------------------------------------
// x3("(ab)", "ab", 0, 2, 1);
scan_test!(case_442, s442, S442, r#"(ab)"#, "ab", &[("ab", 0, 2)], 442);

// -------------------------------------------------------------------------
// x2("((ab))", "ab", 0, 2);
scan_test!(
    case_443,
    s443,
    S443,
    r#"((ab))"#,
    "ab",
    &[("ab", 0, 2)],
    443
);

// -------------------------------------------------------------------------
// x3("((ab))", "ab", 0, 2, 1);
scan_test!(
    case_444,
    s444,
    S444,
    r#"((ab))"#,
    "ab",
    &[("ab", 0, 2)],
    444
);

// -------------------------------------------------------------------------
// x3("((ab))", "ab", 0, 2, 2);
scan_test!(
    case_445,
    s445,
    S445,
    r#"((ab))"#,
    "ab",
    &[("ab", 0, 2)],
    445
);

// -------------------------------------------------------------------------
// x3("((((((((((((((((((((ab))))))))))))))))))))", "ab", 0, 2, 20);
scan_test!(
    case_446,
    s446,
    S446,
    r#"((((((((((((((((((((ab))))))))))))))))))))"#,
    "ab",
    &[("ab", 0, 2)],
    446
);

// -------------------------------------------------------------------------
// x3("(ab)(cd)", "abcd", 0, 2, 1);
scan_test!(
    case_447,
    s447,
    S447,
    r#"(ab)(cd)"#,
    "abcd",
    &[("abcd", 0, 4)],
    447
);

// -------------------------------------------------------------------------
// x3("(ab)(cd)", "abcd", 2, 4, 2);
scan_test!(
    case_448,
    s448,
    S448,
    r#"(ab)(cd)"#,
    "abcd",
    &[("abcd", 0, 4)],
    448
);

// -------------------------------------------------------------------------
// x3("()(a)bc(def)ghijk", "abcdefghijk", 3, 6, 3);
scan_test!(
    case_449,
    s449,
    S449,
    r#"()(a)bc(def)ghijk"#,
    "abcdefghijk",
    &[("abcdefghijk", 0, 11)],
    449
);

// -------------------------------------------------------------------------
// x3("(()(a)bc(def)ghijk)", "abcdefghijk", 3, 6, 4);
scan_test!(
    case_450,
    s450,
    S450,
    r#"(()(a)bc(def)ghijk)"#,
    "abcdefghijk",
    &[("abcdefghijk", 0, 11)],
    450
);

// -------------------------------------------------------------------------
// x2("(^a)", "a", 0, 1);
// UnsupportedFeatureError("StartLine Look(Start)")

// -------------------------------------------------------------------------
// x3("(a)|(a)", "ba", 1, 2, 1);
scan_test!(
    case_452,
    s452,
    S452,
    r#"(a)|(a)"#,
    "ba",
    &[("a", 1, 2)],
    452
);

// -------------------------------------------------------------------------
// x3("(^a)|(a)", "ba", 1, 2, 2);
// UnsupportedFeatureError("StartLine Look(Start)")

// -------------------------------------------------------------------------
// x3("(a?)", "aaa", 0, 1, 1);
scan_test!(
    case_454,
    s454,
    S454,
    r#"(a?)"#,
    "aaa",
    &[("a", 0, 1), ("a", 1, 2), ("a", 2, 3)],
    454
);

// -------------------------------------------------------------------------
// x3("(a*)", "aaa", 0, 3, 1);
scan_test!(
    case_455,
    s455,
    S455,
    r#"(a*)"#,
    "aaa",
    &[("aaa", 0, 3)],
    455
);

// -------------------------------------------------------------------------
// x3("(a*)", "", 0, 0, 1);
scan_test!(case_456, s456, S456, r#"(a*)"#, "", &[], 456);

// -------------------------------------------------------------------------
// x3("(a+)", "aaaaaaa", 0, 7, 1);
scan_test!(
    case_457,
    s457,
    S457,
    r#"(a+)"#,
    "aaaaaaa",
    &[("aaaaaaa", 0, 7)],
    457
);

// -------------------------------------------------------------------------
// x3("(a+|b*)", "bbbaa", 0, 3, 1);
scan_test!(
    case_458,
    s458,
    S458,
    r#"(a+|b*)"#,
    "bbbaa",
    &[("bbb", 0, 3), ("aa", 3, 5)],
    458
);

// -------------------------------------------------------------------------
// x3("(a+|b?)", "bbbaa", 0, 1, 1);
scan_test!(
    case_459,
    s459,
    S459,
    r#"(a+|b?)"#,
    "bbbaa",
    &[("b", 0, 1), ("b", 1, 2), ("b", 2, 3), ("aa", 3, 5)], // Oniguruma: &[("b", 0, 1)]
    459
);

// -------------------------------------------------------------------------
// x3("(abc)?", "abc", 0, 3, 1);
scan_test!(
    case_460,
    s460,
    S460,
    r#"(abc)?"#,
    "abc",
    &[("abc", 0, 3)],
    460
);

// -------------------------------------------------------------------------
// x3("(abc)*", "abc", 0, 3, 1);
scan_test!(
    case_461,
    s461,
    S461,
    r#"(abc)*"#,
    "abc",
    &[("abc", 0, 3)],
    461
);

// -------------------------------------------------------------------------
// x3("(abc)+", "abc", 0, 3, 1);
scan_test!(
    case_462,
    s462,
    S462,
    r#"(abc)+"#,
    "abc",
    &[("abc", 0, 3)],
    462
);

// -------------------------------------------------------------------------
// x3("(xyz|abc)+", "abc", 0, 3, 1);
scan_test!(
    case_463,
    s463,
    S463,
    r#"(xyz|abc)+"#,
    "abc",
    &[("abc", 0, 3)],
    463
);

// -------------------------------------------------------------------------
// x3("([xyz][abc]|abc)+", "abc", 0, 3, 1);
scan_test!(
    case_464,
    s464,
    S464,
    r#"([xyz][abc]|abc)+"#,
    "abc",
    &[("abc", 0, 3)],
    464
);

// -------------------------------------------------------------------------
// x3("((?i:abc))", "AbC", 0, 3, 1);
scan_test!(
    case_465,
    s465,
    S465,
    r#"((?i:abc))"#,
    "AbC",
    &[("AbC", 0, 3)],
    465
);

// -------------------------------------------------------------------------
// x2("(abc)(?i:\\1)", "abcABC", 0, 6);
// UnsupportedBackreference

// -------------------------------------------------------------------------
// x3("((?m:a.c))", "a\nc", 0, 3, 1);
scan_test!(
    case_467,
    s467,
    S467,
    r#"((?m:a.c))"#,
    "a\nc",
    &[], // Oniguruma: &[("a\\n", 0, 3)]
    467
);

// -------------------------------------------------------------------------
// x3("((?=az)a)", "azb", 0, 1, 1);
// UnsupportedLookAround

// -------------------------------------------------------------------------
// x3("abc|(.abd)", "zabd", 0, 4, 1);
scan_test!(
    case_469,
    s469,
    S469,
    r#"abc|(.abd)"#,
    "zabd",
    &[("zabd", 0, 4)],
    469
);

// -------------------------------------------------------------------------
// x2("(?:abc)|(ABC)", "abc", 0, 3);
scan_test!(
    case_470,
    s470,
    S470,
    r#"(?:abc)|(ABC)"#,
    "abc",
    &[("abc", 0, 3)],
    470
);

// -------------------------------------------------------------------------
// x3("(?i:(abc))|(zzz)", "ABC", 0, 3, 1);
scan_test!(
    case_471,
    s471,
    S471,
    r#"(?i:(abc))|(zzz)"#,
    "ABC",
    &[("ABC", 0, 3)],
    471
);

// -------------------------------------------------------------------------
// x3("a*(.)", "aaaaz", 4, 5, 1);
scan_test!(
    case_472,
    s472,
    S472,
    r#"a*(.)"#,
    "aaaaz",
    &[("aaaaz", 0, 5)],
    472
);

// -------------------------------------------------------------------------
// x3("a*?(.)", "aaaaz", 0, 1, 1);
// UnsupportedFeatureError("x?*?: Non-greedy repetitions)

// -------------------------------------------------------------------------
// x3("a*?(c)", "aaaac", 4, 5, 1);
// UnsupportedFeatureError("x?*?: Non-greedy repetitions)

// -------------------------------------------------------------------------
// x3("[bcd]a*(.)", "caaaaz", 5, 6, 1);
scan_test!(
    case_475,
    s475,
    S475,
    r#"[bcd]a*(.)"#,
    "caaaaz",
    &[("caaaaz", 0, 6)],
    475
);

// -------------------------------------------------------------------------
// x3("(\\Abb)cc", "bbcc", 0, 2, 1);
// UnsupportedFeatureError("StartLine Look(Start)")

// -------------------------------------------------------------------------
// n("(\\Abb)cc", "zbbcc");
// UnsupportedFeatureError("StartLine Look(Start)")

// -------------------------------------------------------------------------
// x3("(^bb)cc", "bbcc", 0, 2, 1);
// UnsupportedFeatureError("StartLine Look(Start)")

// -------------------------------------------------------------------------
// n("(^bb)cc", "zbbcc");
// UnsupportedFeatureError("StartLine Look(Start)")

// -------------------------------------------------------------------------
// x3("cc(bb$)", "ccbb", 2, 4, 1);
// UnsupportedFeatureError("EndLine Look(End)")

// -------------------------------------------------------------------------
// n("cc(bb$)", "ccbbb");
// UnsupportedFeatureError("EndLine Look(End)")

// -------------------------------------------------------------------------
// n("(\\1)", "");
// UnsupportedBackreference

// -------------------------------------------------------------------------
// n("\\1(a)", "aa");
// UnsupportedBackreference

// -------------------------------------------------------------------------
// n("(a(b)\\1)\\2+", "ababb");
// UnsupportedBackreference

// -------------------------------------------------------------------------
// n("(?:(?:\\1|z)(a))+$", "zaa");
// UnsupportedBackreference

// -------------------------------------------------------------------------
// x2("(?:(?:\\1|z)(a))+$", "zaaa", 0, 4);
// UnsupportedBackreference

// -------------------------------------------------------------------------
// x2("(a)(?=\\1)", "aa", 0, 1);
// UnsupportedLookAround

// -------------------------------------------------------------------------
// n("(a)$|\\1", "az");
// UnsupportedBackreference

// -------------------------------------------------------------------------
// x2("(a)\\1", "aa", 0, 2);
// UnsupportedBackreference

// -------------------------------------------------------------------------
// n("(a)\\1", "ab");
// UnsupportedBackreference

// -------------------------------------------------------------------------
// x2("(a?)\\1", "aa", 0, 2);
// UnsupportedBackreference

// -------------------------------------------------------------------------
// x2("(a?\?)\\1", "aa", 0, 0);
// UnsupportedBackreference

// -------------------------------------------------------------------------
// x2("(a*)\\1", "aaaaa", 0, 4);
// UnsupportedBackreference

// -------------------------------------------------------------------------
// x3("(a*)\\1", "aaaaa", 0, 2, 1);
// UnsupportedBackreference

// -------------------------------------------------------------------------
// x2("a(b*)\\1", "abbbb", 0, 5);
// UnsupportedBackreference

// -------------------------------------------------------------------------
// x2("a(b*)\\1", "ab", 0, 1);
// UnsupportedBackreference

// -------------------------------------------------------------------------
// x2("(a*)(b*)\\1\\2", "aaabbaaabb", 0, 10);
// UnsupportedBackreference

// -------------------------------------------------------------------------
// x2("(a*)(b*)\\2", "aaabbbb", 0, 7);
// UnsupportedBackreference

// -------------------------------------------------------------------------
// x2("(((((((a*)b))))))c\\7", "aaabcaaa", 0, 8);
// UnsupportedBackreference

// -------------------------------------------------------------------------
// x3("(((((((a*)b))))))c\\7", "aaabcaaa", 0, 3, 7);
// UnsupportedBackreference

// -------------------------------------------------------------------------
// x2("(a)(b)(c)\\2\\1\\3", "abcbac", 0, 6);
// UnsupportedBackreference

// -------------------------------------------------------------------------
// x2("([a-d])\\1", "cc", 0, 2);
// UnsupportedBackreference

// -------------------------------------------------------------------------
// x2("(\\w\\d\\s)\\1", "f5 f5 ", 0, 6);
// UnsupportedBackreference

// -------------------------------------------------------------------------
// n("(\\w\\d\\s)\\1", "f5 f5");
// UnsupportedBackreference

// -------------------------------------------------------------------------
// x2("(who|[a-c]{3})\\1", "whowho", 0, 6);
// UnsupportedBackreference

// -------------------------------------------------------------------------
// x2("...(who|[a-c]{3})\\1", "abcwhowho", 0, 9);
// UnsupportedBackreference

// -------------------------------------------------------------------------
// x2("(who|[a-c]{3})\\1", "cbccbc", 0, 6);
// UnsupportedBackreference

// -------------------------------------------------------------------------
// x2("(^a)\\1", "aa", 0, 2);
// UnsupportedBackreference

// -------------------------------------------------------------------------
// n("(^a)\\1", "baa");
// UnsupportedBackreference

// -------------------------------------------------------------------------
// n("(a$)\\1", "aa");
// UnsupportedBackreference

// -------------------------------------------------------------------------
// n("(ab\\Z)\\1", "ab");
// EscapeUnrecognized

// -------------------------------------------------------------------------
// x2("(a*\\Z)\\1", "a", 1, 1);
// EscapeUnrecognized

// -------------------------------------------------------------------------
// x2(".(a*\\Z)\\1", "ba", 1, 2);
// EscapeUnrecognized

// -------------------------------------------------------------------------
// x3("(.(abc)\\2)", "zabcabc", 0, 7, 1);
// UnsupportedBackreference

// -------------------------------------------------------------------------
// x3("(.(..\\d.)\\2)", "z12341234", 0, 9, 1);
// UnsupportedBackreference

// -------------------------------------------------------------------------
// x2("((?i:az))\\1", "AzAz", 0, 4);
// UnsupportedBackreference

// -------------------------------------------------------------------------
// n("((?i:az))\\1", "Azaz");
// UnsupportedBackreference

// -------------------------------------------------------------------------
// x2("(?<=a)b", "ab", 1, 2);
// UnsupportedLookAround

// -------------------------------------------------------------------------
// n("(?<=a)b", "bb");
// UnsupportedLookAround

// -------------------------------------------------------------------------
// x2("(?<=a|b)b", "bb", 1, 2);
// UnsupportedLookAround

// -------------------------------------------------------------------------
// x2("(?<=a|bc)b", "bcb", 2, 3);
// UnsupportedLookAround

// -------------------------------------------------------------------------
// x2("(?<=a|bc)b", "ab", 1, 2);
// UnsupportedLookAround

// -------------------------------------------------------------------------
// x2("(?<=a|bc||defghij|klmnopq|r)z", "rz", 1, 2);
// UnsupportedLookAround

// -------------------------------------------------------------------------
// x3("(?<=(abc))d", "abcd", 0, 3, 1);
// UnsupportedLookAround

// -------------------------------------------------------------------------
// x2("(?<=(?i:abc))d", "ABCd", 3, 4);
// UnsupportedLookAround

// -------------------------------------------------------------------------
// x2("(?<=^|b)c", " cbc", 3, 4);
// UnsupportedLookAround

// -------------------------------------------------------------------------
// x2("(?<=a|^|b)c", " cbc", 3, 4);
// UnsupportedLookAround

// -------------------------------------------------------------------------
// x2("(?<=a|(^)|b)c", " cbc", 3, 4);
// UnsupportedLookAround

// -------------------------------------------------------------------------
// x2("(?<=a|(^)|b)c", "cbc", 0, 1);
// UnsupportedLookAround

// -------------------------------------------------------------------------
// n("(Q)|(?<=a|(?(1))|b)c", "czc");
// UnsupportedLookAround

// -------------------------------------------------------------------------
// x2("(Q)(?<=a|(?(1))|b)c", "cQc", 1, 3);
// UnsupportedLookAround

// -------------------------------------------------------------------------
// x2("(?<=a|(?~END)|b)c", "ENDc", 3, 4);
// UnsupportedLookAround

// -------------------------------------------------------------------------
// n("(?<!^|b)c", "cbc");
// UnsupportedLookAround

// -------------------------------------------------------------------------
// n("(?<!a|^|b)c", "cbc");
// UnsupportedLookAround

// -------------------------------------------------------------------------
// n("(?<!a|(?:^)|b)c", "cbc");
// UnsupportedLookAround

// -------------------------------------------------------------------------
// x2("(?<!a|(?:^)|b)c", " cbc", 1, 2);
// UnsupportedLookAround

// -------------------------------------------------------------------------
// x2("(a)\\g<1>", "aa", 0, 2);
// EscapeUnrecognized

// -------------------------------------------------------------------------
// x2("(?<!a)b", "cb", 1, 2);
// UnsupportedLookAround

// -------------------------------------------------------------------------
// n("(?<!a)b", "ab");
// UnsupportedLookAround

// -------------------------------------------------------------------------
// x2("(?<!a|bc)b", "bbb", 0, 1);
// UnsupportedLookAround

// -------------------------------------------------------------------------
// n("(?<!a|bc)z", "bcz");
// UnsupportedLookAround

// -------------------------------------------------------------------------
// x2("(?<name1>a)", "a", 0, 1);
scan_test!(
    case_542,
    s542,
    S542,
    r#"(?<name1>a)"#,
    "a",
    &[("a", 0, 1)],
    542
);

// -------------------------------------------------------------------------
// x2("(?<name_2>ab)\\g<name_2>", "abab", 0, 4);
// EscapeUnrecognized

// -------------------------------------------------------------------------
// x2("(?<name_3>.zv.)\\k<name_3>", "azvbazvb", 0, 8);
// EscapeUnrecognized

// -------------------------------------------------------------------------
// x2("(?<=\\g<ab>)|-\\zEND (?<ab>XyZ)", "XyZ", 3, 3);
// UnsupportedLookAround

// -------------------------------------------------------------------------
// x2("(?<n>|a\\g<n>)+", "", 0, 0);
// EscapeUnrecognized

// -------------------------------------------------------------------------
// x2("(?<n>|\\(\\g<n>\\))+$", "()(())", 0, 6);
// EscapeUnrecognized

// -------------------------------------------------------------------------
// x3("\\g<n>(?<n>.){0}", "X", 0, 1, 1);
// EscapeUnrecognized

// -------------------------------------------------------------------------
// x2("\\g<n>(abc|df(?<n>.YZ){2,8}){0}", "XYZ", 0, 3);
// EscapeUnrecognized

// -------------------------------------------------------------------------
// x2("\\A(?<n>(a\\g<n>)|)\\z", "aaaa", 0, 4);
// EscapeUnrecognized

// -------------------------------------------------------------------------
// x2("(?<n>|\\g<m>\\g<n>)\\z|\\zEND (?<m>a|(b)\\g<m>)", "bbbbabba", 0, 8);
// EscapeUnrecognized

// -------------------------------------------------------------------------
// x2("(?<name1240>\\w+\\sx)a+\\k<name1240>", "  fg xaaaaaaaafg x", 2, 18);
// EscapeUnrecognized

// -------------------------------------------------------------------------
// x3("(z)()()(?<_9>a)\\g<_9>", "zaa", 2, 3, 1);
// EscapeUnrecognized

// -------------------------------------------------------------------------
// x2("(.)(((?<_>a)))\\k<_>", "zaa", 0, 3);
// EscapeUnrecognized

// -------------------------------------------------------------------------
// x2("((?<name1>\\d)|(?<name2>\\w))(\\k<name1>|\\k<name2>)", "ff", 0, 2);
// EscapeUnrecognized

// -------------------------------------------------------------------------
// x2("(?:(?<x>)|(?<x>efg))\\k<x>", "", 0, 0);
// GroupNameDuplicate

// -------------------------------------------------------------------------
// x2("(?:(?<x>abc)|(?<x>efg))\\k<x>", "abcefgefg", 3, 9);
// GroupNameDuplicate

// -------------------------------------------------------------------------
// n("(?:(?<x>abc)|(?<x>efg))\\k<x>", "abcefg");
// GroupNameDuplicate

// -------------------------------------------------------------------------
// x2("(?<x>x)(?<x>xx)\\k<x>", "xxxx", 0, 4);
// GroupNameDuplicate

// -------------------------------------------------------------------------
// x2("(?<x>x)(?<x>xx)\\k<x>", "xxxxz", 0, 4);
// GroupNameDuplicate

// -------------------------------------------------------------------------
// x2("(?:(?<n1>.)|(?<n1>..)|(?<n1>...)|(?<n1>....)|(?<n1>.....)|(?<n1>......)|(?<n1>.......)|(?<n1>........)|(?<n1>.........)|(?<n1>..........)|(?<n1>...........)|(?<n1>............)|(?<n1>.............)|(?<n1>..............))\\k<n1>$", "a-pyumpyum", 2, 10);
// GroupNameDuplicate

// -------------------------------------------------------------------------
// x3("(?:(?<n1>.)|(?<n1>..)|(?<n1>...)|(?<n1>....)|(?<n1>.....)|(?<n1>......)|(?<n1>.......)|(?<n1>........)|(?<n1>.........)|(?<n1>..........)|(?<n1>...........)|(?<n1>............)|(?<n1>.............)|(?<n1>..............))\\k<n1>$", "xxxxabcdefghijklmnabcdefghijklmn", 4, 18, 14);
// GroupNameDuplicate

// -------------------------------------------------------------------------
// x3("(?<name1>)(?<name2>)(?<name3>)(?<name4>)(?<name5>)(?<name6>)(?<name7>)(?<name8>)(?<name9>)(?<name10>)(?<name11>)(?<name12>)(?<name13>)(?<name14>)(?<name15>)(?<name16>aaa)(?<name17>)$", "aaa", 0, 3, 16);
// UnsupportedFeatureError("EndLine Look(End)")

// -------------------------------------------------------------------------
// x2("(?<foo>a|\\(\\g<foo>\\))", "a", 0, 1);
// EscapeUnrecognized

// -------------------------------------------------------------------------
// x2("(?<foo>a|\\(\\g<foo>\\))", "((((((a))))))", 0, 13);
// EscapeUnrecognized

// -------------------------------------------------------------------------
// x3("(?<foo>a|\\(\\g<foo>\\))", "((((((((a))))))))", 0, 17, 1);
// EscapeUnrecognized

// -------------------------------------------------------------------------
// x2("\\g<bar>|\\zEND(?<bar>.*abc$)", "abcxxxabc", 0, 9);
// EscapeUnrecognized

// -------------------------------------------------------------------------
// x2("\\g<1>|\\zEND(.a.)", "bac", 0, 3);
// EscapeUnrecognized

// -------------------------------------------------------------------------
// x3("\\g<_A>\\g<_A>|\\zEND(.a.)(?<_A>.b.)", "xbxyby", 3, 6, 1);
// EscapeUnrecognized

// -------------------------------------------------------------------------
// x2("\\A(?:\\g<pon>|\\g<pan>|\\zEND  (?<pan>a|c\\g<pon>c)(?<pon>b|d\\g<pan>d))$", "cdcbcdc", 0, 7);
// EscapeUnrecognized

// -------------------------------------------------------------------------
// x2("\\A(?<n>|a\\g<m>)\\z|\\zEND (?<m>\\g<n>)", "aaaa", 0, 4);
// EscapeUnrecognized

// -------------------------------------------------------------------------
// x2("(?<n>(a|b\\g<n>c){3,5})", "baaaaca", 1, 5);
// EscapeUnrecognized

// -------------------------------------------------------------------------
// x2("(?<n>(a|b\\g<n>c){3,5})", "baaaacaaaaa", 0, 10);
// EscapeUnrecognized

// -------------------------------------------------------------------------
// x2("(?<pare>\\(([^\\(\\)]++|\\g<pare>)*+\\))", "((a))", 0, 5);
// EscapeUnrecognized

// -------------------------------------------------------------------------
// x2("()*\\1", "", 0, 0);
// UnsupportedBackreference

// -------------------------------------------------------------------------
// x2("(?:()|())*\\1\\2", "", 0, 0);
// UnsupportedBackreference

// -------------------------------------------------------------------------
// x2("(?:a*|b*)*c", "abadc", 4, 5);
scan_test!(
    case_577,
    s577,
    S577,
    r#"(?:a*|b*)*c"#,
    "abadc",
    &[("c", 4, 5)],
    577
);

// -------------------------------------------------------------------------
// x3("(?:\\1a|())*", "a", 0, 0, 1);
// UnsupportedBackreference

// -------------------------------------------------------------------------
// x2("x((.)*)*x", "0x1x2x3", 1, 6);
scan_test!(
    case_579,
    s579,
    S579,
    r#"x((.)*)*x"#,
    "0x1x2x3",
    &[("x1x2x", 1, 6)],
    579
);

// -------------------------------------------------------------------------
// x2("x((.)*)*x(?i:\\1)\\Z", "0x1x2x1X2", 1, 9);
// UnsupportedBackreference

// -------------------------------------------------------------------------
// x2("(?:()|()|()|()|()|())*\\2\\5", "", 0, 0);
// UnsupportedBackreference

// -------------------------------------------------------------------------
// x2("(?:()|()|()|(x)|()|())*\\2b\\5", "b", 0, 1);
// UnsupportedBackreference

// -------------------------------------------------------------------------
// x2("[0-9-a]", "-", 0, 1);   // PR#44
scan_test!(case_583, s583, S583, r#"[0-9-a]"#, "-", &[("-", 0, 1)], 583);

// -------------------------------------------------------------------------
// n("[0-9-a]", ":");          // PR#44
scan_test!(case_584, s584, S584, r#"[0-9-a]"#, ":", &[], 584);

// -------------------------------------------------------------------------
// x3("(\\(((?:[^(]|\\g<1>)*)\\))", "(abc)(abc)", 1, 4, 2); // PR#43
// EscapeUnrecognized

// -------------------------------------------------------------------------
// x2("\\o{101}", "A", 0, 1);
// EscapeUnrecognized

// -------------------------------------------------------------------------
// x2("\\A(a|b\\g<1>c)\\k<1+3>\\z", "bbacca", 0, 6);
// EscapeUnrecognized

// -------------------------------------------------------------------------
// n("\\A(a|b\\g<1>c)\\k<1+3>\\z", "bbaccb");
// EscapeUnrecognized

// -------------------------------------------------------------------------
// x2("(?i)\\A(a|b\\g<1>c)\\k<1+2>\\z", "bBACcbac", 0, 8);
// EscapeUnrecognized

// -------------------------------------------------------------------------
// x2("(?i)(?<X>aa)|(?<X>bb)\\k<X>", "BBbb", 0, 4);
// GroupNameDuplicate

// -------------------------------------------------------------------------
// x2("(?:\\k'+1'B|(A)C)*", "ACAB", 0, 4); // relative backref by positive number
// EscapeUnrecognized

// -------------------------------------------------------------------------
// x2("\\g<+2>(abc)(ABC){0}", "ABCabc", 0, 6); // relative call by positive number
// EscapeUnrecognized

// -------------------------------------------------------------------------
// x2("A\\g'0'|B()", "AAAAB", 0, 5);
// EscapeUnrecognized

// -------------------------------------------------------------------------
// x3("(A\\g'0')|B", "AAAAB", 0, 5, 1);
// EscapeUnrecognized

// -------------------------------------------------------------------------
// x2("(a*)(?(1))aa", "aaaaa", 0, 5);
// FlagUnrecognized

// -------------------------------------------------------------------------
// x2("(a*)(?(-1))aa", "aaaaa", 0, 5);
// FlagUnrecognized

// -------------------------------------------------------------------------
// x2("(?<name>aaa)(?('name'))aa", "aaaaa", 0, 5);
// FlagUnrecognized

// -------------------------------------------------------------------------
// x2("(a)(?(1)aa|bb)a", "aaaaa", 0, 4);
// FlagUnrecognized

// -------------------------------------------------------------------------
// x2("(?:aa|())(?(<1>)aa|bb)a", "aabba", 0, 5);
// FlagUnrecognized

// -------------------------------------------------------------------------
// x2("(?:aa|())(?('1')aa|bb|cc)a", "aacca", 0, 5);
// FlagUnrecognized

// -------------------------------------------------------------------------
// x3("(a*)(?(1)aa|a)b", "aaab", 0, 1, 1);
// FlagUnrecognized

// -------------------------------------------------------------------------
// n("(a)(?(1)a|b)c", "abc");
// FlagUnrecognized

// -------------------------------------------------------------------------
// x2("(a)(?(1)|)c", "ac", 0, 2);
// FlagUnrecognized

// -------------------------------------------------------------------------
// n("(?()aaa|bbb)", "bbb");
// FlagUnrecognized

// -------------------------------------------------------------------------
// x2("(a)(?(1+0)b|c)d", "abd", 0, 3);
// FlagUnrecognized

// -------------------------------------------------------------------------
// x2("(?:(?'name'a)|(?'name'b))(?('name')c|d)e", "ace", 0, 3);
// FlagUnrecognized

// -------------------------------------------------------------------------
// x2("(?:(?'name'a)|(?'name'b))(?('name')c|d)e", "bce", 0, 3);
// FlagUnrecognized

// -------------------------------------------------------------------------
// x2("\\R", "\r\n", 0, 2);
// EscapeUnrecognized

// -------------------------------------------------------------------------
// x2("\\R", "\r", 0, 1);
// EscapeUnrecognized

// -------------------------------------------------------------------------
// x2("\\R", "\n", 0, 1);
// EscapeUnrecognized

// -------------------------------------------------------------------------
// x2("\\R", "\x0b", 0, 1);
// EscapeUnrecognized

// -------------------------------------------------------------------------
// n("\\R\\n", "\r\n");
// EscapeUnrecognized

// -------------------------------------------------------------------------
// x2("\\R", "\xc2\x85", 0, 2);
// EscapeUnrecognized

// -------------------------------------------------------------------------
// x2("\\N", "a", 0, 1);
// EscapeUnrecognized

// -------------------------------------------------------------------------
// n("\\N", "\n");
// EscapeUnrecognized

// -------------------------------------------------------------------------
// n("(?m:\\N)", "\n");
// EscapeUnrecognized

// -------------------------------------------------------------------------
// n("(?-m:\\N)", "\n");
// EscapeUnrecognized

// -------------------------------------------------------------------------
// x2("\\O", "a", 0, 1);
// EscapeUnrecognized

// -------------------------------------------------------------------------
// x2("\\O", "\n", 0, 1);
// EscapeUnrecognized

// -------------------------------------------------------------------------
// x2("(?m:\\O)", "\n", 0, 1);
// EscapeUnrecognized

// -------------------------------------------------------------------------
// x2("(?-m:\\O)", "\n", 0, 1);
// EscapeUnrecognized

// -------------------------------------------------------------------------
// x2("\\K", "a", 0, 0);
// EscapeUnrecognized

// -------------------------------------------------------------------------
// x2("a\\K", "a", 1, 1);
// EscapeUnrecognized

// -------------------------------------------------------------------------
// x2("a\\Kb", "ab", 1, 2);
// EscapeUnrecognized

// -------------------------------------------------------------------------
// x2("(a\\Kb|ac\\Kd)", "acd", 2, 3);
// EscapeUnrecognized

// -------------------------------------------------------------------------
// x2("(a\\Kb|\\Kac\\K)*", "acababacab", 9, 10);
// EscapeUnrecognized

// -------------------------------------------------------------------------
// x2("(?:()|())*\\1", "abc", 0, 0);
// UnsupportedBackreference

// -------------------------------------------------------------------------
// x2("(?:()|())*\\2", "abc", 0, 0);
// UnsupportedBackreference

// -------------------------------------------------------------------------
// x2("(?:()|()|())*\\3\\1", "abc", 0, 0);
// UnsupportedBackreference

// -------------------------------------------------------------------------
// x2("(|(?:a(?:\\g'1')*))b|", "abc", 0, 2);
// EscapeUnrecognized

// -------------------------------------------------------------------------
// x2("^(\"|)(.*)\\1$", "XX", 0, 2);
// UnsupportedBackreference

// -------------------------------------------------------------------------
// x2("(abc|def|ghi|jkl|mno|pqr|stu){0,10}?\\z", "admno", 2, 5);
// UnsupportedFeatureError("((?:(?:abc)|(?:def)|(?:ghi)|(?:jkl)|(?:mno)|(?:pqr)|(?:stu))){0,10}?: Non-greedy repetitions. Consider using different scanner modes instead.")

// -------------------------------------------------------------------------
// x2("(abc|(def|ghi|jkl|mno|pqr){0,7}?){5}\\z", "adpqrpqrpqr", 2, 11); // cover OP_REPEAT_INC_NG_SG
// UnsupportedFeatureError("((?:(?:def)|(?:ghi)|(?:jkl)|(?:mno)|(?:pqr))){0,7}?: Non-greedy repetitions. Consider using different scanner modes instead.")

// -------------------------------------------------------------------------
// x2("(?!abc).*\\z", "abcde", 1, 5); // cover OP_PREC_READ_NOT_END
// UnsupportedLookAround

// -------------------------------------------------------------------------
// x2("(.{2,})?", "abcde", 0, 5); // up coverage
scan_test!(
    case_635,
    s635,
    S635,
    r#"(.{2,})?"#,
    "abcde",
    &[("abcde", 0, 5)],
    635
);

// -------------------------------------------------------------------------
// x2("((a|b|c|d|e|f|g|h|i|j|k|l|m|n)+)?", "abcde", 0, 5); // up coverage
scan_test!(
    case_636,
    s636,
    S636,
    r#"((a|b|c|d|e|f|g|h|i|j|k|l|m|n)+)?"#,
    "abcde",
    &[("abcde", 0, 5)],
    636
);

// -------------------------------------------------------------------------
// x2("((a|b|c|d|e|f|g|h|i|j|k|l|m|n){3,})?", "abcde", 0, 5); // up coverage
scan_test!(
    case_637,
    s637,
    S637,
    r#"((a|b|c|d|e|f|g|h|i|j|k|l|m|n){3,})?"#,
    "abcde",
    &[("abcde", 0, 5)],
    637
);

// -------------------------------------------------------------------------
// x2("((?:a(?:b|c|d|e|f|g|h|i|j|k|l|m|n))+)?", "abacadae", 0, 8); // up coverage
scan_test!(
    case_638,
    s638,
    S638,
    r#"((?:a(?:b|c|d|e|f|g|h|i|j|k|l|m|n))+)?"#,
    "abacadae",
    &[("abacadae", 0, 8)],
    638
);

// -------------------------------------------------------------------------
// x2("((?:a(?:b|c|d|e|f|g|h|i|j|k|l|m|n))+?)?z", "abacadaez", 0, 9); // up coverage
// UnsupportedFeatureError("x?*?: Non-greedy repetitions)

// -------------------------------------------------------------------------
// x2("\\A((a|b)\?\?)?z", "bz", 0, 2); // up coverage
// UnsupportedFeatureError("StartLine Look(Start)")

// -------------------------------------------------------------------------
// x2("((?<x>abc){0}a\\g<x>d)+", "aabcd", 0, 5); // up coverage
// EscapeUnrecognized

// -------------------------------------------------------------------------
// x2("((?(abc)true|false))+", "false", 0, 5); // up coverage
// FlagUnrecognized

// -------------------------------------------------------------------------
// x2("((?i:abc)d)+", "abcdABCd", 0, 8); // up coverage
scan_test!(
    case_643,
    s643,
    S643,
    r#"((?i:abc)d)+"#,
    "abcdABCd",
    &[("abcdABCd", 0, 8)],
    643
);

// -------------------------------------------------------------------------
// x2("((?<!abc)def)+", "bcdef", 2, 5); // up coverage
// UnsupportedLookAround

// -------------------------------------------------------------------------
// x2("(\\ba)+", "aaa", 0, 1); // up coverage
// UnsupportedFeatureError("WordUnicode Look(WordUnicode)")

// -------------------------------------------------------------------------
// x2("()(?<x>ab)(?(<x>)a|b)", "aba", 0, 3); // up coverage
// FlagUnrecognized

// -------------------------------------------------------------------------
// x2("(?<=a.b)c", "azbc", 3, 4); // up coverage
// UnsupportedLookAround

// -------------------------------------------------------------------------
// n("(?<=(?:abcde){30})z", "abc"); // up coverage
// UnsupportedLookAround

// -------------------------------------------------------------------------
// x2("(?<=(?(a)a|bb))z", "aaz", 2, 3); // up coverage
// UnsupportedLookAround

// -------------------------------------------------------------------------
// x2("[a]*\\W", "aa@", 0, 3); // up coverage
scan_test!(
    case_650,
    s650,
    S650,
    r#"[a]*\W"#,
    "aa@",
    &[("aa@", 0, 3)],
    650
);

// -------------------------------------------------------------------------
// x2("[a]*[b]", "aab", 0, 3); // up coverage
scan_test!(
    case_651,
    s651,
    S651,
    r#"[a]*[b]"#,
    "aab",
    &[("aab", 0, 3)],
    651
);

// -------------------------------------------------------------------------
// n("a*\\W", "aaa"); // up coverage
scan_test!(case_652, s652, S652, r#"a*\W"#, "aaa", &[], 652);

// -------------------------------------------------------------------------
// n("(?W)a*\\W", "aaa"); // up coverage
// FlagUnrecognized

// -------------------------------------------------------------------------
// x2("(?<=ab(?<=ab))", "ab", 2, 2); // up coverage
// UnsupportedLookAround

// -------------------------------------------------------------------------
// x2("(?<x>a)(?<x>b)(\\k<x>)+", "abbaab", 0, 6); // up coverage
// GroupNameDuplicate

// -------------------------------------------------------------------------
// x2("()(\\1)(\\2)", "abc", 0, 0); // up coverage
// UnsupportedBackreference

// -------------------------------------------------------------------------
// x2("((?(a)b|c))(\\1)", "abab", 0, 4); // up coverage
// FlagUnrecognized

// -------------------------------------------------------------------------
// x2("(?<x>$|b\\g<x>)", "bbb", 0, 3); // up coverage
// EscapeUnrecognized

// -------------------------------------------------------------------------
// x2("(?<x>(?(a)a|b)|c\\g<x>)", "cccb", 0, 4); // up coverage
// FlagUnrecognized

// -------------------------------------------------------------------------
// x2("(a)(?(1)a*|b*)+", "aaaa", 0, 4); // up coverage
// FlagUnrecognized

// -------------------------------------------------------------------------
// x2("[[^abc]&&cde]*", "de", 0, 2); // up coverage
scan_test!(
    case_661,
    s661,
    S661,
    r#"[[^abc]&&cde]*"#,
    "de",
    &[("de", 0, 2)],
    661
);

// -------------------------------------------------------------------------
// n("(a){10}{10}", "aa"); // up coverage
scan_test!(case_662, s662, S662, r#"(a){10}{10}"#, "aa", &[], 662);

// -------------------------------------------------------------------------
// x2("(?:a?)+", "aa", 0, 2); // up coverage
scan_test!(
    case_663,
    s663,
    S663,
    r#"(?:a?)+"#,
    "aa",
    &[("aa", 0, 2)],
    663
);

// -------------------------------------------------------------------------
// x2("(?:a?)*?", "a", 0, 0); // up coverage
// UnsupportedFeatureError("x?*?: Non-greedy repetitions)

// -------------------------------------------------------------------------
// x2("(?:a*)*?", "a", 0, 0); // up coverage
// UnsupportedFeatureError("x?*?: Non-greedy repetitions)

// -------------------------------------------------------------------------
// x2("(?:a+?)*", "a", 0, 1); // up coverage
// UnsupportedFeatureError("x?*?: Non-greedy repetitions)

// -------------------------------------------------------------------------
// x2("\\h", "5", 0, 1); // up coverage
// EscapeUnrecognized

// -------------------------------------------------------------------------
// x2("\\H", "z", 0, 1); // up coverage
// EscapeUnrecognized

// -------------------------------------------------------------------------
// x2("[\\h]", "5", 0, 1); // up coverage
// EscapeUnrecognized

// -------------------------------------------------------------------------
// x2("[\\H]", "z", 0, 1); // up coverage
// EscapeUnrecognized

// -------------------------------------------------------------------------
// x2("[\\o{101}]", "A", 0, 1); // up coverage
// EscapeUnrecognized

// -------------------------------------------------------------------------
// x2("[\\u0041]", "A", 0, 1); // up coverage
scan_test!(
    case_672,
    s672,
    S672,
    r#"[\u0041]"#,
    "A",
    &[("A", 0, 1)],
    672
);

// -------------------------------------------------------------------------
// x2("(?~)", "", 0, 0);
// FlagUnrecognized

// -------------------------------------------------------------------------
// x2("(?~)", "A", 0, 0);
// FlagUnrecognized

// -------------------------------------------------------------------------
// x2("(?~ab)", "abc", 0, 0);
// FlagUnrecognized

// -------------------------------------------------------------------------
// x2("(?~abc)", "abc", 0, 0);
// FlagUnrecognized

// -------------------------------------------------------------------------
// x2("(?~abc|ab)", "abc", 0, 0);
// FlagUnrecognized

// -------------------------------------------------------------------------
// x2("(?~ab|abc)", "abc", 0, 0);
// FlagUnrecognized

// -------------------------------------------------------------------------
// x2("(?~a.c)", "abc", 0, 0);
// FlagUnrecognized

// -------------------------------------------------------------------------
// x2("(?~a.c|ab)", "abc", 0, 0);
// FlagUnrecognized

// -------------------------------------------------------------------------
// x2("(?~ab|a.c)", "abc", 0, 0);
// FlagUnrecognized

// -------------------------------------------------------------------------
// x2("aaaaa(?~)", "aaaaaaaaaa", 0, 5);
// FlagUnrecognized

// -------------------------------------------------------------------------
// x2("(?~(?:|aaa))", "aaa", 0, 0);
// FlagUnrecognized

// -------------------------------------------------------------------------
// x2("(?~aaa|)", "aaa", 0, 0);
// FlagUnrecognized

// -------------------------------------------------------------------------
// x2("a(?~(?~)).", "abcdefghijklmnopqrstuvwxyz", 0, 26); // nested absent functions cause strange result
// FlagUnrecognized

// -------------------------------------------------------------------------
// x2("/\\*(?~\\*/)\\*/", "/* */ */", 0, 5);
// FlagUnrecognized

// -------------------------------------------------------------------------
// x2("(?~\\w+)zzzzz", "zzzzz", 0, 5);
// FlagUnrecognized

// -------------------------------------------------------------------------
// x2("(?~\\w*)zzzzz", "zzzzz", 0, 5);
// FlagUnrecognized

// -------------------------------------------------------------------------
// x2("(?~A.C|B)", "ABC", 0, 0);
// FlagUnrecognized

// -------------------------------------------------------------------------
// x2("(?~XYZ|ABC)a", "ABCa", 1, 4);
// FlagUnrecognized

// -------------------------------------------------------------------------
// x2("(?~XYZ|ABC)a", "aABCa", 0, 1);
// FlagUnrecognized

// -------------------------------------------------------------------------
// x2("<[^>]*>(?~[<>])</[^>]*>", "<a>vvv</a>   <b>  </b>", 0, 10);
// FlagUnrecognized

// -------------------------------------------------------------------------
// x2("(?~ab)", "ccc\ndab", 0, 5);
// UnsupportedFeatureError("x?*?: Non-greedy repetitions) FlagUnrecognized

// -------------------------------------------------------------------------
// x2("(?m:(?~ab))", "ccc\ndab", 0, 5);
// FlagUnrecognized

// -------------------------------------------------------------------------
// x2("(?-m:(?~ab))", "ccc\ndab", 0, 5);
// FlagUnrecognized

// -------------------------------------------------------------------------
// x2("(?~abc)xyz", "xyz012345678901234567890123456789abc", 0, 3);
// FlagUnrecognized

// -------------------------------------------------------------------------
// x2("(?~|78|\\d*)", "123456789", 0, 6);
// FlagUnrecognized

// -------------------------------------------------------------------------
// x2("(?~|def|(?:abc|de|f){0,100})", "abcdedeabcfdefabc", 0, 11);
// FlagUnrecognized

// -------------------------------------------------------------------------
// x2("(?~|ab|.*)", "ccc\nddd", 0, 3);
// FlagUnrecognized

// -------------------------------------------------------------------------
// x2("(?~|ab|\\O*)", "ccc\ndab", 0, 5);
// FlagUnrecognized

// -------------------------------------------------------------------------
// x2("(?~|ab|\\O{2,10})", "ccc\ndab", 0, 5);
// FlagUnrecognized

// -------------------------------------------------------------------------
// x2("(?~|ab|\\O{1,10})", "ab", 1, 2);
// FlagUnrecognized

// -------------------------------------------------------------------------
// n("(?~|ab|\\O{2,10})", "ab");
// FlagUnrecognized

// -------------------------------------------------------------------------
// x2("(?~|abc|\\O{1,10})", "abc", 1, 3);
// FlagUnrecognized

// -------------------------------------------------------------------------
// x2("(?~|ab|\\O{5,10})|abc", "abc", 0, 3);
// FlagUnrecognized

// -------------------------------------------------------------------------
// x2("(?~|ab|\\O{1,10})", "cccccccccccab", 0, 10);
// FlagUnrecognized

// -------------------------------------------------------------------------
// x2("(?~|aaa|)", "aaa", 0, 0);
// FlagUnrecognized

// -------------------------------------------------------------------------
// x2("(?~||a*)", "aaaaaa", 0, 0);
// FlagUnrecognized

// -------------------------------------------------------------------------
// x2("(?~||a*?)", "aaaaaa", 0, 0);
// UnsupportedFeatureError("x?*?: Non-greedy repetitions)

// -------------------------------------------------------------------------
// x2("(a)(?~|b|\\1)", "aaaaaa", 0, 2);
// FlagUnrecognized

// -------------------------------------------------------------------------
// x2("(a)(?~|bb|(?:a\\1)*)", "aaaaaa", 0, 5);
// FlagUnrecognized

// -------------------------------------------------------------------------
// x2("(b|c)(?~|abac|(?:a\\1)*)", "abababacabab", 1, 4);
// FlagUnrecognized

// -------------------------------------------------------------------------
// n("(?~|c|a*+)a", "aaaaa");
// FlagUnrecognized

// -------------------------------------------------------------------------
// x2("(?~|aaaaa|a*+)", "aaaaa", 0, 0);
// FlagUnrecognized

// -------------------------------------------------------------------------
// x2("(?~|aaaaaa|a*+)b", "aaaaaab", 1, 7);
// FlagUnrecognized

// -------------------------------------------------------------------------
// x2("(?~|abcd|(?>))", "zzzabcd", 0, 0);
// FlagUnrecognized

// -------------------------------------------------------------------------
// x2("(?~|abc|a*?)", "aaaabc", 0, 0);
// UnsupportedFeatureError("x?*?: Non-greedy repetitions)

// -------------------------------------------------------------------------
// x2("(?~|abc)a*", "aaaaaabc", 0, 5);
// FlagUnrecognized

// -------------------------------------------------------------------------
// x2("(?~|abc)a*z|aaaaaabc", "aaaaaabc", 0, 8);
// FlagUnrecognized

// -------------------------------------------------------------------------
// x2("(?~|aaaaaa)a*", "aaaaaa", 0, 0);
// FlagUnrecognized

// -------------------------------------------------------------------------
// x2("(?~|abc)aaaa|aaaabc", "aaaabc", 0, 6);
// FlagUnrecognized

// -------------------------------------------------------------------------
// x2("(?>(?~|abc))aaaa|aaaabc", "aaaabc", 0, 6);
// FlagUnrecognized

// -------------------------------------------------------------------------
// x2("(?~|)a", "a", 0, 1);
// FlagUnrecognized

// -------------------------------------------------------------------------
// n("(?~|a)a", "a");
// FlagUnrecognized

// -------------------------------------------------------------------------
// x2("(?~|a)(?~|)a", "a", 0, 1);
// FlagUnrecognized

// -------------------------------------------------------------------------
// x2("(?~|a).*(?~|)a", "bbbbbbbbbbbbbbbbbbbba", 0, 21);
// FlagUnrecognized

// -------------------------------------------------------------------------
// x2("(?~|abc).*(xyz|pqr)(?~|)abc", "aaaaxyzaaapqrabc", 0, 16);
// FlagUnrecognized

// -------------------------------------------------------------------------
// x2("(?~|abc).*(xyz|pqr)(?~|)abc", "aaaaxyzaaaabcpqrabc", 11, 19);
// FlagUnrecognized

// -------------------------------------------------------------------------
// n("\\A(?~|abc).*(xyz|pqrabc)(?~|)abc", "aaaaxyzaaaabcpqrabcabc");
// FlagUnrecognized

// -------------------------------------------------------------------------
// x2("", "あ", 0, 0);
scan_test!(case_730, s730, S730, r#""#, "あ", &[], 730);

// -------------------------------------------------------------------------
// *** Index error: x2("あ", "あ", 0, 3); // 731

// -------------------------------------------------------------------------
// n("い", "あ");
scan_test!(case_732, s732, S732, r#"い"#, "あ", &[], 732);

// -------------------------------------------------------------------------
// *** Index error: x2("うう", "うう", 0, 6); // 733

// -------------------------------------------------------------------------
// *** Index error: x2("あいう", "あいう", 0, 9); // 734

// -------------------------------------------------------------------------
// *** Index error: x2("こここここここここここここここここここここここここここここここここここ", "こここここここここここここここここここここここここここここここここここ", 0, 105); // 735

// -------------------------------------------------------------------------
// *** Index error:  x2("あ", "いあ", 3, 6); // 736

// -------------------------------------------------------------------------
// *** Index error: x2("いう", "あいう", 3, 9); // 737

// -------------------------------------------------------------------------
// x2("\\xca\\xb8", "\xca\xb8", 0, 2);
scanner! { S738 { mode M { token r#"\xca\xb8"# => 0; } } }

// -------------------------------------------------------------------------
// *** Index error: x2(".", "あ", 0, 3); // 739

// -------------------------------------------------------------------------
// *** Index error: x2("..", "かき", 0, 6); // 740

// -------------------------------------------------------------------------
// *** Index error: x2("\\w", "お", 0, 3); // 741

// -------------------------------------------------------------------------
// n("\\W", "あ");
scan_test!(case_742, s742, S742, r#"\W"#, "あ", &[], 742);

// -------------------------------------------------------------------------
// *** Index error:  x2("[\\W]", "う$", 3, 4); // 743

// -------------------------------------------------------------------------
// *** Index error: x2("\\S", "そ", 0, 3); // 744

// -------------------------------------------------------------------------
// *** Index error: x2("\\S", "漢", 0, 3); // 745

// -------------------------------------------------------------------------
// x2("\\b", "気 ", 0, 0);
// UnsupportedFeatureError("WordUnicode Look(WordUnicode)")

// -------------------------------------------------------------------------
// x2("\\b", " ほ", 1, 1);
// UnsupportedFeatureError("WordUnicode Look(WordUnicode)")

// -------------------------------------------------------------------------
// x2("\\B", "せそ ", 3, 3);
// UnsupportedFeatureError("WordUnicodeNegate Look(WordUnicodeNegate)")

// -------------------------------------------------------------------------
// *** Index error:  x2("\\B", "う ", 4, 4); // 749

// -------------------------------------------------------------------------
// x2("\\B", " い", 0, 0);
// UnsupportedFeatureError("WordUnicodeNegate Look(WordUnicodeNegate)")

// -------------------------------------------------------------------------
// *** Index error: x2("[たち]", "ち", 0, 3); // 751

// -------------------------------------------------------------------------
// n("[なに]", "ぬ");
scan_test!(case_752, s752, S752, r#"[なに]"#, "ぬ", &[], 752);

// -------------------------------------------------------------------------
// *** Index error: x2("[う-お]", "え", 0, 3); // 753

// -------------------------------------------------------------------------
// n("[^け]", "け");
scan_test!(case_754, s754, S754, r#"[^け]"#, "け", &[], 754);

// -------------------------------------------------------------------------
// *** Index error: x2("[\\w]", "ね", 0, 3); // 755

// -------------------------------------------------------------------------
// n("[\\d]", "ふ");
scan_test!(case_756, s756, S756, r#"[\\d]"#, "ふ", &[], 756);

// -------------------------------------------------------------------------
// *** Index error: x2("[\\D]", "は", 0, 3); // 757

// -------------------------------------------------------------------------
// n("[\\s]", "く");
scan_test!(case_758, s758, S758, r#"[\\s]"#, "く", &[], 758);

// -------------------------------------------------------------------------
// *** Index error: x2("[\\S]", "へ", 0, 3); // 759

// -------------------------------------------------------------------------
// *** Index error: x2("[\\w\\d]", "よ", 0, 3); // 760

// -------------------------------------------------------------------------
// *** Index error: x2("[\\w\\d]", "   よ", 3, 6); // 761

// -------------------------------------------------------------------------
// n("\\w鬼車", " 鬼車");
scan_test!(case_762, s762, S762, r#"\w鬼車"#, " 鬼車", &[], 762);

// -------------------------------------------------------------------------
// *** Index error: x2("鬼\\W車", "鬼 車", 0, 7); // 763

// -------------------------------------------------------------------------
// *** Index error: x2("あ.い.う", "ああいいう", 0, 15); // 764

// -------------------------------------------------------------------------
// *** Index error: x2(".\\wう\\W..ぞ", "えうう うぞぞ", 0, 19); // 765

// -------------------------------------------------------------------------
// *** Index error: x2("\\s\\wこここ", " ここここ", 0, 13); // 766

// -------------------------------------------------------------------------
// *** Index error: x2("ああ.け", "ああけけ", 0, 12); // 767

// -------------------------------------------------------------------------
// n(".い", "いえ");
scan_test!(case_768, s768, S768, r#".い"#, "いえ", &[], 768);

// -------------------------------------------------------------------------
// *** Index error: x2(".お", "おお", 0, 6); // 769

// -------------------------------------------------------------------------
// *** Index error: x2("^あ", "あ", 0, 3); // 770

// -------------------------------------------------------------------------
// *** Index error: x2("^む$", "む", 0, 3); // 771

// -------------------------------------------------------------------------
// *** Index error: x2("^\\w$", "に", 0, 3); // 772

// -------------------------------------------------------------------------
// *** Index error: x2("^\\wかきくけこ$", "zかきくけこ", 0, 16); // 773

// -------------------------------------------------------------------------
// *** Index error: x2("^\\w...うえお$", "zあいううえお", 0, 19); // 774

// -------------------------------------------------------------------------
// *** Index error: x2("\\w\\w\\s\\Wおおお\\d", "aお  おおお4", 0, 16); // 775

// -------------------------------------------------------------------------
// *** Index error: x2("\\Aたちつ", "たちつ", 0, 9); // 776

// -------------------------------------------------------------------------
// *** Index error: x2("むめも\\Z", "むめも", 0, 9); // 777

// -------------------------------------------------------------------------
// *** Index error: x2("かきく\\z", "かきく", 0, 9); // 778

// -------------------------------------------------------------------------
// *** Index error: x2("かきく\\Z", "かきく\n", 0, 9); // 779

// -------------------------------------------------------------------------
// *** Index error: x2("\\Gぽぴ", "ぽぴ", 0, 6); // 780

// -------------------------------------------------------------------------
// n("\\Gえ", "うえお");
// EscapeUnrecognized

// -------------------------------------------------------------------------
// n("とて\\G", "とて");
// EscapeUnrecognized

// -------------------------------------------------------------------------
// n("まみ\\A", "まみ");
// UnsupportedFeatureError("StartLine Look(Start)")

// -------------------------------------------------------------------------
// n("ま\\Aみ", "まみ");
// UnsupportedFeatureError("StartLine Look(Start)")

// -------------------------------------------------------------------------
// *** Index error: x2("(?=せ)せ", "せ", 0, 3); // 785

// -------------------------------------------------------------------------
// n("(?=う).", "い");
// UnsupportedLookAround

// -------------------------------------------------------------------------
// *** Index error: x2("(?!う)か", "か", 0, 3); // 787

// -------------------------------------------------------------------------
// n("(?!と)あ", "と");
// UnsupportedLookAround

// -------------------------------------------------------------------------
// *** Index error: x2("(?i:あ)", "あ", 0, 3); // 789

// -------------------------------------------------------------------------
// *** Index error: x2("(?i:ぶべ)", "ぶべ", 0, 6); // 790

// -------------------------------------------------------------------------
// n("(?i:い)", "う");
scan_test!(case_791, s791, S791, r#"(?i:い)"#, "う", &[], 791);

// -------------------------------------------------------------------------
// *** Index error: x2("(?m:よ.)", "よ\n", 0, 4); // 792

// -------------------------------------------------------------------------
// *** Index error: x2("(?m:.め)", "ま\nめ", 3, 7); // 793

// -------------------------------------------------------------------------
// x2("あ?", "", 0, 0);
scan_test!(case_794, s794, S794, r#"あ?"#, "", &[], 794);

// -------------------------------------------------------------------------
// x2("変?", "化", 0, 0);
scan_test!(case_795, s795, S795, r#"変?"#, "化", &[], 795);

// -------------------------------------------------------------------------
// *** Index error: x2("変?", "変", 0, 3); // 796

// -------------------------------------------------------------------------
// x2("量*", "", 0, 0);
scan_test!(case_797, s797, S797, r#"量*"#, "", &[], 797);

// -------------------------------------------------------------------------
// *** Index error: x2("量*", "量", 0, 3); // 798

// -------------------------------------------------------------------------
// *** Index error: x2("子*", "子子子", 0, 9); // 799

// -------------------------------------------------------------------------
// x2("馬*", "鹿馬馬馬馬", 0, 0);
scan_test!(case_800, s800, S800, r#"馬*"#, "鹿馬馬馬馬", &[], 800);

// -------------------------------------------------------------------------
// n("山+", "");
scan_test!(case_801, s801, S801, r#"山+"#, "", &[], 801);

// -------------------------------------------------------------------------
// *** Index error: x2("河+", "河", 0, 3); // 802

// -------------------------------------------------------------------------
// *** Index error: x2("時+", "時時時時", 0, 12); // 803

// -------------------------------------------------------------------------
// *** Index error: x2("え+", "ええううう", 0, 6); // 804

// -------------------------------------------------------------------------
// *** Index error: x2("う+", "おうううう", 3, 15); // 805

// -------------------------------------------------------------------------
// *** Index error: x2(".?", "た", 0, 3); // 806

// -------------------------------------------------------------------------
// *** Index error: x2(".*", "ぱぴぷぺ", 0, 12); // 807

// -------------------------------------------------------------------------
// *** Index error: x2(".+", "ろ", 0, 3); // 808

// -------------------------------------------------------------------------
// *** Index error: x2(".+", "いうえか\n", 0, 12); // 809

// -------------------------------------------------------------------------
// *** Index error: x2("あ|い", "あ", 0, 3); // 810

// -------------------------------------------------------------------------
// *** Index error: x2("あ|い", "い", 0, 3); // 811

// -------------------------------------------------------------------------
// *** Index error: x2("あい|いう", "あい", 0, 6); // 812

// -------------------------------------------------------------------------
// *** Index error: x2("あい|いう", "いう", 0, 6); // 813

// -------------------------------------------------------------------------
// *** Index error: x2("を(?:かき|きく)", "をかき", 0, 9); // 814

// -------------------------------------------------------------------------
// *** Index error: x2("を(?:かき|きく)け", "をきくけ", 0, 12); // 815

// -------------------------------------------------------------------------
// *** Index error: x2("あい|(?:あう|あを)", "あを", 0, 6); // 816

// -------------------------------------------------------------------------
// *** Index error:  x2("あ|い|う", "えう", 3, 6); // 817

// -------------------------------------------------------------------------
// *** Index error: x2("あ|い|うえ|おかき|く|けこさ|しすせ|そ|たち|つてとなに|ぬね", "しすせ", 0, 9); // 818

// -------------------------------------------------------------------------
// n("あ|い|うえ|おかき|く|けこさ|しすせ|そ|たち|つてとなに|ぬね", "すせ");
scan_test!(
    case_819,
    s819,
    S819,
    r#"あ|い|うえ|おかき|く|けこさ|しすせ|そ|たち|つてとなに|ぬね"#,
    "すせ",
    &[],
    819
);

// -------------------------------------------------------------------------
// *** Index error:  x2("あ|^わ", "ぶあ", 3, 6); // 820

// -------------------------------------------------------------------------
// *** Index error: x2("あ|^を", "をあ", 0, 3); // 821

// -------------------------------------------------------------------------
// *** Index error:  x2("鬼|\\G車", "け車鬼", 6, 9); // 822

// -------------------------------------------------------------------------
// *** Index error: x2("鬼|\\G車", "車鬼", 0, 3); // 823

// -------------------------------------------------------------------------
// *** Index error:  x2("鬼|\\A車", "b車鬼", 4, 7); // 824

// -------------------------------------------------------------------------
// *** Index error: x2("鬼|\\A車", "車", 0, 3); // 825

// -------------------------------------------------------------------------
// *** Index error:  x2("鬼|車\\Z", "車鬼", 3, 6); // 826

// -------------------------------------------------------------------------
// *** Index error: x2("鬼|車\\Z", "車", 0, 3); // 827

// -------------------------------------------------------------------------
// x2("鬼|車\\Z", "車\n", 0, 3);
// EscapeUnrecognized

// -------------------------------------------------------------------------
// *** Index error:  x2("鬼|車\\z", "車鬼", 3, 6); // 829

// -------------------------------------------------------------------------
// *** Index error: x2("鬼|車\\z", "車", 0, 3); // 830

// -------------------------------------------------------------------------
// *** Index error: x2("\\w|\\s", "お", 0, 3); // 831

// -------------------------------------------------------------------------
// x2("\\w|%", "%お", 0, 1);
scan_test!(
    case_832,
    s832,
    S832,
    r#"\w|%"#,
    "%お",
    &[("%", 0, 1), ("お", 1, 4)], // Oniguruma: ("%", 0, 1)
    832
);

// -------------------------------------------------------------------------
// *** Index error: x2("\\w|[&$]", "う&", 0, 3); // 833

// -------------------------------------------------------------------------
// *** Index error: x2("[い-け]", "う", 0, 3); // 834

// -------------------------------------------------------------------------
// *** Index error: x2("[い-け]|[^か-こ]", "あ", 0, 3); // 835

// -------------------------------------------------------------------------
// *** Index error: x2("[い-け]|[^か-こ]", "か", 0, 3); // 836

// -------------------------------------------------------------------------
// x2("[^あ]", "\n", 0, 1);
scan_test!(case_837, s837, S837, r#"[^あ]"#, "\n", &[("\n", 0, 1)], 837);

// -------------------------------------------------------------------------
// *** Index error: x2("(?:あ|[う-き])|いを", "うを", 0, 3); // 838

// -------------------------------------------------------------------------
// *** Index error: x2("(?:あ|[う-き])|いを", "いを", 0, 6); // 839

// -------------------------------------------------------------------------
// *** Index error: x2("あいう|(?=けけ)..ほ", "けけほ", 0, 9); // 840

// -------------------------------------------------------------------------
// *** Index error: x2("あいう|(?!けけ)..ほ", "あいほ", 0, 9); // 841

// -------------------------------------------------------------------------
// *** Index error: x2("(?=をあ)..あ|(?=をを)..あ", "ををあ", 0, 9); // 842

// -------------------------------------------------------------------------
// *** Index error:  x2("(?<=あ|いう)い", "いうい", 6, 9); // 843

// -------------------------------------------------------------------------
// n("(?>あ|あいえ)う", "あいえう");
// FlagUnrecognized

// -------------------------------------------------------------------------
// *** Index error: x2("(?>あいえ|あ)う", "あいえう", 0, 12); // 845

// -------------------------------------------------------------------------
// *** Index error: x2("あ?|い", "あ", 0, 3); // 846

// -------------------------------------------------------------------------
// x2("あ?|い", "い", 0, 0);
scan_test!(case_847, s847, S847, r#"あ?|い"#, "い", &[], 847);

// -------------------------------------------------------------------------
// x2("あ?|い", "", 0, 0);
scan_test!(case_848, s848, S848, r#"あ?|い"#, "", &[], 848);

// -------------------------------------------------------------------------
// *** Index error: x2("あ*|い", "ああ", 0, 6); // 849

// -------------------------------------------------------------------------
// x2("あ*|い*", "いあ", 0, 0);
scan_test!(case_850, s850, S850, r#"あ*|い*"#, "いあ", &[], 850);

// -------------------------------------------------------------------------
// *** Index error: x2("あ*|い*", "あい", 0, 3); // 851

// -------------------------------------------------------------------------
// x2("[aあ]*|い*", "aあいいい", 0, 4);
scan_test!(
    case_852,
    s852,
    S852,
    r#"[aあ]*|い*"#,
    "aあいいい",
    &[("aあ", 0, 4)],
    852
);

// -------------------------------------------------------------------------
// x2("あ+|い*", "", 0, 0);
scan_test!(case_853, s853, S853, r#"あ+|い*"#, "", &[], 853);

// -------------------------------------------------------------------------
// *** Index error: x2("あ+|い*", "いいい", 0, 9); // 854

// -------------------------------------------------------------------------
// x2("あ+|い*", "あいいい", 0, 3);
scan_test!(
    case_855,
    s855,
    S855,
    r#"あ+|い*"#,
    "あいいい",
    &[], // Oniguruma: ("あ", 0, 3)
    855
);

// -------------------------------------------------------------------------
// x2("あ+|い*", "aあいいい", 0, 0);
scan_test!(case_856, s856, S856, r#"あ+|い*"#, "aあいいい", &[], 856);

// -------------------------------------------------------------------------
// n("あ+|い+", "");
scan_test!(case_857, s857, S857, r#"あ+|い+"#, "", &[], 857);

// -------------------------------------------------------------------------
// *** Index error: x2("(あ|い)?", "い", 0, 3); // 858

// -------------------------------------------------------------------------
// *** Index error: x2("(あ|い)*", "いあ", 0, 6); // 859

// -------------------------------------------------------------------------
// *** Index error: x2("(あ|い)+", "いあい", 0, 9); // 860

// -------------------------------------------------------------------------
// *** Index error: x2("(あい|うあ)+", "うああいうえ", 0, 12); // 861

// -------------------------------------------------------------------------
// *** Index error: x2("(あい|うえ)+", "うああいうえ", 6, 18); // 862

// -------------------------------------------------------------------------
// *** Index error: x2("(あい|うあ)+", "ああいうあ", 3, 15); // 863

// -------------------------------------------------------------------------
// *** Index error: x2("(あい|うあ)+", "あいをうあ", 0, 6); // 864

// -------------------------------------------------------------------------
// *** Index error: x2("(あい|うあ)+", "$$zzzzあいをうあ", 6, 12); // 865

// -------------------------------------------------------------------------
// *** Index error: x2("(あ|いあい)+", "あいあいあ", 0, 15); // 866

// -------------------------------------------------------------------------
// *** Index error:  x2("(あ|いあい)+", "いあ", 3, 6); // 867

// -------------------------------------------------------------------------
// *** Index error: x2("(あ|いあい)+", "いあああいあ", 3, 12); // 868

// -------------------------------------------------------------------------
// *** Index error: x2("(?:あ|い)(?:あ|い)", "あい", 0, 6); // 869

// -------------------------------------------------------------------------
// *** Index error: x2("(?:あ*|い*)(?:あ*|い*)", "あああいいい", 0, 9); // 870

// -------------------------------------------------------------------------
// *** Index error: x2("(?:あ*|い*)(?:あ+|い+)", "あああいいい", 0, 18); // 871

// -------------------------------------------------------------------------
// *** Index error: x2("(?:あ+|い+){2}", "あああいいい", 0, 18); // 872

// -------------------------------------------------------------------------
// *** Index error: x2("(?:あ+|い+){1,2}", "あああいいい", 0, 18); // 873

// -------------------------------------------------------------------------
// *** Index error: x2("(?:あ+|\\Aい*)うう", "うう", 0, 6); // 874

// -------------------------------------------------------------------------
// n("(?:あ+|\\Aい*)うう", "あいうう");
// UnsupportedFeatureError("StartLine Look(Start)")

// -------------------------------------------------------------------------
// *** Index error:  x2("(?:^あ+|い+)*う", "ああいいいあいう", 18, 24); // 876

// -------------------------------------------------------------------------
// *** Index error: x2("(?:^あ+|い+)*う", "ああいいいいう", 0, 21); // 877

// -------------------------------------------------------------------------
// *** Index error: x2("う{0,}", "うううう", 0, 12); // 878

// -------------------------------------------------------------------------
// x2("あ|(?i)c", "C", 0, 1);
scan_test!(
    case_879,
    s879,
    S879,
    r#"あ|(?i)c"#,
    "C",
    &[("C", 0, 1)],
    879
);

// -------------------------------------------------------------------------
// x2("(?i)c|あ", "C", 0, 1);
scan_test!(
    case_880,
    s880,
    S880,
    r#"(?i)c|あ"#,
    "C",
    &[("C", 0, 1)],
    880
);

// -------------------------------------------------------------------------
// x2("(?i:あ)|a", "a", 0, 1);
scan_test!(
    case_881,
    s881,
    S881,
    r#"(?i:あ)|a"#,
    "a",
    &[("a", 0, 1)],
    881
);

// -------------------------------------------------------------------------
// n("(?i:あ)|a", "A");
scan_test!(case_882, s882, S882, r#"(?i:あ)|a"#, "A", &[], 882);

// -------------------------------------------------------------------------
// *** Index error: x2("[あいう]*", "あいう", 0, 9); // 884

// -------------------------------------------------------------------------
// x2("[^あいう]*", "あいう", 0, 0);
scan_test!(case_885, s885, S885, r#"[^あいう]*"#, "あいう", &[], 885);

// -------------------------------------------------------------------------
// n("[^あいう]+", "あいう");
scan_test!(case_886, s886, S886, r#"[^あいう]+"#, "あいう", &[], 886);

// -------------------------------------------------------------------------
// x2("あ?\?", "あああ", 0, 0);
scan_test!(case_887, s887, S887, r#"あ?\?"#, "あああ", &[], 887);

// -------------------------------------------------------------------------
// *** Index error: x2("いあ?\?い", "いあい", 0, 9); // 888

// -------------------------------------------------------------------------
// x2("あ*?", "あああ", 0, 0);
// UnsupportedFeatureError("x?*?: Non-greedy repetitions)

// -------------------------------------------------------------------------
// x2("いあ*?", "いああ", 0, 3);
// UnsupportedFeatureError("x?*?: Non-greedy repetitions)

// -------------------------------------------------------------------------
// *** Index error: x2("いあ*?い", "いああい", 0, 12); // 891

// -------------------------------------------------------------------------
// x2("あ+?", "あああ", 0, 3);
// UnsupportedFeatureError("x?*?: Non-greedy repetitions)

// -------------------------------------------------------------------------
// *** Index error: x2("いあ+?", "いああ", 0, 6); // 893

// -------------------------------------------------------------------------
// *** Index error: x2("いあ+?い", "いああい", 0, 12); // 894

// -------------------------------------------------------------------------
// x2("(?:天?)?\?", "天", 0, 0);
scan_test!(case_895, s895, S895, r#"(?:天?)?\?"#, "天", &[], 895);

// -------------------------------------------------------------------------
// x2("(?:天?\?)?", "天", 0, 0);
scan_test!(case_896, s896, S896, r#"(?:天?\?)?"#, "天", &[], 896);

// -------------------------------------------------------------------------
// x2("(?:夢?)+?", "夢夢夢", 0, 3);
// UnsupportedFeatureError("x?*?: Non-greedy repetitions)

// -------------------------------------------------------------------------
// x2("(?:風+)?\?", "風風風", 0, 0);
scan_test!(case_898, s898, S898, r#"(?:風+)?\?"#, "風風風", &[], 898);

// -------------------------------------------------------------------------
// *** Index error: x2("(?:雪+)?\?霜", "雪雪雪霜", 0, 12); // 899

// -------------------------------------------------------------------------
// x2("(?:あい)?{2}", "", 0, 0);
scan_test!(case_900, s900, S900, r#"(?:あい)?{2}"#, "", &[], 900);

// -------------------------------------------------------------------------
// *** Index error: x2("(?:鬼車)?{2}", "鬼車鬼車鬼", 0, 12); // 901

// -------------------------------------------------------------------------
// x2("(?:鬼車)*{0}", "鬼車鬼車鬼", 0, 0);
scan_test!(
    case_902,
    s902,
    S902,
    r#"(?:鬼車)*{0}"#,
    "鬼車鬼車鬼",
    &[],
    902
);

// -------------------------------------------------------------------------
// *** Index error: x2("(?:鬼車){3,}", "鬼車鬼車鬼車鬼車", 0, 24); // 903

// -------------------------------------------------------------------------
// n("(?:鬼車){3,}", "鬼車鬼車");
scan_test!(
    case_904,
    s904,
    S904,
    r#"(?:鬼車){3,}"#,
    "鬼車鬼車",
    &[],
    904
);

// -------------------------------------------------------------------------
// *** Index error: x2("(?:鬼車){2,4}", "鬼車鬼車鬼車", 0, 18); // 905

// -------------------------------------------------------------------------
// *** Index error: x2("(?:鬼車){2,4}", "鬼車鬼車鬼車鬼車鬼車", 0, 24); // 906

// -------------------------------------------------------------------------
// *** Index error: x2("(?:鬼車){2,4}?", "鬼車鬼車鬼車鬼車鬼車", 0, 12); // 907

// -------------------------------------------------------------------------
// *** Index error: x2("(?:鬼車){,}", "鬼車{,}", 0, 9); // 908

// -------------------------------------------------------------------------
// *** Index error: x2("(?:かきく)+?{2}", "かきくかきくかきく", 0, 18); // 909

// -------------------------------------------------------------------------
// *** Index error: x3("(火)", "火", 0, 3, 1); // 910

// -------------------------------------------------------------------------
// *** Index error: x3("(火水)", "火水", 0, 6, 1); // 911

// -------------------------------------------------------------------------
// *** Index error: x2("((時間))", "時間", 0, 6); // 912

// -------------------------------------------------------------------------
// *** Index error: x3("((風水))", "風水", 0, 6, 1); // 913

// -------------------------------------------------------------------------
// *** Index error: x3("((昨日))", "昨日", 0, 6, 2); // 914

// -------------------------------------------------------------------------
// *** Index error: x3("((((((((((((((((((((量子))))))))))))))))))))", "量子", 0, 6, 20); // 915

// -------------------------------------------------------------------------
// *** Index error: x3("(あい)(うえ)", "あいうえ", 0, 6, 1); // 916

// -------------------------------------------------------------------------
// *** Index error:  x3("(あい)(うえ)", "あいうえ", 6, 12, 2); // 917

// -------------------------------------------------------------------------
// *** Index error: x3("()(あ)いう(えおか)きくけこ", "あいうえおかきくけこ", 9, 18, 3); // 918

// -------------------------------------------------------------------------
// *** Index error: x3("(()(あ)いう(えおか)きくけこ)", "あいうえおかきくけこ", 9, 18, 4); // 919

// -------------------------------------------------------------------------
// *** Index error:  x3(".*(フォ)ン・マ(ン()シュタ)イン", "フォン・マンシュタイン", 15, 27, 2); // 920

// -------------------------------------------------------------------------
// *** Index error: x2("(^あ)", "あ", 0, 3); // 921

// -------------------------------------------------------------------------
// *** Index error:  x3("(あ)|(あ)", "いあ", 3, 6, 1); // 922

// -------------------------------------------------------------------------
// *** Index error:  x3("(^あ)|(あ)", "いあ", 3, 6, 2); // 923

// -------------------------------------------------------------------------
// x3("(あ?)", "あああ", 0, 3, 1);
scan_test!(
    case_924,
    s924,
    S924,
    r#"(あ?)"#,
    "あああ",
    &[], // Oniguruma: ("あ", 0, 3)
    924
);

// -------------------------------------------------------------------------
// *** Index error: x3("(ま*)", "ままま", 0, 9, 1); // 925

// -------------------------------------------------------------------------
// x3("(と*)", "", 0, 0, 1);
scan_test!(case_926, s926, S926, r#"(と*)"#, "", &[], 926);

// -------------------------------------------------------------------------
// *** Index error: x3("(る+)", "るるるるるるる", 0, 21, 1); // 927

// -------------------------------------------------------------------------
// *** Index error: x3("(ふ+|へ*)", "ふふふへへ", 0, 9, 1); // 928

// -------------------------------------------------------------------------
// x3("(あ+|い?)", "いいいああ", 0, 3, 1);
scan_test!(
    case_929,
    s929,
    S929,
    r#"(あ+|い?)"#,
    "いいいああ",
    &[], // Oniguruma: ("いいい", 0, 3)
    929
);

// -------------------------------------------------------------------------
// *** Index error: x3("(あいう)?", "あいう", 0, 9, 1); // 930

// -------------------------------------------------------------------------
// *** Index error: x3("(あいう)*", "あいう", 0, 9, 1); // 931

// -------------------------------------------------------------------------
// *** Index error: x3("(あいう)+", "あいう", 0, 9, 1); // 932

// -------------------------------------------------------------------------
// *** Index error: x3("(さしす|あいう)+", "あいう", 0, 9, 1); // 933

// -------------------------------------------------------------------------
// *** Index error: x3("([なにぬ][かきく]|かきく)+", "かきく", 0, 9, 1); // 934

// -------------------------------------------------------------------------
// *** Index error: x3("((?i:あいう))", "あいう", 0, 9, 1); // 935

// -------------------------------------------------------------------------
// *** Index error: x3("((?m:あ.う))", "あ\nう", 0, 7, 1); // 936

// -------------------------------------------------------------------------
// x3("((?=あん)あ)", "あんい", 0, 3, 1);
// UnsupportedLookAround

// -------------------------------------------------------------------------
// *** Index error: x3("あいう|(.あいえ)", "んあいえ", 0, 12, 1); // 938

// -------------------------------------------------------------------------
// *** Index error:  x3("あ*(.)", "ああああん", 12, 15, 1); // 939

// -------------------------------------------------------------------------
// x3("あ*?(.)", "ああああん", 0, 3, 1);
// UnsupportedFeatureError("x?*?: Non-greedy repetitions)

// -------------------------------------------------------------------------
// *** Index error:  x3("あ*?(ん)", "ああああん", 12, 15, 1); // 941

// -------------------------------------------------------------------------
// *** Index error:  x3("[いうえ]あ*(.)", "えああああん", 15, 18, 1); // 942

// -------------------------------------------------------------------------
// *** Index error: x3("(\\Aいい)うう", "いいうう", 0, 6, 1); // 943

// -------------------------------------------------------------------------
// n("(\\Aいい)うう", "んいいうう");
// UnsupportedFeatureError("StartLine Look(Start)")

// -------------------------------------------------------------------------
// *** Index error: x3("(^いい)うう", "いいうう", 0, 6, 1); // 945

// -------------------------------------------------------------------------
// n("(^いい)うう", "んいいうう");
// UnsupportedFeatureError("StartLine Look(Start)")

// -------------------------------------------------------------------------
// *** Index error:  x3("ろろ(るる$)", "ろろるる", 6, 12, 1); // 947

// -------------------------------------------------------------------------
// n("ろろ(るる$)", "ろろるるる");
// UnsupportedFeatureError("EndLine Look(End)")

// -------------------------------------------------------------------------
// *** Index error: x2("(無)\\1", "無無", 0, 6); // 949

// -------------------------------------------------------------------------
// n("(無)\\1", "無武");
// UnsupportedBackreference

// -------------------------------------------------------------------------
// *** Index error: x2("(空?)\\1", "空空", 0, 6); // 951

// -------------------------------------------------------------------------
// x2("(空?\?)\\1", "空空", 0, 0);
// UnsupportedBackreference

// -------------------------------------------------------------------------
// *** Index error: x2("(空*)\\1", "空空空空空", 0, 12); // 953

// -------------------------------------------------------------------------
// *** Index error: x3("(空*)\\1", "空空空空空", 0, 6, 1); // 954

// -------------------------------------------------------------------------
// *** Index error: x2("あ(い*)\\1", "あいいいい", 0, 15); // 955

// -------------------------------------------------------------------------
// *** Index error: x2("あ(い*)\\1", "あい", 0, 3); // 956

// -------------------------------------------------------------------------
// *** Index error: x2("(あ*)(い*)\\1\\2", "あああいいあああいい", 0, 30); // 957

// -------------------------------------------------------------------------
// *** Index error: x2("(あ*)(い*)\\2", "あああいいいい", 0, 21); // 958

// -------------------------------------------------------------------------
// *** Index error:  x3("(あ*)(い*)\\2", "あああいいいい", 9, 15, 2); // 959

// -------------------------------------------------------------------------
// *** Index error: x2("(((((((ぽ*)ぺ))))))ぴ\\7", "ぽぽぽぺぴぽぽぽ", 0, 24); // 960

// -------------------------------------------------------------------------
// *** Index error: x3("(((((((ぽ*)ぺ))))))ぴ\\7", "ぽぽぽぺぴぽぽぽ", 0, 9, 7); // 961

// -------------------------------------------------------------------------
// *** Index error: x2("(は)(ひ)(ふ)\\2\\1\\3", "はひふひはふ", 0, 18); // 962

// -------------------------------------------------------------------------
// *** Index error: x2("([き-け])\\1", "くく", 0, 6); // 963

// -------------------------------------------------------------------------
// *** Index error: x2("(\\w\\d\\s)\\1", "あ5 あ5 ", 0, 10); // 964

// -------------------------------------------------------------------------
// n("(\\w\\d\\s)\\1", "あ5 あ5");
// UnsupportedBackreference

// -------------------------------------------------------------------------
// *** Index error: x2("(誰？|[あ-う]{3})\\1", "誰？誰？", 0, 12); // 966

// -------------------------------------------------------------------------
// *** Index error: x2("...(誰？|[あ-う]{3})\\1", "あaあ誰？誰？", 0, 19); // 967

// -------------------------------------------------------------------------
// *** Index error: x2("(誰？|[あ-う]{3})\\1", "ういうういう", 0, 18); // 968

// -------------------------------------------------------------------------
// *** Index error: x2("(^こ)\\1", "ここ", 0, 6); // 969

// -------------------------------------------------------------------------
// n("(^む)\\1", "めむむ");
// UnsupportedBackreference

// -------------------------------------------------------------------------
// n("(あ$)\\1", "ああ");
// UnsupportedBackreference

// -------------------------------------------------------------------------
// n("(あい\\Z)\\1", "あい");
// EscapeUnrecognized

// -------------------------------------------------------------------------
// *** Index error:  x2("(あ*\\Z)\\1", "あ", 3, 3); // 973

// -------------------------------------------------------------------------
// *** Index error:  x2(".(あ*\\Z)\\1", "いあ", 3, 6); // 974

// -------------------------------------------------------------------------
// *** Index error: x3("(.(やいゆ)\\2)", "zやいゆやいゆ", 0, 19, 1); // 975

// -------------------------------------------------------------------------
// *** Index error: x3("(.(..\\d.)\\2)", "あ12341234", 0, 11, 1); // 976

// -------------------------------------------------------------------------
// *** Index error: x2("((?i:あvず))\\1", "あvずあvず", 0, 14); // 977

// -------------------------------------------------------------------------
// *** Index error: x2("(?<愚か>変|\\(\\g<愚か>\\))", "((((((変))))))", 0, 15); // 978

// -------------------------------------------------------------------------
// *** Index error: x2("\\A(?:\\g<阿_1>|\\g<云_2>|\\z終了  (?<阿_1>観|自\\g<云_2>自)(?<云_2>在|菩薩\\g<阿_1>菩薩))$", "菩薩自菩薩自在自菩薩自菩薩", 0, 39); // 979

// -------------------------------------------------------------------------
// *** Index error: x2("[[ひふ]]", "ふ", 0, 3); // 980

// -------------------------------------------------------------------------
// *** Index error: x2("[[いおう]か]", "か", 0, 3); // 981

// -------------------------------------------------------------------------
// n("[[^あ]]", "あ");
scan_test!(case_982, s982, S982, r#"[[^あ]]"#, "あ", &[], 982);

// -------------------------------------------------------------------------
// n("[^[あ]]", "あ");
scan_test!(case_983, s983, S983, r#"[^[あ]]"#, "あ", &[], 983);

// -------------------------------------------------------------------------
// *** Index error: x2("[^[^あ]]", "あ", 0, 3); // 984

// -------------------------------------------------------------------------
// *** Index error: x2("[[かきく]&&きく]", "く", 0, 3); // 985

// -------------------------------------------------------------------------
// n("[[かきく]&&きく]", "か");
scan_test!(case_986, s986, S986, r#"[[かきく]&&きく]"#, "か", &[], 986);

// -------------------------------------------------------------------------
// n("[[かきく]&&きく]", "け");
scan_test!(case_987, s987, S987, r#"[[かきく]&&きく]"#, "け", &[], 987);

// -------------------------------------------------------------------------
// *** Index error: x2("[あ-ん&&い-を&&う-ゑ]", "ゑ", 0, 3); // 988

// -------------------------------------------------------------------------
// n("[^あ-ん&&い-を&&う-ゑ]", "ゑ");
scan_test!(
    case_989,
    s989,
    S989,
    r#"[^あ-ん&&い-を&&う-ゑ]"#,
    "ゑ",
    &[],
    989
);

// -------------------------------------------------------------------------
// *** Index error: x2("[[^あ&&あ]&&あ-ん]", "い", 0, 3); // 990

// -------------------------------------------------------------------------
// n("[[^あ&&あ]&&あ-ん]", "あ");
scan_test!(
    case_991,
    s991,
    S991,
    r#"[[^あ&&あ]&&あ-ん]"#,
    "あ",
    &[],
    991
);

// -------------------------------------------------------------------------
// *** Index error: x2("[[^あ-ん&&いうえお]&&[^う-か]]", "き", 0, 3); // 992

// -------------------------------------------------------------------------
// n("[[^あ-ん&&いうえお]&&[^う-か]]", "い");
scan_test!(
    case_993,
    s993,
    S993,
    r#"[[^あ-ん&&いうえお]&&[^う-か]]"#,
    "い",
    &[],
    993
);

// -------------------------------------------------------------------------
// *** Index error: x2("[^[^あいう]&&[^うえお]]", "う", 0, 3); // 994

// -------------------------------------------------------------------------
// *** Index error: x2("[^[^あいう]&&[^うえお]]", "え", 0, 3); // 995

// -------------------------------------------------------------------------
// n("[^[^あいう]&&[^うえお]]", "か");
scan_test!(
    case_996,
    s996,
    S996,
    r#"[^[^あいう]&&[^うえお]]"#,
    "か",
    &[],
    996
);

// -------------------------------------------------------------------------
// x2("[あ-&&-あ]", "-", 0, 1);
// ClassRangeInvalid

// -------------------------------------------------------------------------
// *** Index error: x2("[^[^a-zあいう]&&[^bcdefgうえお]q-w]", "え", 0, 3); // 998

// -------------------------------------------------------------------------
// x2("[^[^a-zあいう]&&[^bcdefgうえお]g-w]", "f", 0, 1);
scan_test!(
    case_999,
    s999,
    S999,
    r#"[^[^a-zあいう]&&[^bcdefgうえお]g-w]"#,
    "f",
    &[("f", 0, 1)],
    999
);

// -------------------------------------------------------------------------
// x2("[^[^a-zあいう]&&[^bcdefgうえお]g-w]", "g", 0, 1);
scan_test!(
    case_1000,
    s1000,
    S1000,
    r#"[^[^a-zあいう]&&[^bcdefgうえお]g-w]"#,
    "g",
    &[("g", 0, 1)],
    1000
);

// -------------------------------------------------------------------------
// n("[^[^a-zあいう]&&[^bcdefgうえお]g-w]", "2");
scan_test!(
    case_1001,
    s1001,
    S1001,
    r#"[^[^a-zあいう]&&[^bcdefgうえお]g-w]"#,
    "2",
    &[],
    1001
);

// -------------------------------------------------------------------------
// *** Index error: x2("a<b>バージョンのダウンロード<\\/b>", "a<b>バージョンのダウンロード</b>", 0, 44); // 1002

// -------------------------------------------------------------------------
// *** Index error: x2(".<b>バージョンのダウンロード<\\/b>", "a<b>バージョンのダウンロード</b>", 0, 44); // 1003

// -------------------------------------------------------------------------
// *** Index error:  x2("\\n?\\z", "こんにちは", 15, 15); // 1004

// -------------------------------------------------------------------------
// *** Index error: x2("(?m).*", "青赤黄", 0, 9); // 1005

// -------------------------------------------------------------------------
// *** Index error: x2("(?m).*a", "青赤黄a", 0, 10); // 1006

// -------------------------------------------------------------------------
// *** Index error: x2("\\p{Hiragana}", "ぴ", 0, 3); // 1007

// -------------------------------------------------------------------------
// n("\\P{Hiragana}", "ぴ");
scan_test!(case_1008, s1008, S1008, r#"\P{Hiragana}"#, "ぴ", &[], 1008);

// -------------------------------------------------------------------------
// x2("\\p{Emoji}", "\xE2\xAD\x90", 0, 3);
scanner! { S1009 { mode M { token r#"\p{Emoji}"# => 0; } } }

// -------------------------------------------------------------------------
// x2("\\p{^Emoji}", "\xEF\xBC\x93", 0, 3);
// UnicodePropertyNotFound

// -------------------------------------------------------------------------
// x2("\\p{Extended_Pictographic}", "\xE2\x9A\xA1", 0, 3);
scanner! { S1011 { mode M { token r#"\p{Extended_Pictographic}"# => 0; } } }

// -------------------------------------------------------------------------
// n("\\p{Extended_Pictographic}", "\xE3\x81\x82");
scanner! { S1012 { mode M { token r#"\p{Extended_Pictographic}"# => 0; } } }

// -------------------------------------------------------------------------
// x2("\\pC", "\xC2\xAD", 0, 2); // U+00AD: Soft Hyphen
scanner! { S1013 { mode M { token r#"\pC"# => 0; } } }

// -------------------------------------------------------------------------
// x2("\\pL", "U", 0, 1);
scan_test!(case_1014, s1014, S1014, r#"\pL"#, "U", &[("U", 0, 1)], 1014);

// -------------------------------------------------------------------------
// x2("\\pM", "\xE2\x83\x9D", 0, 3); // U+20DD: Combining Enclosing Circle
scanner! { S1015 { mode M { token r#"\pM"# => 0; } } }

// -------------------------------------------------------------------------
// *** Index error: x2("\\pN+", "3Ⅴ", 0, 4); // 1016

// -------------------------------------------------------------------------
// *** Index error: x2("\\pP+", "†⁂", 0, 6); // 1017

// -------------------------------------------------------------------------
// *** Index error: x2("\\pS+", "€₤", 0, 6); // 1018

// -------------------------------------------------------------------------
// x2("\\pZ+", " ", 0, 1);
scan_test!(
    case_1019,
    s1019,
    S1019,
    r#"\pZ+"#,
    " ",
    &[(" ", 0, 1)],
    1019
);

// -------------------------------------------------------------------------
// n("\\pL", "@");
scan_test!(case_1020, s1020, S1020, r#"\pL"#, "@", &[], 1020);

// -------------------------------------------------------------------------
// x2("\\pL+", "akZtE", 0, 5);
scan_test!(
    case_1021,
    s1021,
    S1021,
    r#"\pL+"#,
    "akZtE",
    &[("akZtE", 0, 5)],
    1021
);

// -------------------------------------------------------------------------
// x2("\\PL+", "1@=-%", 0, 5);
scan_test!(
    case_1022,
    s1022,
    S1022,
    r#"\PL+"#,
    "1@=-%",
    &[("1@=-%", 0, 5)],
    1022
);

// -------------------------------------------------------------------------
// e("\\p", "", ONIGERR_INVALID_CHAR_PROPERTY_NAME);

// -------------------------------------------------------------------------
// e("\\p(", "", ONIGERR_INVALID_CHAR_PROPERTY_NAME);

// -------------------------------------------------------------------------
// e("\\pQ", "", ONIGERR_INVALID_CHAR_PROPERTY_NAME);

// -------------------------------------------------------------------------
// x2("[\\pL]", "s", 0, 1);
scan_test!(
    case_1026,
    s1026,
    S1026,
    r#"[\pL]"#,
    "s",
    &[("s", 0, 1)],
    1026
);

// -------------------------------------------------------------------------
// n("[^\\pL]", "s");
scan_test!(case_1027, s1027, S1027, r#"[^\pL]"#, "s", &[], 1027);

// -------------------------------------------------------------------------
// x2("[\\PL]+", "-3@", 0, 3);
scan_test!(
    case_1028,
    s1028,
    S1028,
    r#"[\PL]+"#,
    "-3@",
    &[("-3@", 0, 3)],
    1028
);

// -------------------------------------------------------------------------
// e("[\\p]", "", ONIGERR_INVALID_CHAR_PROPERTY_NAME);

// -------------------------------------------------------------------------
// e("[\\pU]", "", ONIGERR_INVALID_CHAR_PROPERTY_NAME);

// -------------------------------------------------------------------------
// *** Index error: x2("\\p{Word}", "こ", 0, 3); // 1031

// -------------------------------------------------------------------------
// n("\\p{^Word}", "こ");
// UnicodePropertyNotFound

// -------------------------------------------------------------------------
// *** Index error: x2("[\\p{Word}]", "こ", 0, 3); // 1033

// -------------------------------------------------------------------------
// n("[\\p{^Word}]", "こ");
// UnicodePropertyNotFound

// -------------------------------------------------------------------------
// n("[^\\p{Word}]", "こ");
// UnicodePropertyNotFound

// -------------------------------------------------------------------------
// *** Index error: x2("[^\\p{^Word}]", "こ", 0, 3); // 1036

// -------------------------------------------------------------------------
// *** Index error: x2("[^\\p{^Word}&&\\p{ASCII}]", "こ", 0, 3); // 1037

// -------------------------------------------------------------------------
// x2("[^\\p{^Word}&&\\p{ASCII}]", "a", 0, 1);
// UnicodePropertyNotFound

// -------------------------------------------------------------------------
// n("[^\\p{^Word}&&\\p{ASCII}]", "#");
// UnicodePropertyNotFound

// -------------------------------------------------------------------------
// *** Index error: x2("[^[\\p{^Word}]&&[\\p{ASCII}]]", "こ", 0, 3); // 1040

// -------------------------------------------------------------------------
// *** Index error: x2("[^[\\p{ASCII}]&&[^\\p{Word}]]", "こ", 0, 3); // 1041

// -------------------------------------------------------------------------
// n("[[\\p{ASCII}]&&[^\\p{Word}]]", "こ");
// UnicodePropertyNotFound

// -------------------------------------------------------------------------
// *** Index error: x2("[^[\\p{^Word}]&&[^\\p{ASCII}]]", "こ", 0, 3); // 1043

// -------------------------------------------------------------------------
// *** Index error: x2("[^\\x{104a}]", "こ", 0, 3); // 1044

// -------------------------------------------------------------------------
// *** Index error: x2("[^\\p{^Word}&&[^\\x{104a}]]", "こ", 0, 3); // 1045

// -------------------------------------------------------------------------
// *** Index error: x2("[^[\\p{^Word}]&&[^\\x{104a}]]", "こ", 0, 3); // 1046

// -------------------------------------------------------------------------
// n("[^\\p{Word}||[^\\x{104a}]]", "こ");
// UnicodePropertyNotFound

// -------------------------------------------------------------------------
// *** Index error: x2("\\p{^Cntrl}", "こ", 0, 3); // 1048

// -------------------------------------------------------------------------
// n("\\p{Cntrl}", "こ");
scan_test!(case_1049, s1049, S1049, r#"\p{Cntrl}"#, "こ", &[], 1049);

// -------------------------------------------------------------------------
// *** Index error: x2("[\\p{^Cntrl}]", "こ", 0, 3); // 1050

// -------------------------------------------------------------------------
// n("[\\p{Cntrl}]", "こ");
scan_test!(case_1051, s1051, S1051, r#"[\p{Cntrl}]"#, "こ", &[], 1051);

// -------------------------------------------------------------------------
// n("[^\\p{^Cntrl}]", "こ");
// UnicodePropertyNotFound

// -------------------------------------------------------------------------
// *** Index error: x2("[^\\p{Cntrl}]", "こ", 0, 3); // 1053

// -------------------------------------------------------------------------
// *** Index error: x2("[^\\p{Cntrl}&&\\p{ASCII}]", "こ", 0, 3); // 1054

// -------------------------------------------------------------------------
// x2("[^\\p{Cntrl}&&\\p{ASCII}]", "a", 0, 1);
scan_test!(
    case_1055,
    s1055,
    S1055,
    r#"[^\p{Cntrl}&&\p{ASCII}]"#,
    "a",
    &[("a", 0, 1)],
    1055
);

// -------------------------------------------------------------------------
// n("[^\\p{^Cntrl}&&\\p{ASCII}]", "#");
// UnicodePropertyNotFound

// -------------------------------------------------------------------------
// *** Index error: x2("[^[\\p{^Cntrl}]&&[\\p{ASCII}]]", "こ", 0, 3); // 1057

// -------------------------------------------------------------------------
// *** Index error: x2("[^[\\p{ASCII}]&&[^\\p{Cntrl}]]", "こ", 0, 3); // 1058

// -------------------------------------------------------------------------
// n("[[\\p{ASCII}]&&[^\\p{Cntrl}]]", "こ");
scan_test!(
    case_1059,
    s1059,
    S1059,
    r#"[[\p{ASCII}]&&[^\p{Cntrl}]]"#,
    "こ",
    &[],
    1059
);

// -------------------------------------------------------------------------
// n("[^[\\p{^Cntrl}]&&[^\\p{ASCII}]]", "こ");
// UnicodePropertyNotFound

// -------------------------------------------------------------------------
// n("[^\\p{^Cntrl}&&[^\\x{104a}]]", "こ");
// UnicodePropertyNotFound

// -------------------------------------------------------------------------
// n("[^[\\p{^Cntrl}]&&[^\\x{104a}]]", "こ");
// UnicodePropertyNotFound

// -------------------------------------------------------------------------
// n("[^\\p{Cntrl}||[^\\x{104a}]]", "こ");
scan_test!(
    case_1063,
    s1063,
    S1063,
    r#"[^\p{Cntrl}||[^\x{104a}]]"#,
    "こ",
    &[],
    1063
);

// -------------------------------------------------------------------------
// *** Index error: x2("(?-W:\\p{Word})", "こ", 0, 3); // 1064

// -------------------------------------------------------------------------
// n("(?W:\\p{Word})", "こ");
// FlagUnrecognized

// -------------------------------------------------------------------------
// x2("(?W:\\p{Word})", "k", 0, 1);
// FlagUnrecognized

// -------------------------------------------------------------------------
// *** Index error: x2("(?-W:[[:word:]])", "こ", 0, 3); // 1067

// -------------------------------------------------------------------------
// n("(?W:[[:word:]])", "こ");
// FlagUnrecognized

// -------------------------------------------------------------------------
// *** Index error: x2("(?-D:\\p{Digit})", "３", 0, 3); // 1069

// -------------------------------------------------------------------------
// n("(?D:\\p{Digit})", "３");
// FlagUnrecognized

// -------------------------------------------------------------------------
// x2("(?-S:\\p{Space})", "\xc2\x85", 0, 2);
// FlagUnrecognized

// -------------------------------------------------------------------------
// n("(?S:\\p{Space})", "\xc2\x85");
// FlagUnrecognized

// -------------------------------------------------------------------------
// *** Index error: x2("(?-P:\\p{Word})", "こ", 0, 3); // 1073

// -------------------------------------------------------------------------
// n("(?P:\\p{Word})", "こ");
// FlagUnrecognized

// -------------------------------------------------------------------------
// *** Index error: x2("(?-W:\\w)", "こ", 0, 3); // 1075

// -------------------------------------------------------------------------
// n("(?W:\\w)", "こ");
// FlagUnrecognized

// -------------------------------------------------------------------------
// x2("(?-W:\\w)", "k", 0, 1);
// FlagUnrecognized

// -------------------------------------------------------------------------
// x2("(?W:\\w)", "k", 0, 1);
// FlagUnrecognized

// -------------------------------------------------------------------------
// n("(?-W:\\W)", "こ");
// FlagUnrecognized

// -------------------------------------------------------------------------
// *** Index error: x2("(?W:\\W)", "こ", 0, 3); // 1080

// -------------------------------------------------------------------------
// n("(?-W:\\W)", "k");
// FlagUnrecognized

// -------------------------------------------------------------------------
// n("(?W:\\W)", "k");
// FlagUnrecognized

// -------------------------------------------------------------------------
// x2("(?-W:\\b)", "こ", 0, 0);
// FlagUnrecognized

// -------------------------------------------------------------------------
// n("(?W:\\b)", "こ");
// FlagUnrecognized

// -------------------------------------------------------------------------
// x2("(?-W:\\b)", "h", 0, 0);
// FlagUnrecognized

// -------------------------------------------------------------------------
// x2("(?W:\\b)", "h", 0, 0);
// FlagUnrecognized

// -------------------------------------------------------------------------
// n("(?-W:\\B)", "こ");
// FlagUnrecognized

// -------------------------------------------------------------------------
// x2("(?W:\\B)", "こ", 0, 0);
// FlagUnrecognized

// -------------------------------------------------------------------------
// n("(?-W:\\B)", "h");
// FlagUnrecognized

// -------------------------------------------------------------------------
// n("(?W:\\B)", "h");
// FlagUnrecognized

// -------------------------------------------------------------------------
// x2("(?-P:\\b)", "こ", 0, 0);
// FlagUnrecognized

// -------------------------------------------------------------------------
// n("(?P:\\b)", "こ");
// FlagUnrecognized

// -------------------------------------------------------------------------
// x2("(?-P:\\b)", "h", 0, 0);
// FlagUnrecognized

// -------------------------------------------------------------------------
// x2("(?P:\\b)", "h", 0, 0);
// FlagUnrecognized

// -------------------------------------------------------------------------
// n("(?-P:\\B)", "こ");
// FlagUnrecognized

// -------------------------------------------------------------------------
// x2("(?P:\\B)", "こ", 0, 0);
// FlagUnrecognized

// -------------------------------------------------------------------------
// n("(?-P:\\B)", "h");
// FlagUnrecognized

// -------------------------------------------------------------------------
// n("(?P:\\B)", "h");
// FlagUnrecognized

// -------------------------------------------------------------------------
// x2("\\p{InBasicLatin}", "\x41", 0, 1);
// UnicodePropertyNotFound

// -------------------------------------------------------------------------
// n(".\\y\\O", "\x0d\x0a");
// EscapeUnrecognized

// -------------------------------------------------------------------------
// x2(".\\Y\\O", "\x0d\x0a", 0, 2);
// EscapeUnrecognized

// -------------------------------------------------------------------------
// n("^.\\y.$", "\x67\xCC\x88");
// EscapeUnrecognized

// -------------------------------------------------------------------------
// x2(".\\Y.", "\x67\xCC\x88", 0, 3);
// EscapeUnrecognized

// -------------------------------------------------------------------------
// x2("\\y.\\Y.\\y", "\x67\xCC\x88", 0, 3);
// EscapeUnrecognized

// -------------------------------------------------------------------------
// x2("\\y.\\y", "\xEA\xB0\x81", 0, 3);
// EscapeUnrecognized

// -------------------------------------------------------------------------
// x2("^.\\Y.\\Y.$", "\xE1\x84\x80\xE1\x85\xA1\xE1\x86\xA8", 0, 9);
// EscapeUnrecognized

// -------------------------------------------------------------------------
// n("^.\\y.\\Y.$", "\xE1\x84\x80\xE1\x85\xA1\xE1\x86\xA8");
// EscapeUnrecognized

// -------------------------------------------------------------------------
// x2(".\\Y.", "\xE0\xAE\xA8\xE0\xAE\xBF", 0, 6);
// EscapeUnrecognized

// -------------------------------------------------------------------------
// n(".\\y.", "\xE0\xAE\xA8\xE0\xAE\xBF");
// EscapeUnrecognized

// -------------------------------------------------------------------------
// x2(".\\Y.", "\xE0\xB8\x81\xE0\xB8\xB3", 0, 6);
// EscapeUnrecognized

// -------------------------------------------------------------------------
// n(".\\y.", "\xE0\xB8\x81\xE0\xB8\xB3");
// EscapeUnrecognized

// -------------------------------------------------------------------------
// x2(".\\Y.", "\xE0\xA4\xB7\xE0\xA4\xBF", 0, 6);
// EscapeUnrecognized

// -------------------------------------------------------------------------
// n(".\\y.", "\xE0\xA4\xB7\xE0\xA4\xBF");
// EscapeUnrecognized

// -------------------------------------------------------------------------
// x2("..\\Y.", "\xE3\x80\xB0\xE2\x80\x8D\xE2\xAD\x95", 0, 9);
// EscapeUnrecognized

// -------------------------------------------------------------------------
// x2("...\\Y.", "\xE3\x80\xB0\xCC\x82\xE2\x80\x8D\xE2\xAD\x95", 0, 11);
// EscapeUnrecognized

// -------------------------------------------------------------------------
// n("...\\Y.", "\xE3\x80\xB0\xCD\xB0\xE2\x80\x8D\xE2\xAD\x95");
// EscapeUnrecognized

// -------------------------------------------------------------------------
// n("^\\X\\X$", "\x0d\x0a");
// EscapeUnrecognized

// -------------------------------------------------------------------------
// x2("^\\X$", "\x0d\x0a", 0, 2);
// EscapeUnrecognized

// -------------------------------------------------------------------------
// n("^\\X\\X.$", "\x67\xCC\x88");
// EscapeUnrecognized

// -------------------------------------------------------------------------
// x2("^\\X$", "\x67\xCC\x88", 0, 3);
// EscapeUnrecognized

// -------------------------------------------------------------------------
// x2("^\\X$", "\xE1\x84\x80\xE1\x85\xA1\xE1\x86\xA8", 0, 9);
// EscapeUnrecognized

// -------------------------------------------------------------------------
// n("^\\X\\X\\X$", "\xE1\x84\x80\xE1\x85\xA1\xE1\x86\xA8");
// EscapeUnrecognized

// -------------------------------------------------------------------------
// x2("^\\X$", "\xE0\xAE\xA8\xE0\xAE\xBF", 0, 6);
// EscapeUnrecognized

// -------------------------------------------------------------------------
// n("\\X\\X", "\xE0\xAE\xA8\xE0\xAE\xBF");
// EscapeUnrecognized

// -------------------------------------------------------------------------
// x2("^\\X$", "\xE0\xB8\x81\xE0\xB8\xB3", 0, 6);
// EscapeUnrecognized

// -------------------------------------------------------------------------
// n("\\X\\X", "\xE0\xB8\x81\xE0\xB8\xB3");
// EscapeUnrecognized

// -------------------------------------------------------------------------
// x2("^\\X$", "\xE0\xA4\xB7\xE0\xA4\xBF", 0, 6);
// EscapeUnrecognized

// -------------------------------------------------------------------------
// n("\\X\\X", "\xE0\xA4\xB7\xE0\xA4\xBF");
// EscapeUnrecognized

// -------------------------------------------------------------------------
// n("^\\X.$", "\xE0\xAE\xA8\xE0\xAE\xBF");
// EscapeUnrecognized

// -------------------------------------------------------------------------
// x2("h\\Xllo", "ha\xCC\x80llo", 0, 7);
// EscapeUnrecognized

// -------------------------------------------------------------------------
// x2("(?y{g})\\yabc\\y", "abc", 0, 3);
// FlagUnrecognized

// -------------------------------------------------------------------------
// x2("(?y{g})\\y\\X\\y", "abc", 0, 1);
// FlagUnrecognized

// -------------------------------------------------------------------------
// x2("(?y{w})\\yabc\\y", "abc", 0, 3); // WB1, WB2
// FlagUnrecognized

// -------------------------------------------------------------------------
// x2("(?y{w})\\X", "\r\n", 0, 2); // WB3
// FlagUnrecognized

// -------------------------------------------------------------------------
// x2("(?y{w})\\X", "\x0cz", 0, 1); // WB3a
// FlagUnrecognized

// -------------------------------------------------------------------------
// x2("(?y{w})\\X", "q\x0c", 0, 1); // WB3b
// FlagUnrecognized

// -------------------------------------------------------------------------
// x2("(?y{w})\\X", "\xE2\x80\x8D\xE2\x9D\x87", 0, 6); // WB3c
// FlagUnrecognized

// -------------------------------------------------------------------------
// x2("(?y{w})\\X", "\x20\x20", 0, 2); // WB3d
// FlagUnrecognized

// -------------------------------------------------------------------------
// x2("(?y{w})\\X", "a\xE2\x80\x8D", 0, 4); // WB4
// FlagUnrecognized

// -------------------------------------------------------------------------
// x2("(?y{w})\\y\\X\\y", "abc", 0, 3); // WB5
// FlagUnrecognized

// -------------------------------------------------------------------------
// x2("(?y{w})\\y\\X\\y", "v\xCE\x87w", 0, 4); // WB6, WB7
// FlagUnrecognized

// -------------------------------------------------------------------------
// x2("(?y{w})\\y\\X\\y", "\xD7\x93\x27", 0, 3); // WB7a
// FlagUnrecognized

// -------------------------------------------------------------------------
// x2("(?y{w})\\y\\X\\y", "\xD7\x93\x22\xD7\x93", 0, 5); // WB7b, WB7c
// FlagUnrecognized

// -------------------------------------------------------------------------
// x2("(?y{w})\\X", "14 45", 0, 2); // WB8
// FlagUnrecognized

// -------------------------------------------------------------------------
// x2("(?y{w})\\X", "a14", 0, 3); // WB9
// FlagUnrecognized

// -------------------------------------------------------------------------
// x2("(?y{w})\\X", "832e", 0, 4); // WB10
// FlagUnrecognized

// -------------------------------------------------------------------------
// x2("(?y{w})\\X", "8\xEF\xBC\x8C\xDB\xB0", 0, 6); // WB11, WB12
// FlagUnrecognized

// -------------------------------------------------------------------------
// *** Index error: x2("(?y{w})\\y\\X\\y", "ケン", 0, 6); // WB13 // 1148

// -------------------------------------------------------------------------
// x2("(?y{w})\\y\\X\\y", "ケン\xE2\x80\xAFタ", 0, 12); // WB13a, WB13b
// FlagUnrecognized

// -------------------------------------------------------------------------
// x2("(?y{w})\\y\\X\\y", "\x21\x23", 0, 1); // WB999
// FlagUnrecognized

// -------------------------------------------------------------------------
// *** Index error: x2("(?y{w})\\y\\X\\y", "山ア", 0, 3); // 1151

// -------------------------------------------------------------------------
// x2("(?y{w})\\X", "3.14", 0, 4);
// FlagUnrecognized

// -------------------------------------------------------------------------
// x2("(?y{w})\\X", "3 14", 0, 1);
// FlagUnrecognized

// -------------------------------------------------------------------------
// x2("\\x40", "@", 0, 1);
scan_test!(
    case_1154,
    s1154,
    S1154,
    r#"\x40"#,
    "@",
    &[("@", 0, 1)],
    1154
);

// -------------------------------------------------------------------------
// x2("\\x1", "\x01", 0, 1);
// EscapeUnexpectedEof

// -------------------------------------------------------------------------
// x2("\\x{1}", "\x01", 0, 1);
scan_test!(
    case_1156,
    s1156,
    S1156,
    r#"\x{1}"#,
    "\x01",
    &[("\x01", 0, 1)],
    1156
);

// -------------------------------------------------------------------------
// x2("\\x{4E38}", "\xE4\xB8\xB8", 0, 3);
scanner! { S1157 { mode M { token r#"\x{4E38}"# => 0; } } }

// -------------------------------------------------------------------------
// x2("\\u4E38", "\xE4\xB8\xB8", 0, 3);
scanner! { S1158 { mode M { token r#"\u4E38"# => 0; } } }

// -------------------------------------------------------------------------
// x2("\\u0040", "@", 0, 1);
scan_test!(
    case_1159,
    s1159,
    S1159,
    r#"\u0040"#,
    "@",
    &[("@", 0, 1)],
    1159
);

// -------------------------------------------------------------------------
// e("\\xF4", "", ONIGERR_TOO_SHORT_MULTI_BYTE_STRING);

// -------------------------------------------------------------------------
// e("\\xF5", "", ONIGERR_INVALID_CODE_POINT_VALUE);

// -------------------------------------------------------------------------
// e("\\xFF", "", ONIGERR_INVALID_CODE_POINT_VALUE);

// -------------------------------------------------------------------------
// e("[\\xF4]", "", ONIGERR_TOO_SHORT_MULTI_BYTE_STRING);

// -------------------------------------------------------------------------
// e("[\\xF5]", "", ONIGERR_INVALID_CODE_POINT_VALUE);

// -------------------------------------------------------------------------
// e("[\\x00-\\xFF]", "", ONIGERR_INVALID_CODE_POINT_VALUE);

// -------------------------------------------------------------------------
// x2("c.*\\b", "abc", 2, 3);
// UnsupportedFeatureError("WordUnicode Look(WordUnicode)")

// -------------------------------------------------------------------------
// x2("\\b.*abc.*\\b", "abc", 0, 3);
// UnsupportedFeatureError("WordUnicode Look(WordUnicode)")

// -------------------------------------------------------------------------
// x2("((?()0+)+++(((0\\g<0>)0)|())++++((?(1)(0\\g<0>))++++++0*())++++((?(1)(0\\g<1>)+)++++++++++*())++++((?(1)((0)\\g<0>)+)++())+0++*+++(((0\\g<0>))*())++++((?(1)(0\\g<0>)+)++++++++++*|)++++*+++((?(1)((0)\\g<0>)+)+++++++++())++*|)++++((?()0))|", "abcde", 0, 0); // #139
// FlagUnrecognized

// -------------------------------------------------------------------------
// n("(*FAIL)", "abcdefg");
// RepetitionMissing

// -------------------------------------------------------------------------
// n("abcd(*FAIL)(*FAIL)(*FAIL)(*FAIL)(*FAIL)(*FAIL)(*FAIL)(*FAIL)(*FAIL)(*FAIL)(*FAIL)(*FAIL)(*FAIL)(*FAIL)(*FAIL)(*FAIL)(*FAIL)(*FAIL)(*FAIL)(*FAIL)(*FAIL)(*FAIL)(*FAIL)(*FAIL)(*FAIL)(*FAIL)(*FAIL)(*FAIL)(*FAIL)(*FAIL)(*FAIL)(*FAIL)(*FAIL)(*FAIL)(*FAIL)(*FAIL)(*FAIL)(*FAIL)(*FAIL)(*FAIL)(*FAIL)(*FAIL)(*FAIL)(*FAIL)(*FAIL)(*FAIL)(*FAIL)(*FAIL)(*FAIL)(*FAIL)(*FAIL)(*FAIL)(*FAIL)(*FAIL)(*FAIL)(*FAIL)", "abcdefg");
// RepetitionMissing

// -------------------------------------------------------------------------
// x2("(?:[ab]|(*MAX{2}).)*", "abcbaaccaaa", 0, 7);
// RepetitionMissing

// x2("(?:(*COUNT[AB]{X})[ab]|(*COUNT[CD]{X})[cd])*(*CMP{AB,<,CD})", // 1172
// -------------------------------------------------------------------------
// x2("(?(?{....})123|456)", "123", 0, 3);
// FlagUnrecognized

// -------------------------------------------------------------------------
// x2("(?(*FAIL)123|456)", "456", 0, 3);
// FlagUnrecognized

// -------------------------------------------------------------------------
// x2("\\g'0'++{,0}",   "abcdefgh", 0, 0);
// EscapeUnrecognized

// -------------------------------------------------------------------------
// x2("\\g'0'++{,0}?",  "abcdefgh", 0, 0);
// EscapeUnrecognized

// -------------------------------------------------------------------------
// x2("\\g'0'++{,0}b",  "abcdefgh", 1, 2);
// EscapeUnrecognized

// -------------------------------------------------------------------------
// x2("\\g'0'++{,0}?def", "abcdefgh", 3, 6);
// EscapeUnrecognized

// -------------------------------------------------------------------------
// x2("a{1,3}?", "aaa", 0, 1);
// UnsupportedFeatureError("a{1,3}?: Non-greedy repetitions. Consider using different scanner modes instead.")

// -------------------------------------------------------------------------
// x2("a{3}", "aaa", 0, 3);
scan_test!(
    case_1180,
    s1180,
    S1180,
    r#"a{3}"#,
    "aaa",
    &[("aaa", 0, 3)],
    1180
);

// -------------------------------------------------------------------------
// x2("a{3}?", "aaa", 0, 3);
// UnsupportedFeatureError("a{3}: Non-greedy repetitions. Consider using different scanner modes instead.")

// -------------------------------------------------------------------------
// x2("a{3}?", "aa", 0, 0);
// UnsupportedFeatureError("a{3}: Non-greedy repetitions. Consider using different scanner modes instead.")

// -------------------------------------------------------------------------
// x2("a{3,3}?", "aaa", 0, 3);
// UnsupportedFeatureError("a{3}: Non-greedy repetitions. Consider using different scanner modes instead.")

// -------------------------------------------------------------------------
// n("a{3,3}?", "aa");
// UnsupportedFeatureError("a{3}: Non-greedy repetitions. Consider using different scanner modes instead.")

// -------------------------------------------------------------------------
// x2("a{1,3}+", "aaaaaa", 0, 6);
scan_test!(
    case_1185,
    s1185,
    S1185,
    r#"a{1,3}+"#,
    "aaaaaa",
    &[("aaaaaa", 0, 6)],
    1185
);

// -------------------------------------------------------------------------
// x2("a{3}+", "aaaaaa", 0, 6);
scan_test!(
    case_1186,
    s1186,
    S1186,
    r#"a{3}+"#,
    "aaaaaa",
    &[("aaaaaa", 0, 6)],
    1186
);

// -------------------------------------------------------------------------
// x2("a{3,3}+", "aaaaaa", 0, 6);
scan_test!(
    case_1187,
    s1187,
    S1187,
    r#"a{3,3}+"#,
    "aaaaaa",
    &[("aaaaaa", 0, 6)],
    1187
);

// -------------------------------------------------------------------------
// n("a{2,3}?",  "a");
// UnsupportedFeatureError("a{2,3}?: Non-greedy repetitions. Consider using different scanner modes instead.")

// -------------------------------------------------------------------------
// n("a{3,2}a", "aaa");
// RepetitionCountInvalid

// -------------------------------------------------------------------------
// x2("a{3,2}b", "aaab", 0, 4);
// RepetitionCountInvalid

// -------------------------------------------------------------------------
// x2("a{3,2}b", "aaaab", 1, 5);
// RepetitionCountInvalid

// -------------------------------------------------------------------------
// x2("a{3,2}b", "aab", 0, 3);
// RepetitionCountInvalid

// -------------------------------------------------------------------------
// x2("a{3,2}?", "", 0, 0);     /* == (?:a{3,2})?*/
// RepetitionCountInvalid

// -------------------------------------------------------------------------
// x2("a{2,3}+a", "aaa", 0, 3); /* == (?:a{2,3})+*/
scan_test!(
    case_1194,
    s1194,
    S1194,
    r#"a{2,3}+a"#,
    "aaa",
    &[("aaa", 0, 3)],
    1194
);

// -------------------------------------------------------------------------
// x2("[\\x{0}-\\x{7fffffff}]", "a", 0, 1);
// EscapeHexInvalid

// -------------------------------------------------------------------------
// x2("[\\x{7f}-\\x{7fffffff}]", "\xe5\xae\xb6", 0, 3);
// EscapeHexInvalid

// -------------------------------------------------------------------------
// x2("[a[cdef]]", "a", 0, 1);
scan_test!(
    case_1197,
    s1197,
    S1197,
    r#"[a[cdef]]"#,
    "a",
    &[("a", 0, 1)],
    1197
);

// -------------------------------------------------------------------------
// n("[a[xyz]-c]", "b");
scan_test!(case_1198, s1198, S1198, r#"[a[xyz]-c]"#, "b", &[], 1198);

// -------------------------------------------------------------------------
// x2("[a[xyz]-c]", "-", 0, 1);
scan_test!(
    case_1200,
    s1200,
    S1200,
    r#"[a[xyz]-c]"#,
    "-",
    &[("-", 0, 1)],
    1200
);

// -------------------------------------------------------------------------
// x2("[a[xyz]-c]", "c", 0, 1);
scan_test!(
    case_1201,
    s1201,
    S1201,
    r#"[a[xyz]-c]"#,
    "c",
    &[("c", 0, 1)],
    1201
);

// -------------------------------------------------------------------------
// x2("(a.c|def)(.{4})(?<=\\1)", "abcdabc", 0, 7);
// UnsupportedLookAround

// -------------------------------------------------------------------------
// x2("(a.c|de)(.{4})(?<=\\1)", "abcdabc", 0, 7);
// UnsupportedLookAround

// -------------------------------------------------------------------------
// x2("(a.c|def)(.{5})(?<=d\\1e)", "abcdabce", 0, 8);
// UnsupportedLookAround

// -------------------------------------------------------------------------
// x2("(a.c|.)d(?<=\\k<1>d)", "zzzzzabcdabc", 5, 9);
// UnsupportedLookAround

// -------------------------------------------------------------------------
// x2("(?<=az*)abc", "azzzzzzzzzzabcdabcabc", 11, 14);
// UnsupportedLookAround

// -------------------------------------------------------------------------
// x2("(?<=ab|abc|abcd)ef", "abcdef", 4, 6);
// UnsupportedLookAround

// -------------------------------------------------------------------------
// x2("(?<=ta+|tb+|tc+|td+)zz", "tcccccccccczz", 11, 13);
// UnsupportedLookAround

// -------------------------------------------------------------------------
// x2("(?<=t.{7}|t.{5}|t.{2}|t.)zz", "tczz", 2, 4);
// UnsupportedLookAround

// -------------------------------------------------------------------------
// x2("(?<=t.{7}|t.{5}|t.{2})zz", "tczzzz", 3, 5);
// UnsupportedLookAround

// -------------------------------------------------------------------------
// x2("(?<=t.{7}|t.{5}|t.{3})zz", "tczzazzbzz", 8, 10);
// UnsupportedLookAround

// -------------------------------------------------------------------------
// n("(?<=t.{7}|t.{5}|t.{3})zz", "tczzazzbczz");
// UnsupportedLookAround

// -------------------------------------------------------------------------
// x2("(?<=(ab|abc|abcd))ef", "abcdef", 4, 6);
// UnsupportedLookAround

// -------------------------------------------------------------------------
// x2("(?<=(ta+|tb+|tc+|td+))zz", "tcccccccccczz", 11, 13);
// UnsupportedLookAround

// -------------------------------------------------------------------------
// x2("(?<=(t.{7}|t.{5}|t.{2}|t.))zz", "tczz", 2, 4);
// UnsupportedLookAround

// -------------------------------------------------------------------------
// x2("(?<=(t.{7}|t.{5}|t.{2}))zz", "tczzzz", 3, 5);
// UnsupportedLookAround

// -------------------------------------------------------------------------
// x2("(?<=(t.{7}|t.{5}|t.{3}))zz", "tczzazzbzz", 8, 10);
// UnsupportedLookAround

// -------------------------------------------------------------------------
// n("(?<=(t.{7}|t.{5}|t.{3}))zz", "tczzazzbczz");
// UnsupportedLookAround

// -------------------------------------------------------------------------
// x2("(.{1,4})(.{1,4})(?<=\\2\\1)", "abaaba", 0, 6);
// UnsupportedLookAround

// -------------------------------------------------------------------------
// x2("(.{1,4})(.{1,4})(?<=\\2\\1)", "ababab", 0, 6);
// UnsupportedLookAround

// -------------------------------------------------------------------------
// n("(.{1,4})(.{1,4})(?<=\\2\\1)", "abcdabce");
// UnsupportedLookAround

// -------------------------------------------------------------------------
// x2("(.{1,4})(.{1,4})(?<=\\2\\1)", "abcdabceabce", 4, 12);
// UnsupportedLookAround

// -------------------------------------------------------------------------
// x2("(?<=a)", "a", 1, 1);
// UnsupportedLookAround

// -------------------------------------------------------------------------
// x2("(?<=a.*\\w)z", "abbbz", 4, 5);
// UnsupportedLookAround

// -------------------------------------------------------------------------
// n("(?<=a.*\\w)z", "abb z");
// UnsupportedLookAround

// -------------------------------------------------------------------------
// x2("(?<=a.*\\W)z", "abb z", 4, 5);
// UnsupportedLookAround

// -------------------------------------------------------------------------
// x2("(?<=a.*\\b)z", "abb z", 4, 5);
// UnsupportedLookAround

// -------------------------------------------------------------------------
// x2("(?<=(?>abc))", "abc", 3, 3);
// UnsupportedLookAround

// -------------------------------------------------------------------------
// x2("(?<=a\\Xz)", "abz", 3, 3);
// UnsupportedLookAround

// -------------------------------------------------------------------------
// n("(?<=^a*)bc", "zabc");
// UnsupportedLookAround

// -------------------------------------------------------------------------
// n("(?<=a*\\b)b", "abc");
// UnsupportedLookAround

// -------------------------------------------------------------------------
// x2("(?<=a+.*[efg])z", "abcdfz", 5, 6);
// UnsupportedLookAround

// -------------------------------------------------------------------------
// x2("(?<=a+.*[efg])z", "abcdfgz", 6, 7);
// UnsupportedLookAround

// -------------------------------------------------------------------------
// n("(?<=a+.*[efg])z", "bcdfz");
// UnsupportedLookAround

// -------------------------------------------------------------------------
// x2("(?<=a*.*[efg])z", "bcdfz", 4, 5);
// UnsupportedLookAround

// -------------------------------------------------------------------------
// n("(?<=a+.*[efg])z", "abcdz");
// UnsupportedLookAround

// -------------------------------------------------------------------------
// x2("(?<=v|t|a+.*[efg])z", "abcdfz", 5, 6);
// UnsupportedLookAround

// -------------------------------------------------------------------------
// x2("(?<=v|t|^a+.*[efg])z", "abcdfz", 5, 6);
// UnsupportedLookAround

// -------------------------------------------------------------------------
// x2("(?<=^(?:v|t|a+.*[efg]))z", "abcdfz", 5, 6);
// UnsupportedLookAround

// -------------------------------------------------------------------------
// x2("(?<=v|^t|a+.*[efg])z", "uabcdfz", 6, 7);
// UnsupportedLookAround

// -------------------------------------------------------------------------
// n("^..(?<=(a{,2}))\\1z", "aaaaz"); // !!! look-behind is shortest priority
// UnsupportedLookAround

// -------------------------------------------------------------------------
// x2("^..(?<=(a{,2}))\\1z", "aaz", 0, 3); // shortest priority
// UnsupportedLookAround

// -------------------------------------------------------------------------
// e("(?<=(?~|zoo)a.*z)", "abcdefz", ONIGERR_INVALID_LOOK_BEHIND_PATTERN);

// -------------------------------------------------------------------------
// e("(?<=(?~|)a.*z)", "abcdefz", ONIGERR_INVALID_LOOK_BEHIND_PATTERN);

// -------------------------------------------------------------------------
// e("(a(?~|boo)z){0}(?<=\\g<1>)", "abcdefz", ONIGERR_INVALID_LOOK_BEHIND_PATTERN);

// -------------------------------------------------------------------------
// x2("(?<=(?<= )| )", "abcde fg", 6, 6); // #173
// UnsupportedLookAround

// -------------------------------------------------------------------------
// x2("(?<=D|)(?<=@!nnnnnnnnnIIIIn;{1}D?()|<x@x*xxxD|)(?<=@xxx|xxxxx\\g<1>;{1}x)", "(?<=D|)(?<=@!nnnnnnnnnIIIIn;{1}D?()|<x@x*xxxD|)(?<=@xxx|xxxxx\\g<1>;{1}x)", 55, 55); // #173
// UnsupportedLookAround

// -------------------------------------------------------------------------
// x2("(?<=;()|)\\g<1>", "", 0, 0); // reduced #173
// UnsupportedLookAround

// -------------------------------------------------------------------------
// x2("(?<=;()|)\\k<1>", ";", 1, 1);
// UnsupportedLookAround

// -------------------------------------------------------------------------
// x2("(())\\g<3>{0}(?<=|())", "abc", 0, 0); // #175
// EscapeUnrecognized

// -------------------------------------------------------------------------
// x2("(?<=()|)\\1{0}", "abc", 0, 0);
// UnsupportedLookAround

// -------------------------------------------------------------------------
// e("(?<!xxxxxxxxxxxxxxxxxxxxxxx{32774}{65521}xxxxxxxx{65521}xxxxxxxxxxxxxx{32774}xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx)", "", ONIGERR_INVALID_LOOK_BEHIND_PATTERN); // #177

// -------------------------------------------------------------------------
// x2("(?<=(?<=abc))def", "abcdef", 3, 6);
// UnsupportedLookAround

// -------------------------------------------------------------------------
// x2("(?<=ab(?<=.+b)c)def", "abcdef", 3, 6);
// UnsupportedLookAround

// -------------------------------------------------------------------------
// n("(?<=ab(?<=a+)c)def", "abcdef");
// UnsupportedLookAround

// -------------------------------------------------------------------------
// n("(?<=abc)(?<!abc)def", "abcdef");
// UnsupportedLookAround

// -------------------------------------------------------------------------
// n("(?<!ab.)(?<=.bc)def", "abcdef");
// UnsupportedLookAround

// -------------------------------------------------------------------------
// x2("(?<!ab.)(?<=.bc)def", "abcdefcbcdef", 9, 12);
// UnsupportedLookAround

// -------------------------------------------------------------------------
// n("(?<!abc)def", "abcdef");
// UnsupportedLookAround

// -------------------------------------------------------------------------
// n("(?<!xxx|abc)def", "abcdef");
// UnsupportedLookAround

// -------------------------------------------------------------------------
// n("(?<!xxxxx|abc)def", "abcdef");
// UnsupportedLookAround

// -------------------------------------------------------------------------
// n("(?<!xxxxx|abc)def", "xxxxxxdef");
// UnsupportedLookAround

// -------------------------------------------------------------------------
// n("(?<!x+|abc)def", "abcdef");
// UnsupportedLookAround

// -------------------------------------------------------------------------
// n("(?<!x+|abc)def", "xxxxxxxxxdef");
// UnsupportedLookAround

// -------------------------------------------------------------------------
// x2("(?<!x+|abc)def", "xxxxxxxxzdef", 9, 12);
// UnsupportedLookAround

// -------------------------------------------------------------------------
// n("(?<!a.*z|a)def", "axxxxxxxzdef");
// UnsupportedLookAround

// -------------------------------------------------------------------------
// n("(?<!a.*z|a)def", "bxxxxxxxadef");
// UnsupportedLookAround

// -------------------------------------------------------------------------
// x2("(?<!a.*z|a)def", "axxxxxxxzdefxxdef", 14, 17);
// UnsupportedLookAround

// -------------------------------------------------------------------------
// x2("(?<!a.*z|a)def", "bxxxxxxxadefxxdef", 14, 17);
// UnsupportedLookAround

// -------------------------------------------------------------------------
// x2("(?<!a.*z|a)def", "bxxxxxxxzdef", 9, 12);
// UnsupportedLookAround

// -------------------------------------------------------------------------
// x2("(?<!x+|y+)\\d+", "xxx572", 4, 6);
// UnsupportedLookAround

// -------------------------------------------------------------------------
// x2("(?<!3+|4+)\\d+", "33334444", 0, 8);
// UnsupportedLookAround

// -------------------------------------------------------------------------
// n(".(?<!3+|4+)\\d+", "33334444");
// UnsupportedLookAround

// -------------------------------------------------------------------------
// n("(.{,3})..(?<!\\1)", "aaaaa");
// RepetitionCountDecimalEmpty

// -------------------------------------------------------------------------
// x2("(.{,3})..(?<!\\1)", "abcde", 0, 5);
// RepetitionCountDecimalEmpty

// -------------------------------------------------------------------------
// x2("(.{,3})...(?<!\\1)", "abcde", 0, 5);
// RepetitionCountDecimalEmpty

// -------------------------------------------------------------------------
// x2("(a.c)(.{3,}?)(?<!\\1)", "abcabcd", 0, 7);
// UnsupportedLookAround

// -------------------------------------------------------------------------
// x2("(a*)(.{3,}?)(?<!\\1)", "abcabcd", 0, 5);
// UnsupportedLookAround

// -------------------------------------------------------------------------
// x2("(?:(a.*b)|c.*d)(?<!(?(1))azzzb)", "azzzzb", 0, 6);
// UnsupportedLookAround

// -------------------------------------------------------------------------
// n("(?:(a.*b)|c.*d)(?<!(?(1))azzzb)", "azzzb");
// UnsupportedLookAround

// -------------------------------------------------------------------------
// x2("<(?<!NT{+}abcd)", "<(?<!NT{+}abcd)", 0, 1);
// UnsupportedLookAround

// -------------------------------------------------------------------------
// x2("(?<!a.*c)def", "abbbbdef", 5, 8);
// UnsupportedLookAround

// -------------------------------------------------------------------------
// n("(?<!a.*c)def", "abbbcdef");
// UnsupportedLookAround

// -------------------------------------------------------------------------
// x2("(?<!a.*X\\b)def", "abbbbbXdef", 7, 10);
// UnsupportedLookAround

// -------------------------------------------------------------------------
// n("(?<!a.*X\\B)def", "abbbbbXdef");
// UnsupportedLookAround

// -------------------------------------------------------------------------
// x2("(?<!a.*[uvw])def", "abbbbbXdef", 7, 10);
// UnsupportedLookAround

// -------------------------------------------------------------------------
// n("(?<!a.*[uvw])def", "abbbbbwdef");
// UnsupportedLookAround

// -------------------------------------------------------------------------
// x2("(?<!ab*\\S+)def", "abbbbb   def", 9, 12);
// UnsupportedLookAround

// -------------------------------------------------------------------------
// x2("(?<!a.*\\S)def", "abbbbb def", 7, 10);
// UnsupportedLookAround

// -------------------------------------------------------------------------
// n("(?<!ab*\\s+)def", "abbbbb   def");
// UnsupportedLookAround

// -------------------------------------------------------------------------
// x2("(?<!ab*\\s+\\B)def", "abbbbb   def", 9, 12);
// UnsupportedLookAround

// -------------------------------------------------------------------------
// n("(?<!v|t|a+.*[efg])z", "abcdfz");
// UnsupportedLookAround

// -------------------------------------------------------------------------
// x2("(?<!v|t|a+.*[efg])z", "abcdfzavzuz", 10, 11);
// UnsupportedLookAround

// -------------------------------------------------------------------------
// n("(?<!v|t|^a+.*[efg])z", "abcdfz");
// UnsupportedLookAround

// -------------------------------------------------------------------------
// n("(?<!^(?:v|t|a+.*[efg]))z", "abcdfz");
// UnsupportedLookAround

// -------------------------------------------------------------------------
// x2("(?<!v|^t|^a+.*[efg])z", "uabcdfz", 6, 7);
// UnsupportedLookAround

// -------------------------------------------------------------------------
// n("(\\k<2>)|(?<=(\\k<1>))", "");
// EscapeUnrecognized

// -------------------------------------------------------------------------
// x2("(a|\\k<2>)|(?<=(\\k<1>))", "a", 0, 1);
// EscapeUnrecognized

// -------------------------------------------------------------------------
// x2("(a|\\k<2>)|(?<=b(\\k<1>))", "ba", 1, 2);
// EscapeUnrecognized

// -------------------------------------------------------------------------
// n("(?<!RMA)X", "123RMAX");
// UnsupportedLookAround

// -------------------------------------------------------------------------
// x2("(?<=RMA)X", "123RMAX", 6, 7);
// UnsupportedLookAround

// -------------------------------------------------------------------------
// n("(?<!RMA)$", "123RMA");
// UnsupportedLookAround

// -------------------------------------------------------------------------
// x2("(?<=RMA)$", "123RMA", 6, 6);
// UnsupportedLookAround

// -------------------------------------------------------------------------
// n("(?<!RMA)\\Z", "123RMA");
// UnsupportedLookAround

// -------------------------------------------------------------------------
// x2("(?<=RMA)\\Z", "123RMA", 6, 6);
// UnsupportedLookAround

// -------------------------------------------------------------------------
// n("(?<!RMA)\\z", "123RMA");
// UnsupportedLookAround

// -------------------------------------------------------------------------
// x2("(?<=RMA)\\z", "123RMA", 6, 6);
// UnsupportedLookAround

// -------------------------------------------------------------------------
// x2("((?(a)\\g<1>|b))", "aab", 0, 3);
// FlagUnrecognized

// -------------------------------------------------------------------------
// x2("((?(a)\\g<1>))", "aab", 0, 2);
// FlagUnrecognized

// -------------------------------------------------------------------------
// x2("((?(a)\\g<1>))", "", 0, 0);
// FlagUnrecognized

// -------------------------------------------------------------------------
// x2("(b(?(a)|\\g<1>))", "bba", 0, 3);
// FlagUnrecognized

// -------------------------------------------------------------------------
// e("(()(?(2)\\g<1>))", "", ONIGERR_NEVER_ENDING_RECURSION);

// -------------------------------------------------------------------------
// x2("(?(a)(?:b|c))", "ac", 0, 2);
// FlagUnrecognized

// -------------------------------------------------------------------------
// x2("(?(a)(?:b|c))", "", 0, 0);
// FlagUnrecognized

// -------------------------------------------------------------------------
// x2("(?(a)b)", "", 0, 0);
// FlagUnrecognized

// -------------------------------------------------------------------------
// n("^(?(a)b|c)", "ac");
// FlagUnrecognized

// -------------------------------------------------------------------------
// x2("(?i)a|b", "B", 0, 1);
scan_test!(
    case_1317,
    s1317,
    S1317,
    r#"(?i)a|b"#,
    "B",
    &[("B", 0, 1)],
    1317
);

// -------------------------------------------------------------------------
// n("((?i)a|b.)|c", "C");
scan_test!(case_1318, s1318, S1318, r#"((?i)a|b.)|c"#, "C", &[], 1318);

// -------------------------------------------------------------------------
// n("c(?i)a.|b.", "Caz");
scan_test!(case_1319, s1319, S1319, r#"c(?i)a.|b."#, "Caz", &[], 1319);

// -------------------------------------------------------------------------
// x2("c(?i)a|b", "cB", 0, 2); /* == c(?i:a|b) */
scan_test!(
    case_1320,
    s1320,
    S1320,
    r#"c(?i)a|b"#,
    "cB",
    &[("B", 1, 2)], // Oniguruma: ("cB", 0, 2)
    1320
);

// -------------------------------------------------------------------------
// x2("c(?i)a.|b.", "cBb", 0, 3);
scan_test!(
    case_1321,
    s1321,
    S1321,
    r#"c(?i)a.|b."#,
    "cBb",
    &[("Bb", 1, 3)],
    1321
);

// -------------------------------------------------------------------------
// x2("(?i)st", "st", 0, 2);
scan_test!(
    case_1322,
    s1322,
    S1322,
    r#"(?i)st"#,
    "st",
    &[("st", 0, 2)],
    1322
);

// -------------------------------------------------------------------------
// x2("(?i)st", "St", 0, 2);
scan_test!(
    case_1323,
    s1323,
    S1323,
    r#"(?i)st"#,
    "St",
    &[("St", 0, 2)],
    1323
);

// -------------------------------------------------------------------------
// x2("(?i)st", "sT", 0, 2);
scan_test!(
    case_1324,
    s1324,
    S1324,
    r#"(?i)st"#,
    "sT",
    &[("sT", 0, 2)],
    1324
);

// -------------------------------------------------------------------------
// x2("(?i)st", "\xC5\xBFt", 0, 3); // U+017F
scanner! { S1325 { mode M { token r#"(?i)st"# => 0; } } }

// -------------------------------------------------------------------------
// x2("(?i)st", "\xEF\xAC\x85", 0, 3); // U+FB05
scanner! { S1326 { mode M { token r#"(?i)st"# => 0; } } }

// -------------------------------------------------------------------------
// x2("(?i)st", "\xEF\xAC\x86", 0, 3); // U+FB06
scanner! { S1327 { mode M { token r#"(?i)st"# => 0; } } }

// -------------------------------------------------------------------------
// x2("(?i)ast", "Ast", 0, 3);
scan_test!(
    case_1328,
    s1328,
    S1328,
    r#"(?i)ast"#,
    "Ast",
    &[("Ast", 0, 3)],
    1328
);

// -------------------------------------------------------------------------
// x2("(?i)ast", "ASt", 0, 3);
scan_test!(
    case_1329,
    s1329,
    S1329,
    r#"(?i)ast"#,
    "ASt",
    &[("ASt", 0, 3)],
    1329
);

// -------------------------------------------------------------------------
// x2("(?i)ast", "AsT", 0, 3);
scan_test!(
    case_1330,
    s1330,
    S1330,
    r#"(?i)ast"#,
    "AsT",
    &[("AsT", 0, 3)],
    1330
);

// -------------------------------------------------------------------------
// x2("(?i)ast", "A\xC5\xBFt", 0, 4); // U+017F
scanner! { S1331 { mode M { token r#"(?i)ast"# => 0; } } }

// -------------------------------------------------------------------------
// x2("(?i)ast", "A\xEF\xAC\x85", 0, 4); // U+FB05
scanner! { S1332 { mode M { token r#"(?i)ast"# => 0; } } }

// -------------------------------------------------------------------------
// x2("(?i)ast", "A\xEF\xAC\x86", 0, 4); // U+FB06
scanner! { S1333 { mode M { token r#"(?i)ast"# => 0; } } }

// -------------------------------------------------------------------------
// x2("(?i)stZ", "stz", 0, 3);
scan_test!(
    case_1334,
    s1334,
    S1334,
    r#"(?i)stZ"#,
    "stz",
    &[("stz", 0, 3)],
    1334
);

// -------------------------------------------------------------------------
// x2("(?i)stZ", "Stz", 0, 3);
scan_test!(
    case_1335,
    s1335,
    S1335,
    r#"(?i)stZ"#,
    "Stz",
    &[("Stz", 0, 3)],
    1335
);

// -------------------------------------------------------------------------
// x2("(?i)stZ", "sTz", 0, 3);
scan_test!(
    case_1336,
    s1336,
    S1336,
    r#"(?i)stZ"#,
    "sTz",
    &[("sTz", 0, 3)],
    1336
);

// -------------------------------------------------------------------------
// x2("(?i)stZ", "\xC5\xBFtz", 0, 4); // U+017F
scanner! { S1337 { mode M { token r#"(?i)stZ"# => 0; } } }

// -------------------------------------------------------------------------
// x2("(?i)stZ", "\xEF\xAC\x85z", 0, 4); // U+FB05
scanner! { S1338 { mode M { token r#"(?i)stZ"# => 0; } } }

// -------------------------------------------------------------------------
// x2("(?i)stZ", "\xEF\xAC\x86z", 0, 4); // U+FB06
scanner! { S1339 { mode M { token r#"(?i)stZ"# => 0; } } }

// -------------------------------------------------------------------------
// x2("(?i)BstZ", "bstz", 0, 4);
scan_test!(
    case_1340,
    s1340,
    S1340,
    r#"(?i)BstZ"#,
    "bstz",
    &[("bstz", 0, 4)],
    1340
);

// -------------------------------------------------------------------------
// x2("(?i)BstZ", "bStz", 0, 4);
scan_test!(
    case_1341,
    s1341,
    S1341,
    r#"(?i)BstZ"#,
    "bStz",
    &[("bStz", 0, 4)],
    1341
);

// -------------------------------------------------------------------------
// x2("(?i)BstZ", "bsTz", 0, 4);
scan_test!(
    case_1342,
    s1342,
    S1342,
    r#"(?i)BstZ"#,
    "bsTz",
    &[("bsTz", 0, 4)],
    1342
);

// -------------------------------------------------------------------------
// x2("(?i)BstZ", "b\xC5\xBFtz", 0, 5); // U+017F
scanner! { S1343 { mode M { token r#"(?i)BstZ"# => 0; } } }

// -------------------------------------------------------------------------
// x2("(?i)BstZ", "b\xEF\xAC\x85z", 0, 5); // U+FB05
scanner! { S1344 { mode M { token r#"(?i)BstZ"# => 0; } } }

// -------------------------------------------------------------------------
// x2("(?i)BstZ", "b\xEF\xAC\x86z", 0, 5); // U+FB06
scanner! { S1345 { mode M { token r#"(?i)BstZ"# => 0; } } }

// -------------------------------------------------------------------------
// x2("(?i).*st\\z", "tttssss\xC5\xBFt", 0, 10); // U+017F
// UnsupportedFeatureError("EndLine Look(End)")

// -------------------------------------------------------------------------
// x2("(?i).*st\\z", "tttssss\xEF\xAC\x85", 0, 10); // U+FB05
// UnsupportedFeatureError("EndLine Look(End)")

// -------------------------------------------------------------------------
// x2("(?i).*st\\z", "tttssss\xEF\xAC\x86", 0, 10); // U+FB06
// UnsupportedFeatureError("EndLine Look(End)")

// -------------------------------------------------------------------------
// x2("(?i).*あstい\\z", "tttssssあ\xC5\xBFtい", 0, 16); // U+017F
// UnsupportedFeatureError("EndLine Look(End)")

// -------------------------------------------------------------------------
// x2("(?i).*あstい\\z", "tttssssあ\xEF\xAC\x85い", 0, 16); // U+FB05
// UnsupportedFeatureError("EndLine Look(End)")

// -------------------------------------------------------------------------
// x2("(?i).*あstい\\z", "tttssssあ\xEF\xAC\x86い", 0, 16); // U+FB06
// UnsupportedFeatureError("EndLine Look(End)")

// -------------------------------------------------------------------------
// x2("(?i).*\xC5\xBFt\\z", "tttssssst", 0, 9); // U+017F
// UnsupportedFeatureError("EndLine Look(End)")

// -------------------------------------------------------------------------
// *** Index error: x2("(?i).*\xEF\xAC\x85\\z", "tttssssあst", 0, 12); // U+FB05 // 1353

// -------------------------------------------------------------------------
// *** Index error: x2("(?i).*\xEF\xAC\x86い\\z", "tttssssstい", 0, 12); // U+FB06 // 1354

// -------------------------------------------------------------------------
// x2("(?i).*\xEF\xAC\x85\\z", "tttssssあ\xEF\xAC\x85", 0, 13);
// UnsupportedFeatureError("EndLine Look(End)")

// -------------------------------------------------------------------------
// x2("(?i).*ss", "abcdefghijklmnopqrstuvwxyz\xc3\x9f", 0, 28); // U+00DF
scanner! { S1356 { mode M { token r#"(?i).*ss"# => 0; } } }

// -------------------------------------------------------------------------
// x2("(?i).*ss.*", "abcdefghijklmnopqrstuvwxyz\xc3\x9fxyz", 0, 31); // U+00DF
scanner! { S1357 { mode M { token r#"(?i).*ss.*"# => 0; } } }

// -------------------------------------------------------------------------
// x2("(?i).*\xc3\x9f", "abcdefghijklmnopqrstuvwxyzss", 0, 28); // U+00DF
scan_test!(
    case_1358,
    s1358,
    S1358,
    r#"(?i).*\xc3\x9f"#,
    "abcdefghijklmnopqrstuvwxyzss",
    &[],
    1358
);

// -------------------------------------------------------------------------
// x2("(?i)ssv", "\xc3\x9fv", 0, 3); // U+00DF
scanner! { S1360 { mode M { token r#"(?i)ssv"# => 0; } } }

// -------------------------------------------------------------------------
// x2("(?i)(?<=ss)v", "SSv", 2, 3);
// UnsupportedLookAround

// -------------------------------------------------------------------------
// x2("(?i)(?<=\xc3\x9f)v", "\xc3\x9fv", 2, 3);
// UnsupportedLookAround

// -------------------------------------------------------------------------
// *** Index error: x2("(?i).+Isssǰ", ".+Isssǰ", 0, 8); // 1363

// -------------------------------------------------------------------------
// *** Index error: x2(".+Isssǰ", ".+Isssǰ", 0, 8); // 1364

// -------------------------------------------------------------------------
// *** Index error: x2("(?i)ǰ", "ǰ", 0, 2); // 1365

// -------------------------------------------------------------------------
// x2("(?i)ǰ", "j\xcc\x8c", 0, 3);
scanner! { S1366 { mode M { token r#"(?i)ǰ"# => 0; } } }

// -------------------------------------------------------------------------
// *** Index error: x2("(?i)j\xcc\x8c", "ǰ", 0, 2); // 1367

// -------------------------------------------------------------------------
// *** Index error: x2("(?i)5ǰ", "5ǰ", 0, 3); // 1368

// -------------------------------------------------------------------------
// x2("(?i)5ǰ", "5j\xcc\x8c", 0, 4);
scanner! { S1369 { mode M { token r#"(?i)5ǰ"# => 0; } } }

// -------------------------------------------------------------------------
// *** Index error: x2("(?i)5j\xcc\x8c", "5ǰ", 0, 3); // 1370

// -------------------------------------------------------------------------
// *** Index error: x2("(?i)ǰv", "ǰV", 0, 3); // 1371

// -------------------------------------------------------------------------
// x2("(?i)ǰv", "j\xcc\x8cV", 0, 4);
scanner! { S1372 { mode M { token r#"(?i)ǰv"# => 0; } } }

// -------------------------------------------------------------------------
// *** Index error: x2("(?i)j\xcc\x8cv", "ǰV", 0, 3); // 1373

// -------------------------------------------------------------------------
// *** Index error: x2("(?i)[ǰ]", "ǰ", 0, 2); // 1374

// -------------------------------------------------------------------------
// x2("(?i)[ǰ]", "j\xcc\x8c", 0, 3);
scanner! { S1375 { mode M { token r#"(?i)[ǰ]"# => 0; } } }

// -------------------------------------------------------------------------
// x2("(?i)\ufb00a", "ffa", 0, 3);
scan_test!(case_1376, s1376, S1376, r#"(?i)\ufb00a"#, "ffa", &[], 1376);

// -------------------------------------------------------------------------
// x2("(?i)ffz", "\xef\xac\x80z", 0, 4);
scanner! { S1377 { mode M { token r#"(?i)ffz"# => 0; } } }

// -------------------------------------------------------------------------
// x2("(?i)\u2126", "\xcf\x89", 0, 2);
scanner! { S1378 { mode M { token r#"(?i)\u2126"# => 0; } } }

// -------------------------------------------------------------------------
// x2("a(?i)\u2126", "a\xcf\x89", 0, 3);
scanner! { S1379 { mode M { token r#"a(?i)\u2126"# => 0; } } }

// -------------------------------------------------------------------------
// x2("(?i)A\u2126", "a\xcf\x89", 0, 3);
scanner! { S1380 { mode M { token r#"(?i)A\u2126"# => 0; } } }

// -------------------------------------------------------------------------
// x2("(?i)A\u2126=", "a\xcf\x89=", 0, 4);
scanner! { S1381 { mode M { token r#"(?i)A\u2126="# => 0; } } }

// -------------------------------------------------------------------------
// x2("(?i:ss)=1234567890", "\xc5\xbf\xc5\xbf=1234567890", 0, 15);
scanner! { S1382 { mode M { token r#"(?i:ss)=1234567890"# => 0; } } }

// -------------------------------------------------------------------------
// x2("\\x{000A}", "\x0a", 0, 1);
scanner! { S1383 { mode M { token r#"\x{000A}"# => 0; } } }

// -------------------------------------------------------------------------
// x2("\\x{000A 002f}", "\x0a\x2f", 0, 2);
// EscapeHexInvalidDigit

// -------------------------------------------------------------------------
// x2("\\x{000A 002f }", "\x0a\x2f", 0, 2);
// EscapeHexInvalidDigit

// -------------------------------------------------------------------------
// x2("\\x{007C     001b}", "\x7c\x1b", 0, 2);
// EscapeHexInvalidDigit

// -------------------------------------------------------------------------
// x2("\\x{1 2 3 4 5 6 7 8 9 a b c d e f}", "\x01\x02\x3\x04\x05\x06\x07\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f", 0, 15);
// EscapeHexInvalidDigit

// -------------------------------------------------------------------------
// x2("a\\x{000A 002f}@", "a\x0a\x2f@", 0, 4);
// EscapeHexInvalidDigit

// -------------------------------------------------------------------------
// x2("a\\x{0060\n0063}@", "a\x60\x63@", 0, 4);
// EscapeHexInvalidDigit

// -------------------------------------------------------------------------
// e("\\x{00000001 000000012}", "", ONIGERR_TOO_LONG_WIDE_CHAR_VALUE);

// -------------------------------------------------------------------------
// e("\\x{000A 00000002f}", "", ONIGERR_TOO_LONG_WIDE_CHAR_VALUE);

// -------------------------------------------------------------------------
// e("\\x{000A 002f/", "", ONIGERR_INVALID_CODE_POINT_VALUE);

// -------------------------------------------------------------------------
// e("\\x{000A 002f /", "", ONIGERR_INVALID_CODE_POINT_VALUE);

// -------------------------------------------------------------------------
// e("\\x{000A", "", ONIGERR_INVALID_CODE_POINT_VALUE);

// -------------------------------------------------------------------------
// e("\\x{000A ", "", ONIGERR_INVALID_CODE_POINT_VALUE);

// -------------------------------------------------------------------------
// e("\\x{000A 002f ", "", ONIGERR_INVALID_CODE_POINT_VALUE);

// -------------------------------------------------------------------------
// x2("\\o{102}", "B", 0, 1);
// EscapeUnrecognized

// -------------------------------------------------------------------------
// x2("\\o{102 103}", "BC", 0, 2);
// EscapeUnrecognized

// -------------------------------------------------------------------------
// x2("\\o{0160 0000161}", "pq", 0, 2);
// EscapeUnrecognized

// -------------------------------------------------------------------------
// x2("\\o{1 2 3 4 5 6 7 10 11 12 13 14 15 16 17}", "\x01\x02\x3\x04\x05\x06\x07\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f", 0, 15);
// EscapeUnrecognized

// -------------------------------------------------------------------------
// x2("\\o{0007 0010 }", "\x07\x08", 0, 2);
// EscapeUnrecognized

// -------------------------------------------------------------------------
// e("\\o{0000 0015/", "", ONIGERR_INVALID_CODE_POINT_VALUE);

// -------------------------------------------------------------------------
// e("\\o{0000 0015 /", "", ONIGERR_INVALID_CODE_POINT_VALUE);

// -------------------------------------------------------------------------
// e("\\o{0015", "", ONIGERR_INVALID_CODE_POINT_VALUE);

// -------------------------------------------------------------------------
// e("\\o{0015 ", "", ONIGERR_INVALID_CODE_POINT_VALUE);

// -------------------------------------------------------------------------
// e("\\o{0007 002f}", "", ONIGERR_INVALID_CODE_POINT_VALUE);

// -------------------------------------------------------------------------
// x2("[\\x{000A}]", "\x0a", 0, 1);
scanner! { S1407 { mode M { token r#"[\x{000A}]"# => 0; } } }

// -------------------------------------------------------------------------
// x2("[\\x{000A 002f}]+", "\x0a\x2f\x2e", 0, 2);
// EscapeHexInvalidDigit

// -------------------------------------------------------------------------
// x2("[\\x{01 0F 1A 2c 4B}]+", "\x20\x01\x0f\x1a\x2c\x4b\x1b", 1, 6);
// EscapeHexInvalidDigit

// -------------------------------------------------------------------------
// x2("[\\x{0020 0024}-\\x{0026}]+", "\x25\x24\x26\x23", 0, 3);
// EscapeHexInvalidDigit

// -------------------------------------------------------------------------
// x2("[\\x{0030}-\\x{0033 005a}]+", "\x30\x31\x32\x33\x5a\34", 0, 5);
// EscapeHexInvalidDigit

// -------------------------------------------------------------------------
// e("[\\x{000A]", "", ONIGERR_INVALID_CODE_POINT_VALUE);

// -------------------------------------------------------------------------
// e("[\\x{000A ]", "", ONIGERR_INVALID_CODE_POINT_VALUE);

// -------------------------------------------------------------------------
// e("[\\x{000A }]", "", ONIGERR_INVALID_CODE_POINT_VALUE);

// -------------------------------------------------------------------------
// x2("[\\o{102}]", "B", 0, 1);
// EscapeUnrecognized

// -------------------------------------------------------------------------
// x2("[\\o{102 103}]*", "BC", 0, 2);
// EscapeUnrecognized

// -------------------------------------------------------------------------
// e("[a\\o{002  003]bcde|zzz", "", ONIGERR_INVALID_CODE_POINT_VALUE);

// -------------------------------------------------------------------------
// x2("[\\x{0030-0039}]+", "abc0123456789def", 3, 13);
// EscapeHexInvalidDigit

// -------------------------------------------------------------------------
// x2("[\\x{0030 - 0039 }]+", "abc0123456789def", 3, 13);
// EscapeHexInvalidDigit

// -------------------------------------------------------------------------
// x2("[\\x{0030 - 0039 0063 0064}]+", "abc0123456789def", 2, 14);
// EscapeHexInvalidDigit

// -------------------------------------------------------------------------
// x2("[\\x{0030 - 0039 0063-0065}]+", "acde019b", 1, 7);
// EscapeHexInvalidDigit

// -------------------------------------------------------------------------
// e("[\\x{0030 - 0039-0063 0064}]+", "", ONIGERR_INVALID_CODE_POINT_VALUE);

// -------------------------------------------------------------------------
// e("[\\x{0030 - }]+", "", ONIGERR_INVALID_CODE_POINT_VALUE);

// -------------------------------------------------------------------------
// e("[\\x{0030 -- 0040}]+", "", ONIGERR_INVALID_CODE_POINT_VALUE);

// -------------------------------------------------------------------------
// e("[\\x{0030--0040}]+", "", ONIGERR_INVALID_CODE_POINT_VALUE);

// -------------------------------------------------------------------------
// e("[\\x{0030 - - 0040}]+", "", ONIGERR_INVALID_CODE_POINT_VALUE);

// -------------------------------------------------------------------------
// e("[\\x{0030 0044 - }]+", "", ONIGERR_INVALID_CODE_POINT_VALUE);

// -------------------------------------------------------------------------
// e("[a-\\x{0070 - 0039}]+", "", ONIGERR_INVALID_CODE_POINT_VALUE);

// -------------------------------------------------------------------------
// x2("[a-\\x{0063 0071}]+", "dabcqz", 1, 5);
// EscapeHexInvalidDigit

// -------------------------------------------------------------------------
// x2("[-\\x{0063-0065}]+", "ace-df", 1, 5);
// EscapeHexInvalidDigit

// -------------------------------------------------------------------------
// x2("[\\x61-\\x{0063 0065}]+", "abced", 0, 4);
// EscapeHexInvalidDigit

// -------------------------------------------------------------------------
// e("[\\x61-\\x{0063-0065}]+", "", ONIGERR_INVALID_CODE_POINT_VALUE);

// -------------------------------------------------------------------------
// x2("[t\\x{0063 0071}]+", "tcqb", 0, 3);
// EscapeHexInvalidDigit

// -------------------------------------------------------------------------
// x2("[\\W\\x{0063 0071}]+", "*cqa", 0, 3);
// EscapeHexInvalidDigit

// -------------------------------------------------------------------------
// x2("(\\O|(?=z\\g<2>*))(\\g<0>){0}", "a", 0, 1);
// EscapeUnrecognized

// -------------------------------------------------------------------------
// x2("(?Ii)abc", "abc", 0, 3);
// FlagUnrecognized

// -------------------------------------------------------------------------
// x2("(?Ii)abc", "ABC", 0, 3);
// FlagUnrecognized

// -------------------------------------------------------------------------
// x2("(?Ii:abc)", "abc", 0, 3);
// FlagUnrecognized

// -------------------------------------------------------------------------
// x2("(?Ii)xyz|abc", "aBc", 0, 3);
// FlagUnrecognized

// -------------------------------------------------------------------------
// x2("(?Ii:zz|abc|AZ)", "ABc", 0, 3);
// FlagUnrecognized

// -------------------------------------------------------------------------
// e("(?Ii:abc)d", "abc", ONIGERR_INVALID_GROUP_OPTION);

// -------------------------------------------------------------------------
// e("(?-Ii:abc)", "abc", ONIGERR_INVALID_GROUP_OPTION);

// -------------------------------------------------------------------------
// x2("(?I-i:abc)", "abc", 0, 3);
// FlagUnrecognized

// -------------------------------------------------------------------------
// e("(?i-I:abc)", "abc", ONIGERR_INVALID_GROUP_OPTION);

// -------------------------------------------------------------------------
// x2("(?i)\xe2\x84\xaa", "k", 0, 1);
scan_test!(
    case_1445,
    s1445,
    S1445,
    r#"(?i)\xe2\x84\xaa"#,
    "k",
    &[],
    1445
);

// -------------------------------------------------------------------------
// n("(?Ii)\xe2\x84\xaa", "k");
// FlagUnrecognized

// -------------------------------------------------------------------------
// e("((?Ii)abc)", "", ONIGERR_INVALID_GROUP_OPTION);

// -------------------------------------------------------------------------
// x2("(?:(?Ii)abc)", "ABC", 0, 3);
// FlagUnrecognized

// -------------------------------------------------------------------------
// x2("(?:(?:(?Ii)abc))", "ABC", 0, 3);
// FlagUnrecognized

// -------------------------------------------------------------------------
// e("x(?Ii)", "", ONIGERR_INVALID_GROUP_OPTION);

// -------------------------------------------------------------------------
// e("()(?Ii)", "", ONIGERR_INVALID_GROUP_OPTION);

// -------------------------------------------------------------------------
// e("(?:)(?Ii)", "", ONIGERR_INVALID_GROUP_OPTION);

// -------------------------------------------------------------------------
// e("^(?Ii)", "", ONIGERR_INVALID_GROUP_OPTION);

// -------------------------------------------------------------------------
// x2("(?Ii)$", "", 0, 0);
// FlagUnrecognized

// -------------------------------------------------------------------------
// x2("(?Ii)|", "", 0, 0);
// FlagUnrecognized

// -------------------------------------------------------------------------
// e("(?Ii)|(?Ii)", "", ONIGERR_INVALID_GROUP_OPTION);

// -------------------------------------------------------------------------
// x2("a*", "aabcaaa", 0, 2);
scan_test!(
    case_1457,
    s1457,
    S1457,
    r#"a*"#,
    "aabcaaa",
    &[("aa", 0, 2), ("aaa", 4, 7)], // Oniguruma: ("aa", 0, 2)
    1457
);

// -------------------------------------------------------------------------
// x2("(?L)a*", "aabcaaa", 4, 7);
// FlagUnrecognized

// -------------------------------------------------------------------------
// x2("(?L)a{4}|a{3}|b*", "baaaaabbb", 1, 5);
// FlagUnrecognized

// -------------------------------------------------------------------------
// x2("(?L)a{3}|a{4}|b*", "baaaaabbb", 1, 5);
// FlagUnrecognized

// -------------------------------------------------------------------------
// e("x(?L)xxxxx", "", ONIGERR_INVALID_GROUP_OPTION);

// -------------------------------------------------------------------------
// e("(?-L)x", "", ONIGERR_INVALID_GROUP_OPTION);

// -------------------------------------------------------------------------
// x3("(..)\\1", "abab", 0, 2, 1);
// UnsupportedBackreference

// -------------------------------------------------------------------------
// e("(?C)(..)\\1", "abab", ONIGERR_INVALID_BACKREF);

// -------------------------------------------------------------------------
// e("(?-C)", "", ONIGERR_INVALID_GROUP_OPTION);

// -------------------------------------------------------------------------
// e("(?C)(.)(.)(.)(?<name>.)\\1", "abcdd", ONIGERR_NUMBERED_BACKREF_OR_CALL_NOT_ALLOWED);

// -------------------------------------------------------------------------
// x2("(?L)z|a\\g<0>a", "aazaa", 0, 5);
// FlagUnrecognized

// -------------------------------------------------------------------------
// x2("(?Li)z|a\\g<0>a", "aazAA", 0, 5);
// FlagUnrecognized

// -------------------------------------------------------------------------
// x2("(?Li:z|a\\g<0>a)", "aazAA", 0, 5);
// FlagUnrecognized

// -------------------------------------------------------------------------
// x2("(?L)z|a\\g<0>a", "aazaaaazaaaa", 3, 12);
// FlagUnrecognized

// -------------------------------------------------------------------------
// n("(?iI)s", "\xc5\xbf");
// FlagUnrecognized

// -------------------------------------------------------------------------
// n("(?iI)[s]", "\xc5\xbf");    // FAIL
// FlagUnrecognized

// -------------------------------------------------------------------------
// n("(?iI:s)", "\xc5\xbf");
// FlagUnrecognized

// -------------------------------------------------------------------------
// n("(?iI:[s])", "\xc5\xbf");    // FAIL
// FlagUnrecognized

// -------------------------------------------------------------------------
// x2("(?iI)(?:[[:word:]])", "\xc5\xbf", 0, 2);
// FlagUnrecognized

// -------------------------------------------------------------------------
// n("(?iI)(?W:[[:word:]])", "\xc5\xbf");     // FAIL
// FlagUnrecognized

// -------------------------------------------------------------------------
// n("(?iI)(?W:\\w)", "\xc5\xbf");
// FlagUnrecognized

// -------------------------------------------------------------------------
// n("(?iI)(?W:[\\w])", "\xc5\xbf");     // FAIL
// FlagUnrecognized

// -------------------------------------------------------------------------
// n("(?iI)(?W:\\p{Word})", "\xc5\xbf");
// FlagUnrecognized

// -------------------------------------------------------------------------
// n("(?iI)(?W:[\\p{Word}])", "\xc5\xbf");     // FAIL
// FlagUnrecognized

// -------------------------------------------------------------------------
// x2("(?iW:[[:word:]])",  "\xc5\xbf", 0, 2);
// FlagUnrecognized

// -------------------------------------------------------------------------
// x2("(?iW:[\\p{Word}])", "\xc5\xbf", 0, 2);
// FlagUnrecognized

// -------------------------------------------------------------------------
// x2("(?iW:[\\w])",       "\xc5\xbf", 0, 2);
// FlagUnrecognized

// -------------------------------------------------------------------------
// n("(?iW:\\p{Word})",    "\xc5\xbf");
// FlagUnrecognized

// -------------------------------------------------------------------------
// n("(?iW:\\w)",          "\xc5\xbf");
// FlagUnrecognized

// -------------------------------------------------------------------------
// x2("(?i)\\p{Word}",     "\xc5\xbf", 0, 2);
// UnicodePropertyNotFound

// -------------------------------------------------------------------------
// x2("(?i)\\w",           "\xc5\xbf", 0, 2);
scanner! { S1487 { mode M { token r#"(?i)\w"# => 0; } } }

// -------------------------------------------------------------------------
// x2("(?iW:[[:^word:]])",  "\xc5\xbf", 0, 2);
// FlagUnrecognized

// -------------------------------------------------------------------------
// x2("(?iW:[\\P{Word}])",  "\xc5\xbf", 0, 2);
// FlagUnrecognized

// -------------------------------------------------------------------------
// x2("(?iW:[\\W])",        "\xc5\xbf", 0, 2);
// FlagUnrecognized

// -------------------------------------------------------------------------
// x2("(?iW:\\P{Word})",    "\xc5\xbf", 0, 2);
// FlagUnrecognized

// -------------------------------------------------------------------------
// x2("(?iW:\\W)",          "\xc5\xbf", 0, 2);
// FlagUnrecognized

// -------------------------------------------------------------------------
// n("(?i)\\P{Word}",      "\xc5\xbf");
// UnicodePropertyNotFound

// -------------------------------------------------------------------------
// n("(?i)\\W",            "\xc5\xbf");
scanner! { S1494 { mode M { token r#"(?i)\W"# => 0; } } }

// -------------------------------------------------------------------------
// x2("(?iW:[[:^word:]])",  "s", 0, 1);
// FlagUnrecognized

// -------------------------------------------------------------------------
// x2("(?iW:[\\P{Word}])",  "s", 0, 1);
// FlagUnrecognized

// -------------------------------------------------------------------------
// x2("(?iW:[\\W])",        "s", 0, 1);
// FlagUnrecognized

// -------------------------------------------------------------------------
// n("(?iW:\\P{Word})",     "s");
// FlagUnrecognized

// -------------------------------------------------------------------------
// n("(?iW:\\W)",           "s");
// FlagUnrecognized

// -------------------------------------------------------------------------
// n("(?i)\\P{Word}",       "s");
// UnicodePropertyNotFound

// -------------------------------------------------------------------------
// n("(?i)\\W",             "s");
scan_test!(case_1501, s1501, S1501, r#"(?i)\W"#, "s", &[], 1501);

// -------------------------------------------------------------------------
// x2("[[:punct:]]", ":", 0, 1);
scan_test!(
    case_1502,
    s1502,
    S1502,
    r#"[[:punct:]]"#,
    ":",
    &[(":", 0, 1)],
    1502
);

// -------------------------------------------------------------------------
// x2("[[:punct:]]", "$", 0, 1);
scan_test!(
    case_1503,
    s1503,
    S1503,
    r#"[[:punct:]]"#,
    "$",
    &[("$", 0, 1)],
    1503
);

// -------------------------------------------------------------------------
// x2("[[:punct:]]+", "$+<=>^`|~", 0, 9);
scan_test!(
    case_1504,
    s1504,
    S1504,
    r#"[[:punct:]]+"#,
    "$+<=>^`|~",
    &[("$+<=>^`|~", 0, 9)],
    1504
);

// -------------------------------------------------------------------------
// n("[[:punct:]]", "a");
scan_test!(case_1505, s1505, S1505, r#"[[:punct:]]"#, "a", &[], 1505);

// -------------------------------------------------------------------------
// n("[[:punct:]]", "7");
scan_test!(case_1506, s1506, S1506, r#"[[:punct:]]"#, "7", &[], 1506);

// -------------------------------------------------------------------------
// *** Index error: x2("\\p{PosixPunct}+", "$¦", 0, 3); // 1507

// -------------------------------------------------------------------------
// x2("\\A.*\\R", "\n", 0, 1);
// EscapeUnrecognized

// -------------------------------------------------------------------------
// x2("\\A\\O*\\R", "\n", 0, 1);
// EscapeUnrecognized

// -------------------------------------------------------------------------
// x2("\\A\\n*\\R", "\n", 0, 1);
// EscapeUnrecognized

// -------------------------------------------------------------------------
// x2("\\A\\R*\\R", "\n", 0, 1);
// EscapeUnrecognized

// -------------------------------------------------------------------------
// x2("\\At*\\R", "\n", 0, 1);
// EscapeUnrecognized

// -------------------------------------------------------------------------
// x2("\\A.{0,99}\\R", "\n", 0, 1);
// EscapeUnrecognized

// -------------------------------------------------------------------------
// x2("\\A\\O{0,99}\\R", "\n", 0, 1);
// EscapeUnrecognized

// -------------------------------------------------------------------------
// x2("\\A\\n{0,99}\\R", "\n", 0, 1);
// EscapeUnrecognized

// -------------------------------------------------------------------------
// x2("\\A\\R{0,99}\\R", "\n", 0, 1);
// EscapeUnrecognized

// -------------------------------------------------------------------------
// x2("\\At{0,99}\\R", "\n", 0, 1);
// EscapeUnrecognized

// -------------------------------------------------------------------------
// x2("\\A.*\\n", "\n", 0, 1);       //  \n
// UnsupportedFeatureError("StartLine Look(Start)")

// -------------------------------------------------------------------------
// x2("\\A.{0,99}\\n", "\n", 0, 1);
// UnsupportedFeatureError("StartLine Look(Start)")

// -------------------------------------------------------------------------
// x2("\\A.*\\O", "\n", 0, 1);       //  \O
// EscapeUnrecognized

// -------------------------------------------------------------------------
// x2("\\A.{0,99}\\O", "\n", 0, 1);
// EscapeUnrecognized

// -------------------------------------------------------------------------
// x2("\\A.*\\s", "\n", 0, 1);       //  \s
// UnsupportedFeatureError("StartLine Look(Start)")

// -------------------------------------------------------------------------
// x2("\\A.{0,99}\\s", "\n", 0, 1);
// UnsupportedFeatureError("StartLine Look(Start)")

// -------------------------------------------------------------------------
// n("a(b|)+d", "abbbbbbbbbbbbbbbbbbbbbbbbbbbbbbcd"); /* https://www.haijin-boys.com/discussions/5079 */
scan_test!(
    case_1524,
    s1524,
    S1524,
    r#"a(b|)+d"#,
    "abbbbbbbbbbbbbbbbbbbbbbbbbbbbbbcd",
    &[],
    1524
);

// -------------------------------------------------------------------------
// e("   \xfd", "", ONIGERR_INVALID_CODE_POINT_VALUE); /* https://bugs.php.net/bug.php?id=77370 */
// -------------------------------------------------------------------------
// e("()0\\xfc00000\\xfc00000\\xfc00000\xfc", "", ONIGERR_INVALID_CODE_POINT_VALUE); /* https://bugs.php.net/bug.php?id=77371 */
// -------------------------------------------------------------------------
// e("000||0\xfa", "0", ONIGERR_INVALID_CODE_POINT_VALUE); /* https://bugs.php.net/bug.php?id=77381 */
// -------------------------------------------------------------------------
// e("(?i)000000000000000000000\xf0", "", ONIGERR_INVALID_CODE_POINT_VALUE); /* https://bugs.php.net/bug.php?id=77382 */
// -------------------------------------------------------------------------
// e("0000\\\xf5", "0", ONIGERR_INVALID_CODE_POINT_VALUE); /* https://bugs.php.net/bug.php?id=77385 */
// -------------------------------------------------------------------------
// e("(?i)FFF00000000000000000\xfd", "", ONIGERR_INVALID_CODE_POINT_VALUE); /* https://bugs.php.net/bug.php?id=77394 */
// -------------------------------------------------------------------------
// n("(?x)\n  (?<!\\+\\+|--)(?<=[({\\[,?=>:*]|&&|\\|\\||\\?|\\*\\/|^await|[^\\._$[:alnum:]]await|^return|[^\\._$[:alnum:]]return|^default|[^\\._$[:alnum:]]default|^yield|[^\\._$[:alnum:]]yield|^)\\s*\n  (?!<\\s*[_$[:alpha:]][_$[:alnum:]]*((\\s+extends\\s+[^=>])|,)) # look ahead is not type parameter of arrow\n  (?=(<)\\s*(?:([_$[:alpha:]][-_$[:alnum:].]*)(?<!\\.|-)(:))?((?:[a-z][a-z0-9]*|([_$[:alpha:]][-_$[:alnum:].]*))(?<!\\.|-))(?=((<\\s*)|(\\s+))(?!\\?)|\\/?>))", "    while (i < len && f(array[i]))"); /* Issue #192 */
// UnsupportedLookAround

// -------------------------------------------------------------------------
// *** Index error: x2("aaaaaaaaaaaaaaaaaaaaaaaあb", "aaaaaaaaaaaaaaaaaaaaaaaあb", 0, 27); /* Issue #221 */ // 1532

// -------------------------------------------------------------------------
// n("d{65538}+{61533} ", "d{65538}+{61533} ");

// PERFORMANCE!!! TODO: Check repetition count limits in the scanner.

// -------------------------------------------------------------------------
// e("x{55380}{77590}", "", ONIGERR_TOO_BIG_NUMBER_FOR_REPEAT_RANGE);

// -------------------------------------------------------------------------
// e("(xyz){40000}{99999}(?<name>vv)", "", ONIGERR_TOO_BIG_NUMBER_FOR_REPEAT_RANGE);

// -------------------------------------------------------------------------
// e("f{90000,90000}{80000,80000}", "", ONIGERR_TOO_BIG_NUMBER_FOR_REPEAT_RANGE);

// -------------------------------------------------------------------------
// n("f{90000,90000}{80000,80001}", "");

// -------------------------------------------------------------------------
// x2("\\p{Common}", "\xe3\x8b\xbf", 0, 3);   /* U+32FF */
scanner! { S1538 { mode M { token r#"\p{Common}"# => 0; } } }

// -------------------------------------------------------------------------
// x2("\\p{In_Enclosed_CJK_Letters_and_Months}", "\xe3\x8b\xbf", 0, 3); /* U+32FF */
// UnicodePropertyNotFound

// -------------------------------------------------------------------------
// e("\\x{7fffffff}", "", ONIGERR_INVALID_CODE_POINT_VALUE);

// -------------------------------------------------------------------------
// e("[\\x{7fffffff}]", "", ONIGERR_INVALID_CODE_POINT_VALUE);

// -------------------------------------------------------------------------
// e("\\u040", "@", ONIGERR_INVALID_CODE_POINT_VALUE);

// -------------------------------------------------------------------------
// e("\\u", "", ONIGERR_INVALID_CODE_POINT_VALUE);

// -------------------------------------------------------------------------
// e("(?<abc>\\g<abc>)", "zzzz", ONIGERR_NEVER_ENDING_RECURSION);

// -------------------------------------------------------------------------
// e("(*FOO)", "abcdefg", ONIGERR_UNDEFINED_CALLOUT_NAME);

// -------------------------------------------------------------------------
// e("*", "abc", ONIGERR_TARGET_OF_REPEAT_OPERATOR_NOT_SPECIFIED);

// -------------------------------------------------------------------------
// e("|*", "abc", ONIGERR_TARGET_OF_REPEAT_OPERATOR_NOT_SPECIFIED);

// -------------------------------------------------------------------------
// e("(?i)*", "abc", ONIGERR_TARGET_OF_REPEAT_OPERATOR_NOT_SPECIFIED);

// -------------------------------------------------------------------------
// e("(?:*)", "abc", ONIGERR_TARGET_OF_REPEAT_OPERATOR_NOT_SPECIFIED);

// -------------------------------------------------------------------------
// e("(?m:*)", "abc", ONIGERR_TARGET_OF_REPEAT_OPERATOR_NOT_SPECIFIED);

// -------------------------------------------------------------------------
// x2("(?:)*", "abc", 0, 0);
scan_test!(case_1551, s1551, S1551, r#"(?:)*"#, "abc", &[], 1551);

// -------------------------------------------------------------------------
// e("^*", "abc", ONIGERR_TARGET_OF_REPEAT_OPERATOR_INVALID);

// -------------------------------------------------------------------------
// e("abc|?", "", ONIGERR_TARGET_OF_REPEAT_OPERATOR_NOT_SPECIFIED);
